{
  "statistics": {
    "detectionDate": "2025-05-18T12:50:34.921Z",
    "formats": {
      "typescript": {
        "sources": {
          "app/api/scheduling/bookings/[bookingId]/transition/route.ts": {
            "lines": 104,
            "tokens": 863,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/profiles/builder/slug/[slug]/route.ts": {
            "lines": 94,
            "tokens": 627,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 54,
            "duplicatedTokens": 380,
            "percentage": 57.45,
            "percentageTokens": 60.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/profiles/builder/clerk/[clerkId]/route.ts": {
            "lines": 96,
            "tokens": 654,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/marketplace/builders/[id]/session-types/route.ts": {
            "lines": 64,
            "tokens": 429,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/auth/src/lib/express/server-auth.ts": {
            "lines": 252,
            "tokens": 1658,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 83,
            "duplicatedTokens": 547,
            "percentage": 32.94,
            "percentageTokens": 32.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/auth/src/lib/express/errors.ts": {
            "lines": 176,
            "tokens": 1033,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 136,
            "duplicatedTokens": 749,
            "percentage": 77.27,
            "percentageTokens": 72.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/auth/src/lib/express/adapter.ts": {
            "lines": 203,
            "tokens": 1427,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 53,
            "duplicatedTokens": 412,
            "percentage": 26.11,
            "percentageTokens": 28.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/stripe/sessions/[id]/route.ts": {
            "lines": 58,
            "tokens": 458,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/stripe/checkout/status/route.ts": {
            "lines": 119,
            "tokens": 876,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/stripe/checkout/create/route.ts": {
            "lines": 168,
            "tokens": 1420,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/sessions/available/route.ts": {
            "lines": 134,
            "tokens": 1232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/session-types/[id]/route.ts": {
            "lines": 138,
            "tokens": 1129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/calendly/sync-event-types/route.ts": {
            "lines": 65,
            "tokens": 455,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/calendly/scheduling-link/route.ts": {
            "lines": 109,
            "tokens": 791,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/calendly/event-types/route.ts": {
            "lines": 110,
            "tokens": 786,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/calendly/available-times/route.ts": {
            "lines": 81,
            "tokens": 643,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/bookings/recover/route.ts": {
            "lines": 77,
            "tokens": 602,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/bookings/initialize/route.ts": {
            "lines": 80,
            "tokens": 632,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 198,
            "percentage": 32.5,
            "percentageTokens": 31.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/bookings/create/route.ts": {
            "lines": 89,
            "tokens": 734,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 198,
            "percentage": 29.21,
            "percentageTokens": 26.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/bookings/confirm/route.ts": {
            "lines": 258,
            "tokens": 2178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/bookings/[bookingId]/route.ts": {
            "lines": 404,
            "tokens": 2585,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 152,
            "duplicatedTokens": 1051,
            "percentage": 37.62,
            "percentageTokens": 40.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/profiles/builder/[id]/route.ts": {
            "lines": 108,
            "tokens": 739,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 54,
            "duplicatedTokens": 380,
            "percentage": 50,
            "percentageTokens": 51.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/marketplace/builders/analytics/route.ts": {
            "lines": 66,
            "tokens": 538,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/marketplace/builders/[id]/route.ts": {
            "lines": 96,
            "tokens": 655,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/apps/edit/[id]/route.ts": {
            "lines": 130,
            "tokens": 1186,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 60,
            "duplicatedTokens": 442,
            "percentage": 46.15,
            "percentageTokens": 37.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/admin/session-types/[id]/route.ts": {
            "lines": 382,
            "tokens": 2723,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 100,
            "duplicatedTokens": 836,
            "percentage": 26.18,
            "percentageTokens": 30.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/scheduling/calendly/webhook-security.test.ts": {
            "lines": 198,
            "tokens": 1567,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/scheduling/calendly/service.test.ts": {
            "lines": 303,
            "tokens": 2424,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 47,
            "duplicatedTokens": 325,
            "percentage": 15.51,
            "percentageTokens": 13.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/scheduling/calendly/api-client.test.ts": {
            "lines": 415,
            "tokens": 3084,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 166,
            "duplicatedTokens": 1250,
            "percentage": 40,
            "percentageTokens": 40.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/auth/express/server-auth.test.ts": {
            "lines": 335,
            "tokens": 2915,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 61,
            "duplicatedTokens": 451,
            "percentage": 18.21,
            "percentageTokens": 15.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/auth/express/api-auth.test.ts": {
            "lines": 360,
            "tokens": 3376,
            "sources": 1,
            "clones": 24,
            "duplicatedLines": 269,
            "duplicatedTokens": 2360,
            "percentage": 74.72,
            "percentageTokens": 69.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/auth/express/adapter.test.ts": {
            "lines": 228,
            "tokens": 2182,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 30,
            "duplicatedTokens": 337,
            "percentage": 13.16,
            "percentageTokens": 15.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/auth/src/lib/types.ts": {
            "lines": 105,
            "tokens": 516,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 96,
            "duplicatedTokens": 450,
            "percentage": 91.43,
            "percentageTokens": 87.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/filter-panel/index.ts": {
            "lines": 5,
            "tokens": 31,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/error-boundaries/index.ts": {
            "lines": 4,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-list/index.ts": {
            "lines": 6,
            "tokens": 44,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-image/index.ts": {
            "lines": 7,
            "tokens": 44,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-card/index.ts": {
            "lines": 6,
            "tokens": 44,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/webhooks/stripe/route.ts": {
            "lines": 147,
            "tokens": 988,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 130,
            "percentage": 13.61,
            "percentageTokens": 13.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/webhooks/clerk/route.ts": {
            "lines": 683,
            "tokens": 4887,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/webhooks/calendly/route.ts": {
            "lines": 185,
            "tokens": 1386,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 130,
            "percentage": 10.81,
            "percentageTokens": 9.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/test/auth/route.ts": {
            "lines": 38,
            "tokens": 278,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/stripe/webhook/route.ts": {
            "lines": 119,
            "tokens": 793,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/stripe/checkout/route.ts": {
            "lines": 152,
            "tokens": 1213,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 96,
            "percentage": 5.26,
            "percentageTokens": 7.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/time-slots/route.ts": {
            "lines": 78,
            "tokens": 686,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 102,
            "duplicatedTokens": 820,
            "percentage": 130.77,
            "percentageTokens": 119.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/session-types/route.ts": {
            "lines": 144,
            "tokens": 1248,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 122,
            "percentage": 7.64,
            "percentageTokens": 9.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/builder-settings/route.ts": {
            "lines": 143,
            "tokens": 1185,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 66,
            "duplicatedTokens": 545,
            "percentage": 46.15,
            "percentageTokens": 45.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/bookings/route.ts": {
            "lines": 311,
            "tokens": 2224,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 88,
            "duplicatedTokens": 626,
            "percentage": 28.3,
            "percentageTokens": 28.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/availability-rules/route.ts": {
            "lines": 216,
            "tokens": 1774,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 113,
            "duplicatedTokens": 916,
            "percentage": 52.31,
            "percentageTokens": 51.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/scheduling/availability-exceptions/route.ts": {
            "lines": 285,
            "tokens": 2346,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 128,
            "duplicatedTokens": 1143,
            "percentage": 44.91,
            "percentageTokens": 48.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/profiles/user/route.ts": {
            "lines": 184,
            "tokens": 1427,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/profiles/builders/route.ts": {
            "lines": 118,
            "tokens": 940,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/profiles/builder/route.ts": {
            "lines": 321,
            "tokens": 2472,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 164,
            "percentage": 3.74,
            "percentageTokens": 6.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/marketplace/filters/route.ts": {
            "lines": 39,
            "tokens": 383,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 122,
            "percentage": 17.95,
            "percentageTokens": 31.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/marketplace/builders/route.ts": {
            "lines": 212,
            "tokens": 1634,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/health/db/route.ts": {
            "lines": 52,
            "tokens": 396,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/health/calendly/route.ts": {
            "lines": 117,
            "tokens": 761,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/auth/test/route.ts": {
            "lines": 99,
            "tokens": 563,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/apps/[builderId]/route.ts": {
            "lines": 114,
            "tokens": 988,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/admin/session-types/route.ts": {
            "lines": 213,
            "tokens": 1614,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 49,
            "duplicatedTokens": 489,
            "percentage": 23,
            "percentageTokens": 30.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/admin/builders/route.ts": {
            "lines": 102,
            "tokens": 774,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 19,
            "duplicatedTokens": 168,
            "percentage": 18.63,
            "percentageTokens": 21.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/scheduling/state-machine/state-machine.test.ts": {
            "lines": 441,
            "tokens": 3303,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 156,
            "duplicatedTokens": 1339,
            "percentage": 35.37,
            "percentageTokens": 40.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/scheduling/state-machine/security.test.ts": {
            "lines": 258,
            "tokens": 2220,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 197,
            "duplicatedTokens": 1594,
            "percentage": 76.36,
            "percentageTokens": 71.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/scheduling/state-machine/error-handling.test.ts": {
            "lines": 469,
            "tokens": 4187,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 99,
            "duplicatedTokens": 798,
            "percentage": 21.11,
            "percentageTokens": 19.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/sentry/user-context.test.ts": {
            "lines": 257,
            "tokens": 1932,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 182,
            "percentage": 9.34,
            "percentageTokens": 9.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/sentry/sensitive-data-filter.test.ts": {
            "lines": 228,
            "tokens": 1807,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/sentry/performance.test.ts": {
            "lines": 281,
            "tokens": 2285,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/sentry/instrumentation.test.ts": {
            "lines": 102,
            "tokens": 876,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 23,
            "duplicatedTokens": 233,
            "percentage": 22.55,
            "percentageTokens": 26.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/sentry/error-classification.test.ts": {
            "lines": 247,
            "tokens": 2225,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 74,
            "duplicatedTokens": 548,
            "percentage": 29.96,
            "percentageTokens": 24.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/sentry/config.test.ts": {
            "lines": 106,
            "tokens": 950,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/sentry/client-instrumentation.test.ts": {
            "lines": 120,
            "tokens": 1063,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 23,
            "duplicatedTokens": 233,
            "percentage": 19.17,
            "percentageTokens": 21.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/sentry/basic-instrumentation.test.ts": {
            "lines": 82,
            "tokens": 714,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/sentry/basic-config.test.ts": {
            "lines": 33,
            "tokens": 256,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/auth/express-api-auth.test.ts": {
            "lines": 208,
            "tokens": 1741,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 69,
            "percentage": 2.88,
            "percentageTokens": 3.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/api/scheduling/bookings.test.ts": {
            "lines": 274,
            "tokens": 2292,
            "sources": 1,
            "clones": 33,
            "duplicatedLines": 298,
            "duplicatedTokens": 3020,
            "percentage": 108.76,
            "percentageTokens": 131.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/api/scheduling/booking-by-id.test.ts": {
            "lines": 348,
            "tokens": 3069,
            "sources": 1,
            "clones": 34,
            "duplicatedLines": 346,
            "duplicatedTokens": 3309,
            "percentage": 99.43,
            "percentageTokens": 107.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/api/admin/session-types.test.ts": {
            "lines": 173,
            "tokens": 1570,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 79,
            "duplicatedTokens": 762,
            "percentage": 45.66,
            "percentageTokens": 48.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/api/admin/session-type-by-id.test.ts": {
            "lines": 251,
            "tokens": 2258,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 143,
            "duplicatedTokens": 1390,
            "percentage": 56.97,
            "percentageTokens": 61.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/auth/src/index.ts": {
            "lines": 41,
            "tokens": 179,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/state-machine/types.ts": {
            "lines": 290,
            "tokens": 1718,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/state-machine/storage.ts": {
            "lines": 291,
            "tokens": 2119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/state-machine/state-machine.ts": {
            "lines": 502,
            "tokens": 3516,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/state-machine/service.ts": {
            "lines": 441,
            "tokens": 3197,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 86,
            "percentage": 2.04,
            "percentageTokens": 2.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/state-machine/security.ts": {
            "lines": 300,
            "tokens": 2295,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/state-machine/index.ts": {
            "lines": 60,
            "tokens": 209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/state-machine/error-handling.ts": {
            "lines": 480,
            "tokens": 3269,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 86,
            "percentage": 1.88,
            "percentageTokens": 2.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/real-data/scheduling-service-ext.ts": {
            "lines": 301,
            "tokens": 2162,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 135,
            "duplicatedTokens": 1236,
            "percentage": 44.85,
            "percentageTokens": 57.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/webhook-security.ts": {
            "lines": 261,
            "tokens": 1442,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/types.ts": {
            "lines": 226,
            "tokens": 1145,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 96,
            "duplicatedTokens": 570,
            "percentage": 42.48,
            "percentageTokens": 49.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/timezone-utils.ts": {
            "lines": 384,
            "tokens": 2391,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/service.ts": {
            "lines": 365,
            "tokens": 2511,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/refund-service.ts": {
            "lines": 312,
            "tokens": 1864,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/key-manager.ts": {
            "lines": 343,
            "tokens": 2163,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/index.ts": {
            "lines": 21,
            "tokens": 89,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/conflict-handler.ts": {
            "lines": 453,
            "tokens": 2892,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/config.ts": {
            "lines": 157,
            "tokens": 968,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/client-api.ts": {
            "lines": 157,
            "tokens": 981,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/caching.ts": {
            "lines": 320,
            "tokens": 1821,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/booking-flow.ts": {
            "lines": 128,
            "tokens": 719,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/api-client.ts": {
            "lines": 775,
            "tokens": 4679,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 40,
            "duplicatedTokens": 408,
            "percentage": 5.16,
            "percentageTokens": 8.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/calendly/analytics.ts": {
            "lines": 322,
            "tokens": 1783,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/marketplace/data/marketplace-service.ts": {
            "lines": 703,
            "tokens": 5391,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 115,
            "duplicatedTokens": 1394,
            "percentage": 16.36,
            "percentageTokens": 25.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/marketplace/data/demo-account-handler.ts": {
            "lines": 78,
            "tokens": 420,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/marketplace/data/analytics-service.ts": {
            "lines": 284,
            "tokens": 1680,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 130,
            "percentage": 7.75,
            "percentageTokens": 7.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/server/tracer.server.ts": {
            "lines": 228,
            "tokens": 1517,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/server/trace-context.server.ts": {
            "lines": 88,
            "tokens": 589,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 57,
            "duplicatedTokens": 379,
            "percentage": 64.77,
            "percentageTokens": 64.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/server/index.ts": {
            "lines": 17,
            "tokens": 71,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/server/empty-rum.server.ts": {
            "lines": 69,
            "tokens": 271,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/server/empty-logs.server.ts": {
            "lines": 59,
            "tokens": 304,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/interfaces/tracer.ts": {
            "lines": 95,
            "tokens": 348,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/interfaces/trace-context.ts": {
            "lines": 56,
            "tokens": 180,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/interfaces/rum.ts": {
            "lines": 92,
            "tokens": 371,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 121,
            "percentage": 20.65,
            "percentageTokens": 32.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/interfaces/logs.ts": {
            "lines": 85,
            "tokens": 311,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/interfaces/index.ts": {
            "lines": 24,
            "tokens": 105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/config/tracer-config.ts": {
            "lines": 50,
            "tokens": 291,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/config/rum-config.ts": {
            "lines": 73,
            "tokens": 500,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 53,
            "duplicatedTokens": 357,
            "percentage": 72.6,
            "percentageTokens": 71.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/config/logs-config.ts": {
            "lines": 48,
            "tokens": 288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/config/index.ts": {
            "lines": 9,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/config/base-config.ts": {
            "lines": 177,
            "tokens": 958,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 126,
            "duplicatedTokens": 738,
            "percentage": 71.19,
            "percentageTokens": 77.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/client/trace-context.client.ts": {
            "lines": 54,
            "tokens": 283,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 144,
            "percentage": 40.74,
            "percentageTokens": 50.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/client/rum.client.ts": {
            "lines": 179,
            "tokens": 1131,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 196,
            "percentage": 21.23,
            "percentageTokens": 17.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/client/logs.client.ts": {
            "lines": 145,
            "tokens": 1070,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 108,
            "percentage": 9.66,
            "percentageTokens": 10.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/client/index.ts": {
            "lines": 17,
            "tokens": 71,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/client/empty-tracer.client.ts": {
            "lines": 126,
            "tokens": 711,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/express/token-hooks.ts": {
            "lines": 147,
            "tokens": 1160,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/express/server-auth.ts": {
            "lines": 259,
            "tokens": 1734,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 94,
            "duplicatedTokens": 627,
            "percentage": 36.29,
            "percentageTokens": 36.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/express/role-hooks.ts": {
            "lines": 79,
            "tokens": 455,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/express/permission-hooks.ts": {
            "lines": 102,
            "tokens": 682,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 174,
            "percentage": 13.73,
            "percentageTokens": 25.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/express/middleware.ts": {
            "lines": 195,
            "tokens": 1080,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 58,
            "duplicatedTokens": 226,
            "percentage": 29.74,
            "percentageTokens": 20.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/express/index.ts": {
            "lines": 77,
            "tokens": 286,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/express/errors.ts": {
            "lines": 298,
            "tokens": 1781,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 136,
            "duplicatedTokens": 749,
            "percentage": 45.64,
            "percentageTokens": 42.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/express/enhanced-middleware.ts": {
            "lines": 135,
            "tokens": 984,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/express/client-auth.ts": {
            "lines": 358,
            "tokens": 2316,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 77,
            "percentage": 1.96,
            "percentageTokens": 3.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/express/api-auth.ts": {
            "lines": 444,
            "tokens": 2941,
            "sources": 1,
            "clones": 13,
            "duplicatedLines": 233,
            "duplicatedTokens": 1463,
            "percentage": 52.48,
            "percentageTokens": 49.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/express/adapter.ts": {
            "lines": 196,
            "tokens": 1690,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 40,
            "duplicatedTokens": 255,
            "percentage": 20.41,
            "percentageTokens": 15.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/clerk/verify-auth-migration.ts": {
            "lines": 452,
            "tokens": 3784,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 200,
            "percentage": 5.75,
            "percentageTokens": 5.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/clerk/helpers.ts": {
            "lines": 153,
            "tokens": 1012,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/clerk/api-auth.ts": {
            "lines": 212,
            "tokens": 1461,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 170,
            "percentage": 4.72,
            "percentageTokens": 11.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/index.ts": {
            "lines": 33,
            "tokens": 255,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/composite/index.ts": {
            "lines": 6,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/trust/ui/index.ts": {
            "lines": 6,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/ui/index.ts": {
            "lines": 6,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/index.ts": {
            "lines": 7,
            "tokens": 49,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/ui/index.ts": {
            "lines": 9,
            "tokens": 47,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/payment/ui/index.ts": {
            "lines": 6,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/utils/index.ts": {
            "lines": 5,
            "tokens": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/utils/image-helpers.ts": {
            "lines": 55,
            "tokens": 365,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/utils/filter-helpers.ts": {
            "lines": 112,
            "tokens": 906,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/ui/index.ts": {
            "lines": 9,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/hooks/use-builder-search.ts": {
            "lines": 112,
            "tokens": 906,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/hooks/use-builder-filter.ts": {
            "lines": 220,
            "tokens": 1743,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/hooks/index.ts": {
            "lines": 5,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/index.ts": {
            "lines": 25,
            "tokens": 135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/index.ts": {
            "lines": 12,
            "tokens": 86,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/learning/ui/index.ts": {
            "lines": 7,
            "tokens": 29,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/ui/index.ts": {
            "lines": 6,
            "tokens": 20,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/community/ui/index.ts": {
            "lines": 8,
            "tokens": 42,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/ui/index.ts": {
            "lines": 6,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/ui/index.ts": {
            "lines": 6,
            "tokens": 12,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/protected/route.ts": {
            "lines": 107,
            "tokens": 795,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/auth-test/route.ts": {
            "lines": 128,
            "tokens": 753,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/seed/index.ts": {
            "lines": 4,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/seed/domain-seeds.ts": {
            "lines": 206,
            "tokens": 1487,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/seed/base-seed.ts": {
            "lines": 472,
            "tokens": 3769,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 72,
            "duplicatedTokens": 654,
            "percentage": 15.25,
            "percentageTokens": 17.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/factory/index.ts": {
            "lines": 284,
            "tokens": 1888,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/e2e/index.ts": {
            "lines": 4,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/e2e/auth-utils.ts": {
            "lines": 148,
            "tokens": 947,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/e2e/async-utils.ts": {
            "lines": 224,
            "tokens": 1620,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/database/worker-isolation.ts": {
            "lines": 80,
            "tokens": 492,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/database/transaction.ts": {
            "lines": 76,
            "tokens": 427,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 49,
            "duplicatedTokens": 305,
            "percentage": 64.47,
            "percentageTokens": 71.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/database/seed-test-users.ts": {
            "lines": 198,
            "tokens": 1244,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/database/reset.ts": {
            "lines": 65,
            "tokens": 386,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/database/index.ts": {
            "lines": 5,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/utils/profile-form-helpers.test.ts": {
            "lines": 162,
            "tokens": 1292,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/logger.test.ts": {
            "lines": 160,
            "tokens": 1587,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/enhanced-logger.test.ts": {
            "lines": 247,
            "tokens": 2226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/auth/auth-routes.test.ts": {
            "lines": 13,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/scheduling/scheduling-handlers.ts": {
            "lines": 55,
            "tokens": 558,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/scheduling/mock-session-types.ts": {
            "lines": 70,
            "tokens": 676,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/scheduling/mock-data.ts": {
            "lines": 109,
            "tokens": 637,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/scheduling/mock-calendly-data.ts": {
            "lines": 404,
            "tokens": 2712,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 182,
            "percentage": 6.93,
            "percentageTokens": 6.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/scheduling/calendly-handlers.ts": {
            "lines": 208,
            "tokens": 1726,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/profile/profile-handlers.ts": {
            "lines": 48,
            "tokens": 473,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 178,
            "percentage": 33.33,
            "percentageTokens": 37.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/profile/mock-profiles.ts": {
            "lines": 51,
            "tokens": 353,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/marketplace/mock-builders.ts": {
            "lines": 52,
            "tokens": 386,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/marketplace/marketplace-handlers.ts": {
            "lines": 36,
            "tokens": 334,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/auth/mock-users.ts": {
            "lines": 36,
            "tokens": 242,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/auth/auth-handlers.ts": {
            "lines": 18,
            "tokens": 175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/integration/webhooks/calendly-webhook.test.ts": {
            "lines": 213,
            "tokens": 1588,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 63,
            "duplicatedTokens": 405,
            "percentage": 29.58,
            "percentageTokens": 25.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/integration/booking-payment/calendly-stripe-flow.test.ts": {
            "lines": 480,
            "tokens": 3941,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 160,
            "percentage": 3.75,
            "percentageTokens": 4.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/visual/visual-regression.test.ts": {
            "lines": 34,
            "tokens": 303,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/visual/snapshots.test.ts": {
            "lines": 63,
            "tokens": 519,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/visual/chromatic-setup.ts": {
            "lines": 61,
            "tokens": 425,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/utils/webhook-simulators.ts": {
            "lines": 612,
            "tokens": 3835,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 78,
            "duplicatedTokens": 626,
            "percentage": 12.75,
            "percentageTokens": 16.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/utils/test-data-helpers.ts": {
            "lines": 384,
            "tokens": 2411,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/utils/index.ts": {
            "lines": 4,
            "tokens": 18,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/utils/feature-flag-utils.ts": {
            "lines": 186,
            "tokens": 887,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/utils/database-isolation.ts": {
            "lines": 511,
            "tokens": 3416,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 109,
            "percentage": 3.72,
            "percentageTokens": 3.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/page-objects/marketplace-pages.ts": {
            "lines": 241,
            "tokens": 1691,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/page-objects/index.ts": {
            "lines": 6,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/page-objects/booking-pages.ts": {
            "lines": 427,
            "tokens": 3067,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/page-objects/base-page.ts": {
            "lines": 115,
            "tokens": 764,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/page-objects/auth-pages.ts": {
            "lines": 237,
            "tokens": 1674,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/marketplace/search-filter.test.ts": {
            "lines": 286,
            "tokens": 2465,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 250,
            "percentage": 9.79,
            "percentageTokens": 10.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/marketplace/marketplace-journey.test.ts": {
            "lines": 204,
            "tokens": 1491,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/marketplace/builder-profile.test.ts": {
            "lines": 249,
            "tokens": 2141,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 162,
            "percentage": 5.62,
            "percentageTokens": 7.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/marketplace/browse-experience.test.ts": {
            "lines": 143,
            "tokens": 1311,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/fixtures/project.ts": {
            "lines": 71,
            "tokens": 407,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/booking/payment-integration.test.ts": {
            "lines": 226,
            "tokens": 2130,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 167,
            "duplicatedTokens": 1777,
            "percentage": 73.89,
            "percentageTokens": 83.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/booking/calendly-booking-journey.test.ts": {
            "lines": 270,
            "tokens": 1995,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/booking/calendly-booking-flow.test.ts": {
            "lines": 211,
            "tokens": 1545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/booking/booking-management.test.ts": {
            "lines": 194,
            "tokens": 1637,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/booking/booking-flow.test.ts": {
            "lines": 213,
            "tokens": 1974,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 43,
            "duplicatedTokens": 497,
            "percentage": 20.19,
            "percentageTokens": 25.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/auth/signup.test.ts": {
            "lines": 79,
            "tokens": 765,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/auth/signin.test.ts": {
            "lines": 166,
            "tokens": 1525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/auth/profile-management.test.ts": {
            "lines": 142,
            "tokens": 1332,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/auth/complete-auth-journey.test.ts": {
            "lines": 178,
            "tokens": 1336,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/auth/auth-flow.test.ts": {
            "lines": 120,
            "tokens": 969,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 27,
            "duplicatedTokens": 224,
            "percentage": 22.5,
            "percentageTokens": 23.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/api/webhooks/webhook-handlers.test.ts": {
            "lines": 328,
            "tokens": 2550,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 84,
            "duplicatedTokens": 675,
            "percentage": 25.61,
            "percentageTokens": 26.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/api/marketplace/builders.test.ts": {
            "lines": 102,
            "tokens": 894,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "tests/stripe/stripe-payment.test.ts": {
            "lines": 190,
            "tokens": 1324,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 74,
            "percentage": 5.26,
            "percentageTokens": 5.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "tests/profile/profile-actions.test.ts": {
            "lines": 209,
            "tokens": 1723,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 202,
            "percentage": 10.53,
            "percentageTokens": 11.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "tests/calendly/calendly-stripe-integration.test.ts": {
            "lines": 675,
            "tokens": 4956,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 64,
            "duplicatedTokens": 438,
            "percentage": 9.48,
            "percentageTokens": 8.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "tests/auth/auth-flow.test.ts": {
            "lines": 225,
            "tokens": 1679,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 51,
            "duplicatedTokens": 390,
            "percentage": 22.67,
            "percentageTokens": 23.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "sanity/schemaTypes/index.ts": {
            "lines": 4,
            "tokens": 45,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "sanity/lib/live.ts": {
            "lines": 12,
            "tokens": 83,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "sanity/lib/image.ts": {
            "lines": 10,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "sanity/lib/client.ts": {
            "lines": 9,
            "tokens": 66,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/profile-form-helpers.ts": {
            "lines": 202,
            "tokens": 1863,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils/format-utils.ts": {
            "lines": 59,
            "tokens": 563,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/trust/utils.ts": {
            "lines": 128,
            "tokens": 708,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/trust/types.ts": {
            "lines": 70,
            "tokens": 285,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/trust/schemas.ts": {
            "lines": 57,
            "tokens": 411,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/trust/index.ts": {
            "lines": 19,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/trust/api.ts": {
            "lines": 68,
            "tokens": 366,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/trust/actions.ts": {
            "lines": 195,
            "tokens": 970,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/stripe/utils.ts": {
            "lines": 13,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/stripe/types.ts": {
            "lines": 98,
            "tokens": 527,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/stripe/stripe-server.ts": {
            "lines": 635,
            "tokens": 3785,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/stripe/stripe-client.ts": {
            "lines": 312,
            "tokens": 1851,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/stripe/schemas.ts": {
            "lines": 50,
            "tokens": 304,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 96,
            "percentage": 16,
            "percentageTokens": 31.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/stripe/index.ts": {
            "lines": 10,
            "tokens": 48,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/stripe/api.ts": {
            "lines": 10,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/stripe/actions.ts": {
            "lines": 797,
            "tokens": 5184,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 224,
            "percentage": 4.27,
            "percentageTokens": 4.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/sentry/user-context.ts": {
            "lines": 332,
            "tokens": 1971,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/sentry/sensitive-data-filter.ts": {
            "lines": 334,
            "tokens": 2262,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/sentry/performance.ts": {
            "lines": 478,
            "tokens": 2820,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/sentry/index.ts": {
            "lines": 42,
            "tokens": 167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/sentry/error-classification.ts": {
            "lines": 352,
            "tokens": 2213,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 52,
            "duplicatedTokens": 464,
            "percentage": 14.77,
            "percentageTokens": 20.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/sentry/config.ts": {
            "lines": 110,
            "tokens": 743,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/webhook-security.ts": {
            "lines": 250,
            "tokens": 1621,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/utils.ts": {
            "lines": 13,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/types.ts": {
            "lines": 132,
            "tokens": 717,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/schemas.ts": {
            "lines": 117,
            "tokens": 1328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/mock-data.ts": {
            "lines": 192,
            "tokens": 1362,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/index.ts": {
            "lines": 13,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/email.ts": {
            "lines": 69,
            "tokens": 386,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/api.ts": {
            "lines": 10,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/scheduling/actions.ts": {
            "lines": 328,
            "tokens": 2360,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/profile/utils.ts": {
            "lines": 19,
            "tokens": 26,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/profile/types.ts": {
            "lines": 188,
            "tokens": 1226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/profile/schemas.ts": {
            "lines": 143,
            "tokens": 1770,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 150,
            "percentage": 6.99,
            "percentageTokens": 8.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/profile/index.ts": {
            "lines": 11,
            "tokens": 57,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/profile/data-service.ts": {
            "lines": 531,
            "tokens": 3722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/profile/api.ts": {
            "lines": 229,
            "tokens": 1858,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 114,
            "duplicatedTokens": 894,
            "percentage": 49.78,
            "percentageTokens": 48.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/profile/actions.ts": {
            "lines": 770,
            "tokens": 6499,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 105,
            "duplicatedTokens": 996,
            "percentage": 13.64,
            "percentageTokens": 15.33,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/payment/utils.ts": {
            "lines": 172,
            "tokens": 926,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/payment/types.ts": {
            "lines": 162,
            "tokens": 858,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/payment/schemas.ts": {
            "lines": 124,
            "tokens": 890,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/payment/index.ts": {
            "lines": 44,
            "tokens": 160,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/payment/api.ts": {
            "lines": 322,
            "tokens": 2091,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/payment/actions.ts": {
            "lines": 391,
            "tokens": 1545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/mock-data/profiles.ts": {
            "lines": 372,
            "tokens": 2453,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/validation.ts": {
            "lines": 331,
            "tokens": 2478,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 156,
            "percentage": 6.04,
            "percentageTokens": 6.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/test-utils.ts": {
            "lines": 180,
            "tokens": 1056,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 172,
            "duplicatedTokens": 992,
            "percentage": 95.56,
            "percentageTokens": 93.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/rbac.ts": {
            "lines": 225,
            "tokens": 1477,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/profile-auth.ts": {
            "lines": 279,
            "tokens": 2070,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/performance.ts": {
            "lines": 202,
            "tokens": 1278,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/logging.ts": {
            "lines": 142,
            "tokens": 1356,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/index.ts": {
            "lines": 21,
            "tokens": 101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/factory.ts": {
            "lines": 172,
            "tokens": 1240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/error-handling.ts": {
            "lines": 127,
            "tokens": 846,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/config.ts": {
            "lines": 298,
            "tokens": 1858,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/middleware/api-protection.ts": {
            "lines": 140,
            "tokens": 787,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/marketplace/utils.ts": {
            "lines": 20,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/marketplace/types.ts": {
            "lines": 174,
            "tokens": 1186,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/marketplace/schemas.ts": {
            "lines": 17,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/marketplace/index.ts": {
            "lines": 10,
            "tokens": 48,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/marketplace/data-service.ts": {
            "lines": 114,
            "tokens": 910,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 105,
            "duplicatedTokens": 830,
            "percentage": 92.11,
            "percentageTokens": 91.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/marketplace/app-service.ts": {
            "lines": 104,
            "tokens": 838,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/marketplace/api.ts": {
            "lines": 243,
            "tokens": 1824,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 127,
            "duplicatedTokens": 960,
            "percentage": 52.26,
            "percentageTokens": 52.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/marketplace/actions.ts": {
            "lines": 63,
            "tokens": 424,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/learning/utils.ts": {
            "lines": 167,
            "tokens": 1113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/learning/types.ts": {
            "lines": 115,
            "tokens": 530,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/learning/schemas.ts": {
            "lines": 89,
            "tokens": 760,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/learning/index.ts": {
            "lines": 19,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/learning/api.ts": {
            "lines": 149,
            "tokens": 858,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/learning/actions.ts": {
            "lines": 238,
            "tokens": 1170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/tracer.ts": {
            "lines": 179,
            "tokens": 1208,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 97,
            "percentage": 8.38,
            "percentageTokens": 8.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/server.ts": {
            "lines": 36,
            "tokens": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/server-tracer.ts": {
            "lines": 140,
            "tokens": 840,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/server-actions.ts": {
            "lines": 28,
            "tokens": 148,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/sentry-integration.ts": {
            "lines": 136,
            "tokens": 944,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/rum-config.ts": {
            "lines": 98,
            "tokens": 641,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 72,
            "duplicatedTokens": 478,
            "percentage": 73.47,
            "percentageTokens": 74.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/init.ts": {
            "lines": 406,
            "tokens": 2369,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 67,
            "duplicatedTokens": 401,
            "percentage": 16.5,
            "percentageTokens": 16.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/index.ts": {
            "lines": 22,
            "tokens": 57,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/context-propagation.ts": {
            "lines": 142,
            "tokens": 771,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 35,
            "duplicatedTokens": 235,
            "percentage": 24.65,
            "percentageTokens": 30.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/config.ts": {
            "lines": 153,
            "tokens": 884,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 126,
            "duplicatedTokens": 738,
            "percentage": 82.35,
            "percentageTokens": 83.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/client.ts": {
            "lines": 28,
            "tokens": 124,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/auth-monitoring.ts": {
            "lines": 300,
            "tokens": 1762,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/constants/pathways.ts": {
            "lines": 107,
            "tokens": 696,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/community/utils.ts": {
            "lines": 148,
            "tokens": 1042,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/community/types.ts": {
            "lines": 130,
            "tokens": 555,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/community/schemas.ts": {
            "lines": 87,
            "tokens": 706,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/community/index.ts": {
            "lines": 19,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/community/api.ts": {
            "lines": 205,
            "tokens": 1197,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/community/actions.ts": {
            "lines": 302,
            "tokens": 1836,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/utils.ts": {
            "lines": 14,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/types.ts": {
            "lines": 101,
            "tokens": 486,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 96,
            "duplicatedTokens": 450,
            "percentage": 95.05,
            "percentageTokens": 92.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/test-utils.ts": {
            "lines": 425,
            "tokens": 2914,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/security-logging.ts": {
            "lines": 320,
            "tokens": 2196,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/schemas.ts": {
            "lines": 15,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/index.ts": {
            "lines": 10,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/hooks.ts": {
            "lines": 13,
            "tokens": 64,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/data-access.ts": {
            "lines": 163,
            "tokens": 1030,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 186,
            "percentage": 9.82,
            "percentageTokens": 18.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/clerk-reference.ts": {
            "lines": 46,
            "tokens": 173,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 73,
            "duplicatedTokens": 281,
            "percentage": 158.7,
            "percentageTokens": 162.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/clerk-middleware.ts": {
            "lines": 84,
            "tokens": 448,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 31,
            "duplicatedTokens": 118,
            "percentage": 36.9,
            "percentageTokens": 26.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/clerk-hooks.ts": {
            "lines": 102,
            "tokens": 455,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/clerk-fix.ts": {
            "lines": 46,
            "tokens": 173,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 46,
            "duplicatedTokens": 173,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/api.ts": {
            "lines": 14,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/api-auth.ts": {
            "lines": 136,
            "tokens": 731,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/actions.ts": {
            "lines": 443,
            "tokens": 3230,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 212,
            "percentage": 6.77,
            "percentageTokens": 6.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/admin/utils.ts": {
            "lines": 393,
            "tokens": 2772,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/admin/types.ts": {
            "lines": 225,
            "tokens": 1215,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/admin/schemas.ts": {
            "lines": 156,
            "tokens": 1514,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/admin/index.ts": {
            "lines": 39,
            "tokens": 142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/admin/api.ts": {
            "lines": 427,
            "tokens": 2806,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 104,
            "duplicatedTokens": 744,
            "percentage": 24.36,
            "percentageTokens": 26.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/admin/actions.ts": {
            "lines": 10,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/trust/index.ts": {
            "lines": 6,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/scheduling/use-booking-flow.ts": {
            "lines": 550,
            "tokens": 4090,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 68,
            "duplicatedTokens": 534,
            "percentage": 12.36,
            "percentageTokens": 13.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/scheduling/index.ts": {
            "lines": 7,
            "tokens": 29,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/profile/index.ts": {
            "lines": 6,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/payment/index.ts": {
            "lines": 6,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/marketplace/index.ts": {
            "lines": 6,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/learning/use-learning-state.ts": {
            "lines": 85,
            "tokens": 669,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/learning/index.ts": {
            "lines": 6,
            "tokens": 12,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/community/index.ts": {
            "lines": 6,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/auth/index.ts": {
            "lines": 207,
            "tokens": 987,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/admin/index.ts": {
            "lines": 6,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/middleware-mock-investigation/typed-mock-test.ts": {
            "lines": 79,
            "tokens": 802,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 46,
            "duplicatedTokens": 500,
            "percentage": 58.23,
            "percentageTokens": 62.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/middleware-mock-investigation/nextjs-mock-solution.ts": {
            "lines": 88,
            "tokens": 763,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 79,
            "duplicatedTokens": 691,
            "percentage": 89.77,
            "percentageTokens": 90.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/middleware-mock-investigation/mock-test.ts": {
            "lines": 32,
            "tokens": 289,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/middleware-mock-investigation/improved-test-utils.ts": {
            "lines": 158,
            "tokens": 970,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 172,
            "duplicatedTokens": 992,
            "percentage": 108.86,
            "percentageTokens": 102.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/middleware-mock-investigation/improved-solution.ts": {
            "lines": 93,
            "tokens": 805,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 79,
            "duplicatedTokens": 691,
            "percentage": 84.95,
            "percentageTokens": 85.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/middleware-mock-investigation/improved-integration-test.ts": {
            "lines": 121,
            "tokens": 1090,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/middleware-mock-investigation/factory-test-solution.ts": {
            "lines": 142,
            "tokens": 1215,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 228,
            "percentage": 15.49,
            "percentageTokens": 18.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/utils/index.ts": {
            "lines": 7,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/index.ts": {
            "lines": 36,
            "tokens": 260,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/trust/index.ts": {
            "lines": 10,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/index.ts": {
            "lines": 33,
            "tokens": 328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/providers/index.ts": {
            "lines": 10,
            "tokens": 74,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/index.ts": {
            "lines": 22,
            "tokens": 199,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/platform/index.ts": {
            "lines": 5,
            "tokens": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/payment/index.ts": {
            "lines": 12,
            "tokens": 67,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/index.ts": {
            "lines": 49,
            "tokens": 149,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/index.ts": {
            "lines": 13,
            "tokens": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/index.ts": {
            "lines": 31,
            "tokens": 313,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/learning/index.ts": {
            "lines": 7,
            "tokens": 25,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/types.ts": {
            "lines": 96,
            "tokens": 540,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/index.ts": {
            "lines": 26,
            "tokens": 270,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/error-boundaries/index.ts": {
            "lines": 7,
            "tokens": 52,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/community/index.ts": {
            "lines": 9,
            "tokens": 24,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/client/index.ts": {
            "lines": 6,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/booking/index.ts": {
            "lines": 6,
            "tokens": 20,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/index.ts": {
            "lines": 47,
            "tokens": 190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/index.ts": {
            "lines": 12,
            "tokens": 51,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/api/route-types.ts": {
            "lines": 11,
            "tokens": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(marketing)/metadata.ts": {
            "lines": 106,
            "tokens": 600,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/vitest-utils.ts": {
            "lines": 173,
            "tokens": 1085,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 82,
            "percentage": 6.36,
            "percentageTokens": 7.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/models.ts": {
            "lines": 94,
            "tokens": 518,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/mock-builders.ts": {
            "lines": 128,
            "tokens": 1304,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/index.ts": {
            "lines": 6,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/express-auth-test-utils.ts": {
            "lines": 394,
            "tokens": 2644,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 48,
            "duplicatedTokens": 467,
            "percentage": 12.18,
            "percentageTokens": 17.66,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/e2e-auth-utils.ts": {
            "lines": 423,
            "tokens": 3146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/e2e-async-utils.ts": {
            "lines": 387,
            "tokens": 3095,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/db-test-utils.ts": {
            "lines": 138,
            "tokens": 875,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 54,
            "duplicatedTokens": 516,
            "percentage": 39.13,
            "percentageTokens": 58.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/calendly-test-utils.ts": {
            "lines": 171,
            "tokens": 977,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/auth-test-utils.ts": {
            "lines": 451,
            "tokens": 3627,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 36,
            "duplicatedTokens": 406,
            "percentage": 7.98,
            "percentageTokens": 11.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/api-test-utils.ts": {
            "lines": 739,
            "tokens": 5368,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 268,
            "duplicatedTokens": 1246,
            "percentage": 36.27,
            "percentageTokens": 23.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/a11y-utils.ts": {
            "lines": 161,
            "tokens": 1342,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/msw-integration.test.ts": {
            "lines": 360,
            "tokens": 2999,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/server.ts": {
            "lines": 81,
            "tokens": 628,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/initMocks.ts": {
            "lines": 195,
            "tokens": 1173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/mocks/handlers.ts": {
            "lines": 25,
            "tokens": 261,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/global-setup.ts": {
            "lines": 28,
            "tokens": 198,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/e2e/basic.test.ts": {
            "lines": 39,
            "tokens": 328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "tests-examples/demo-todo-app.spec.ts": {
            "lines": 436,
            "tokens": 4616,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 32,
            "duplicatedTokens": 324,
            "percentage": 7.34,
            "percentageTokens": 7.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "sanity/structure.ts": {
            "lines": 6,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "sanity/env.ts": {
            "lines": 19,
            "tokens": 130,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/utils.ts": {
            "lines": 45,
            "tokens": 331,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/session-types.ts": {
            "lines": 223,
            "tokens": 1578,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/server-feature-flags.ts": {
            "lines": 53,
            "tokens": 373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/rate-limit.ts": {
            "lines": 186,
            "tokens": 1280,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/prisma-types.ts": {
            "lines": 102,
            "tokens": 647,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 278,
            "percentage": 31.37,
            "percentageTokens": 42.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/prisma-extensions.ts": {
            "lines": 41,
            "tokens": 310,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/logger.ts": {
            "lines": 278,
            "tokens": 1972,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 193,
            "percentage": 9.35,
            "percentageTokens": 9.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/json-utilities.ts": {
            "lines": 59,
            "tokens": 376,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 278,
            "percentage": 54.24,
            "percentageTokens": 73.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/feature-flags.ts": {
            "lines": 98,
            "tokens": 617,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/enhanced-logger.ts": {
            "lines": 79,
            "tokens": 687,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 89,
            "percentage": 16.46,
            "percentageTokens": 12.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/enhanced-logger.server.ts": {
            "lines": 269,
            "tokens": 1504,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 215,
            "duplicatedTokens": 1434,
            "percentage": 79.93,
            "percentageTokens": 95.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/enhanced-logger.client.ts": {
            "lines": 235,
            "tokens": 1484,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 202,
            "duplicatedTokens": 1330,
            "percentage": 85.96,
            "percentageTokens": 89.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/db.ts": {
            "lines": 139,
            "tokens": 894,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/db-utils.ts": {
            "lines": 373,
            "tokens": 2242,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 176,
            "percentage": 5.36,
            "percentageTokens": 7.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/db-monitoring.ts": {
            "lines": 252,
            "tokens": 1775,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/db-error-handling.ts": {
            "lines": 425,
            "tokens": 2771,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/csrf.ts": {
            "lines": 162,
            "tokens": 909,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/use-on-click-outside.ts": {
            "lines": 33,
            "tokens": 264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/use-debounce.ts": {
            "lines": 22,
            "tokens": 150,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "hooks/index.ts": {
            "lines": 17,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "e2e/global-setup.ts": {
            "lines": 69,
            "tokens": 545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "e2e/example.spec.ts": {
            "lines": 17,
            "tokens": 163,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/index.ts": {
            "lines": 133,
            "tokens": 1832,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "vitest.setup.ts": {
            "lines": 139,
            "tokens": 1126,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 82,
            "percentage": 7.91,
            "percentageTokens": 7.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "vitest.config.ts": {
            "lines": 53,
            "tokens": 399,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "tailwind.config.ts": {
            "lines": 251,
            "tokens": 1384,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "sanity.config.ts": {
            "lines": 27,
            "tokens": 144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "sanity.cli.ts": {
            "lines": 9,
            "tokens": 61,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "playwright.visual.config.ts": {
            "lines": 50,
            "tokens": 376,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 229,
            "percentage": 56,
            "percentageTokens": 60.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "playwright.simple.config.ts": {
            "lines": 33,
            "tokens": 250,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 19,
            "duplicatedTokens": 191,
            "percentage": 57.58,
            "percentageTokens": 76.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "playwright.project.config.ts": {
            "lines": 92,
            "tokens": 661,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 52,
            "duplicatedTokens": 429,
            "percentage": 56.52,
            "percentageTokens": 64.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "playwright.config.ts": {
            "lines": 103,
            "tokens": 782,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 173,
            "percentage": 18.45,
            "percentageTokens": 22.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "next-env.d.ts": {
            "lines": 5,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "middleware.ts": {
            "lines": 105,
            "tokens": 371,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "instrumentation.ts": {
            "lines": 52,
            "tokens": 389,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "instrumentation-client.ts": {
            "lines": 121,
            "tokens": 846,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 68226,
          "tokens": 481480,
          "sources": 435,
          "clones": 254,
          "duplicatedLines": 4396,
          "duplicatedTokens": 33975,
          "percentage": 6.44,
          "percentageTokens": 7.06,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "javascript": {
        "sources": {
          "app/(platform)/trust/verification/[builderId]/page.tsx": {
            "lines": 1,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/profile/profile-settings/availability/page.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/marketplace/builders/[id]/page.tsx": {
            "lines": 0,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/marketplace/builders/[id]/BuilderProfileClient.tsx": {
            "lines": 217,
            "tokens": 1736,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/builder/profile/components/validation-tier.tsx": {
            "lines": 23,
            "tokens": 277,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/builder/profile/components/portfolio-gallery.tsx": {
            "lines": 107,
            "tokens": 1004,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/builder/profile/components/metrics-display.tsx": {
            "lines": 132,
            "tokens": 1032,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/auth/src/lib/auth.tsx": {
            "lines": 0,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/availability/weekly-availability.tsx": {
            "lines": 124,
            "tokens": 983,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/availability/availability-management.tsx": {
            "lines": 140,
            "tokens": 1144,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/availability/availability-exceptions.tsx": {
            "lines": 225,
            "tokens": 1785,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/filter-panel/filter-panel.tsx": {
            "lines": 89,
            "tokens": 795,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/error-boundaries/simple-marketplace-error-boundary.js": {
            "lines": 60,
            "tokens": 908,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 83,
            "percentage": 8.33,
            "percentageTokens": 9.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/error-boundaries/marketplace-error-boundary.tsx": {
            "lines": 29,
            "tokens": 226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-list/builder-list.tsx": {
            "lines": 10,
            "tokens": 70,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-list/builder-list-skeleton.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-image/fallback.tsx": {
            "lines": 5,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-image/builder-image.tsx": {
            "lines": 20,
            "tokens": 124,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 80,
            "percentage": 70,
            "percentageTokens": 64.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-card/card-skeleton.tsx": {
            "lines": 18,
            "tokens": 200,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-card/builder-card.tsx": {
            "lines": 69,
            "tokens": 562,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/profile/profile-settings/page.tsx": {
            "lines": 103,
            "tokens": 771,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 144,
            "percentage": 21.36,
            "percentageTokens": 18.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/profile/[id]/page.tsx": {
            "lines": 9,
            "tokens": 72,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/community/knowledge/page.tsx": {
            "lines": 44,
            "tokens": 340,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/builder/[slug]/page.tsx": {
            "lines": 3,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/book/[builderId]/page.tsx": {
            "lines": 27,
            "tokens": 227,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/admin/session-types/page.tsx": {
            "lines": 136,
            "tokens": 1101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/admin/builders/page.tsx": {
            "lines": 56,
            "tokens": 486,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(auth)/sign-up/[[...sign-up]]/page.tsx": {
            "lines": 5,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(auth)/sign-in/[[...sign-in]]/page.tsx": {
            "lines": 5,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/mocks/node-modules.js": {
            "lines": 99,
            "tokens": 978,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/auth/clerk/remove-nextauth-deps.js": {
            "lines": 94,
            "tokens": 718,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 174,
            "percentage": 14.89,
            "percentageTokens": 24.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/tooltip.tsx": {
            "lines": 5,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/textarea.tsx": {
            "lines": 4,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/tabs.tsx": {
            "lines": 34,
            "tokens": 211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/table.tsx": {
            "lines": 94,
            "tokens": 611,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/switch.tsx": {
            "lines": 10,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/slider.tsx": {
            "lines": 4,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/skeleton.tsx": {
            "lines": 3,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/separator.tsx": {
            "lines": 7,
            "tokens": 40,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/select.tsx": {
            "lines": 122,
            "tokens": 815,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/radio-group.tsx": {
            "lines": 39,
            "tokens": 322,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/progress.tsx": {
            "lines": 8,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/popover.tsx": {
            "lines": 6,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/pagination.tsx": {
            "lines": 51,
            "tokens": 367,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/loading-spinner.tsx": {
            "lines": 6,
            "tokens": 40,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/label.tsx": {
            "lines": 1,
            "tokens": 16,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/input.tsx": {
            "lines": 5,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/form.tsx": {
            "lines": 122,
            "tokens": 913,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/dropdown-menu.tsx": {
            "lines": 149,
            "tokens": 983,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/dialog.tsx": {
            "lines": 83,
            "tokens": 512,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/dashboard-skeleton.tsx": {
            "lines": 45,
            "tokens": 407,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/checkbox.tsx": {
            "lines": 8,
            "tokens": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/card.tsx": {
            "lines": 63,
            "tokens": 436,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/calendar.tsx": {
            "lines": 26,
            "tokens": 220,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/button.tsx": {
            "lines": 1,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/badge.tsx": {
            "lines": 0,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/avatar.tsx": {
            "lines": 31,
            "tokens": 210,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/alert.tsx": {
            "lines": 26,
            "tokens": 193,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/accordion.tsx": {
            "lines": 36,
            "tokens": 266,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/composite/form-error.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/trust/ui/validation-tier-badge.tsx": {
            "lines": 6,
            "tokens": 34,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/shared/timezone-selector.tsx": {
            "lines": 6,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/time-slot-selector.tsx": {
            "lines": 41,
            "tokens": 343,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/stripe-booking-form.tsx": {
            "lines": 61,
            "tokens": 372,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/session-type-selector.tsx": {
            "lines": 9,
            "tokens": 80,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/session-type-category.tsx": {
            "lines": 40,
            "tokens": 403,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/pathway-selector.tsx": {
            "lines": 32,
            "tokens": 324,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/integrated-booking.tsx": {
            "lines": 21,
            "tokens": 191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/calendly-session-type-selector.tsx": {
            "lines": 1,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/booking-form.tsx": {
            "lines": 25,
            "tokens": 188,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/booking-flow.tsx": {
            "lines": 259,
            "tokens": 1978,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/booking-calendar.tsx": {
            "lines": 182,
            "tokens": 1230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-session-type-list.tsx": {
            "lines": 75,
            "tokens": 672,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-embed.tsx": {
            "lines": 13,
            "tokens": 151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-embed-simple.tsx": {
            "lines": 15,
            "tokens": 149,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-embed-optimized.tsx": {
            "lines": 36,
            "tokens": 264,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-embed-native.tsx": {
            "lines": 6,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-calendar.tsx": {
            "lines": 128,
            "tokens": 1074,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/booking-confirmation.tsx": {
            "lines": 9,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/weekly-schedule.tsx": {
            "lines": 66,
            "tokens": 636,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/session-type-editor.tsx": {
            "lines": 171,
            "tokens": 1472,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/pathway-analytics.tsx": {
            "lines": 153,
            "tokens": 1331,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/client-progress.tsx": {
            "lines": 131,
            "tokens": 1214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/bookings-by-pathway.tsx": {
            "lines": 105,
            "tokens": 1026,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/ui/session-booking-card.tsx": {
            "lines": 96,
            "tokens": 815,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/ui/profile-stats.tsx": {
            "lines": 42,
            "tokens": 392,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/ui/profile-header.tsx": {
            "lines": 1,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/ui/profile-details.tsx": {
            "lines": 67,
            "tokens": 394,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/ui/filter-panel.tsx": {
            "lines": 66,
            "tokens": 539,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/ui/demo-badge.tsx": {
            "lines": 4,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/trust-proof-companies.tsx": {
            "lines": 18,
            "tokens": 156,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/testimonial-card.tsx": {
            "lines": 68,
            "tokens": 534,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/newsletter-form.tsx": {
            "lines": 21,
            "tokens": 135,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/marketing-stat.tsx": {
            "lines": 57,
            "tokens": 619,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 54,
            "duplicatedTokens": 580,
            "percentage": 94.74,
            "percentageTokens": 93.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/marketing-marquee.tsx": {
            "lines": 32,
            "tokens": 228,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/feature-card.tsx": {
            "lines": 85,
            "tokens": 654,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/learning/ui/timeline-item.tsx": {
            "lines": 55,
            "tokens": 498,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/learning/ui/timeline-filter.tsx": {
            "lines": 38,
            "tokens": 356,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/ui/testimonial-scroll.tsx": {
            "lines": 54,
            "tokens": 409,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/community/ui/server-discussion-card.tsx": {
            "lines": 67,
            "tokens": 445,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 42,
            "duplicatedTokens": 269,
            "percentage": 62.69,
            "percentageTokens": 60.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/community/ui/knowledge-item.tsx": {
            "lines": 96,
            "tokens": 656,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/community/ui/discussion-card.tsx": {
            "lines": 73,
            "tokens": 508,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 42,
            "duplicatedTokens": 269,
            "percentage": 57.53,
            "percentageTokens": 52.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/ui/admin-card.tsx": {
            "lines": 15,
            "tokens": 151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/public-resources/page.tsx": {
            "lines": 46,
            "tokens": 399,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/dyslexic-mode/page.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/calendly-optimized/page.tsx": {
            "lines": 11,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/calendly-debug/page.tsx": {
            "lines": 5,
            "tokens": 74,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/calendly-api/page.tsx": {
            "lines": 34,
            "tokens": 297,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/calendly/page.tsx": {
            "lines": 37,
            "tokens": 246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/booking-flow-custom/page.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/booking/schedule/page.tsx": {
            "lines": 8,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/booking/recovery/page.tsx": {
            "lines": 51,
            "tokens": 339,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/booking/confirmation/page.tsx": {
            "lines": 111,
            "tokens": 812,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/trust/page.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/profile/page.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/portfolio/page.tsx": {
            "lines": 63,
            "tokens": 531,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/marketplace/page.tsx": {
            "lines": 15,
            "tokens": 77,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/dashboard/page.tsx": {
            "lines": 77,
            "tokens": 601,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/admin/layout.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(marketing)/toolkit/page.tsx": {
            "lines": 344,
            "tokens": 2106,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(marketing)/faq/page.tsx": {
            "lines": 134,
            "tokens": 769,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/utils/database/seed-test-users.js": {
            "lines": 168,
            "tokens": 1067,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/integration/error-handling/error-boundary-sentry.test.tsx": {
            "lines": 56,
            "tokens": 428,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/integration/booking-payment/calendly-booking-flow.test.tsx": {
            "lines": 144,
            "tokens": 1256,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/integration/booking-payment/booking-flow.test.tsx": {
            "lines": 47,
            "tokens": 347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/integration/auth-marketplace/booking-integration.test.tsx": {
            "lines": 95,
            "tokens": 632,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/components/error-boundaries/global-error-boundary.test.tsx": {
            "lines": 0,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/components/error-boundaries/feature-error-boundary.test.tsx": {
            "lines": 137,
            "tokens": 1015,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/components/error-boundaries/api-error-boundary.test.tsx": {
            "lines": 189,
            "tokens": 1573,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 156,
            "duplicatedTokens": 1238,
            "percentage": 82.54,
            "percentageTokens": 78.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "prisma/seed/seed.js": {
            "lines": 312,
            "tokens": 1890,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/datadog/test-reporter.js": {
            "lines": 331,
            "tokens": 2796,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/contexts/profile-context.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/contexts/booking-flow-context.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/trust/verification-detail.tsx": {
            "lines": 69,
            "tokens": 662,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/trust/trust-overview.tsx": {
            "lines": 51,
            "tokens": 487,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/session-type-list.tsx": {
            "lines": 21,
            "tokens": 213,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/providers/providers.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/providers/enhanced-clerk-provider.tsx": {
            "lines": 18,
            "tokens": 194,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/providers/clerk-provider.tsx": {
            "lines": 1,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/user-profile.tsx": {
            "lines": 41,
            "tokens": 249,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/success-metrics-dashboard.tsx": {
            "lines": 121,
            "tokens": 974,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/role-badges.tsx": {
            "lines": 144,
            "tokens": 917,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/profile-auth-provider.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/portfolio-showcase.tsx": {
            "lines": 156,
            "tokens": 1324,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 84,
            "duplicatedTokens": 842,
            "percentage": 53.85,
            "percentageTokens": 63.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/portfolio-gallery.tsx": {
            "lines": 448,
            "tokens": 3516,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 42,
            "duplicatedTokens": 405,
            "percentage": 9.38,
            "percentageTokens": 11.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/client-profile.tsx": {
            "lines": 43,
            "tokens": 381,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/client-dashboard.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/builder-profile.tsx": {
            "lines": 485,
            "tokens": 3802,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/builder-profile-wrapper.tsx": {
            "lines": 69,
            "tokens": 566,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/builder-profile-client-wrapper.tsx": {
            "lines": 23,
            "tokens": 169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/app-showcase.tsx": {
            "lines": 164,
            "tokens": 1294,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 217,
            "percentage": 12.2,
            "percentageTokens": 16.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/add-project-form.tsx": {
            "lines": 269,
            "tokens": 1768,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/platform/viewing-preferences.tsx": {
            "lines": 144,
            "tokens": 1036,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/platform/platform-header.tsx": {
            "lines": 429,
            "tokens": 3319,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 282,
            "duplicatedTokens": 2484,
            "percentage": 65.73,
            "percentageTokens": 74.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/payment/stripe-provider.tsx": {
            "lines": 0,
            "tokens": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/payment/payment-status-indicator.tsx": {
            "lines": 139,
            "tokens": 922,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/payment/payment-confirmation.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/payment/checkout-button.tsx": {
            "lines": 4,
            "tokens": 29,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/pages/profile-edit-page.tsx": {
            "lines": 65,
            "tokens": 393,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/simplified-builder-image.tsx": {
            "lines": 10,
            "tokens": 55,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/fixed-builder-image.tsx": {
            "lines": 17,
            "tokens": 98,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 80,
            "percentage": 82.35,
            "percentageTokens": 81.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/builder-list.tsx": {
            "lines": 19,
            "tokens": 165,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/builder-list-client.tsx": {
            "lines": 22,
            "tokens": 171,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/builder-image.tsx": {
            "lines": 8,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/builder-dashboard.tsx": {
            "lines": 755,
            "tokens": 6147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/builder-card.tsx": {
            "lines": 95,
            "tokens": 760,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/testimonial-section.tsx": {
            "lines": 11,
            "tokens": 84,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/marketing-hero.tsx": {
            "lines": 43,
            "tokens": 297,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/marketing-cta.tsx": {
            "lines": 25,
            "tokens": 179,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/feature-showcase.tsx": {
            "lines": 121,
            "tokens": 1035,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/feature-grid.tsx": {
            "lines": 57,
            "tokens": 403,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/word-rotate.tsx": {
            "lines": 1,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/word-rotate-with-fonts.tsx": {
            "lines": 2,
            "tokens": 30,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/typing-animation.tsx": {
            "lines": 4,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/text-animate.tsx": {
            "lines": 18,
            "tokens": 159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/terminal.tsx": {
            "lines": 91,
            "tokens": 693,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/ripple.tsx": {
            "lines": 3,
            "tokens": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/particles.tsx": {
            "lines": 5,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/orbiting-circles.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/marquee.tsx": {
            "lines": 19,
            "tokens": 105,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/globe.tsx": {
            "lines": 19,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/dot-pattern.tsx": {
            "lines": 41,
            "tokens": 304,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/blur-fade.tsx": {
            "lines": 10,
            "tokens": 63,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/avatar-circles.tsx": {
            "lines": 14,
            "tokens": 107,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/aurora-text.tsx": {
            "lines": 4,
            "tokens": 41,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/animated-subscribe-button.tsx": {
            "lines": 36,
            "tokens": 250,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/animated-circular-progress-bar.tsx": {
            "lines": 43,
            "tokens": 173,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/learning/timeline.tsx": {
            "lines": 10,
            "tokens": 137,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/trusted-ecosystem.tsx": {
            "lines": 7,
            "tokens": 74,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/testimonial-section.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/skills-tree-section.tsx": {
            "lines": 97,
            "tokens": 740,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 100,
            "duplicatedTokens": 806,
            "percentage": 103.09,
            "percentageTokens": 108.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/skills-carousel.tsx": {
            "lines": 76,
            "tokens": 593,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/performance-optimizations.tsx": {
            "lines": 155,
            "tokens": 1167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/navbar.tsx": {
            "lines": 359,
            "tokens": 2505,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/hero-section.tsx": {
            "lines": 111,
            "tokens": 967,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/feature-scroll.tsx": {
            "lines": 34,
            "tokens": 439,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/cta-section.tsx": {
            "lines": 101,
            "tokens": 733,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 43,
            "duplicatedTokens": 319,
            "percentage": 42.57,
            "percentageTokens": 43.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/company-logos.tsx": {
            "lines": 46,
            "tokens": 341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/client-motion-wrapper.tsx": {
            "lines": 0,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/brand-word-rotate.tsx": {
            "lines": 2,
            "tokens": 24,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/bento-section.tsx": {
            "lines": 64,
            "tokens": 585,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/ai-stats.tsx": {
            "lines": 47,
            "tokens": 451,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/ai-capabilities-marquee.tsx": {
            "lines": 91,
            "tokens": 730,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 57,
            "duplicatedTokens": 487,
            "percentage": 62.64,
            "percentageTokens": 66.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/accessibility.tsx": {
            "lines": 33,
            "tokens": 206,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/error-boundaries/global-error-boundary.tsx": {
            "lines": 6,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/error-boundaries/feature-error-boundary.tsx": {
            "lines": 9,
            "tokens": 60,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/error-boundaries/api-error-boundary.tsx": {
            "lines": 8,
            "tokens": 54,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/community/knowledge-base.tsx": {
            "lines": 53,
            "tokens": 473,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/client/faq-accordion.tsx": {
            "lines": 0,
            "tokens": 13,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/booking/booking-button.tsx": {
            "lines": 38,
            "tokens": 207,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/loading-state.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/express-auth-provider.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/clerk-auth-form.tsx": {
            "lines": 14,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/auth-status.tsx": {
            "lines": 198,
            "tokens": 1700,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/auth-error-boundary.tsx": {
            "lines": 38,
            "tokens": 324,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/settings-panel.tsx": {
            "lines": 45,
            "tokens": 341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/session-type-form.tsx": {
            "lines": 147,
            "tokens": 941,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/admin-nav.tsx": {
            "lines": 10,
            "tokens": 67,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/admin-dashboard.tsx": {
            "lines": 4,
            "tokens": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/role-test/page.tsx": {
            "lines": 58,
            "tokens": 592,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/role-test/client.tsx": {
            "lines": 48,
            "tokens": 563,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/onboarding/page.tsx": {
            "lines": 53,
            "tokens": 333,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 144,
            "percentage": 41.51,
            "percentageTokens": 43.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/calendly-test/page.tsx": {
            "lines": 56,
            "tokens": 498,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/calendly-direct-test/page.tsx": {
            "lines": 0,
            "tokens": 14,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth-test/page.tsx": {
            "lines": 17,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth-test/client.tsx": {
            "lines": 121,
            "tokens": 1054,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/tailwind-dyslexic-plugin.js": {
            "lines": 58,
            "tokens": 357,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "examples/word-rotate-fonts-example.tsx": {
            "lines": 1,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/buildappswith-platform-overview.tsx": {
            "lines": 561,
            "tokens": 4253,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/user-auth-form.tsx": {
            "lines": 51,
            "tokens": 366,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/theme-provider.tsx": {
            "lines": 0,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/suspense-user-auth-form.tsx": {
            "lines": 0,
            "tokens": 6,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/site-footer.tsx": {
            "lines": 39,
            "tokens": 360,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/feature-flag-wrapper.tsx": {
            "lines": 20,
            "tokens": 122,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/layout.tsx": {
            "lines": 3,
            "tokens": 11,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/global-error.tsx": {
            "lines": 0,
            "tokens": 10,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/error.tsx": {
            "lines": 0,
            "tokens": 10,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "vitest.nx.config.js": {
            "lines": 27,
            "tokens": 209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "vitest.config.mjs": {
            "lines": 30,
            "tokens": 243,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 84,
            "percentage": 33.33,
            "percentageTokens": 34.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "vitest.config.js": {
            "lines": 30,
            "tokens": 245,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 84,
            "percentage": 33.33,
            "percentageTokens": 34.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "test-page.js": {
            "lines": 12,
            "tokens": 166,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 5,
            "duplicatedTokens": 83,
            "percentage": 41.67,
            "percentageTokens": 50,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "test-marketplace-build.js": {
            "lines": 25,
            "tokens": 211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "query-users.js": {
            "lines": 30,
            "tokens": 240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "production-fix.js": {
            "lines": 154,
            "tokens": 1181,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "postcss.config.js": {
            "lines": 5,
            "tokens": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "next.nx.config.mjs": {
            "lines": 86,
            "tokens": 523,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "next.config.mjs": {
            "lines": 369,
            "tokens": 1996,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "jest.setup.js": {
            "lines": 108,
            "tokens": 834,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "datadog-test-agent.js": {
            "lines": 216,
            "tokens": 1758,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "datadog-config.js": {
            "lines": 102,
            "tokens": 573,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "check-searchable.js": {
            "lines": 21,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "check-prod-database.js": {
            "lines": 100,
            "tokens": 471,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "check-feature-flags.js": {
            "lines": 49,
            "tokens": 489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "check-deployment-api.js": {
            "lines": 44,
            "tokens": 333,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "check-builder-details.js": {
            "lines": 81,
            "tokens": 733,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".msw-check-internals.js": {
            "lines": 11,
            "tokens": 171,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          ".dependency-cruiser.js": {
            "lines": 411,
            "tokens": 1443,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 16997,
          "tokens": 129372,
          "sources": 257,
          "clones": 22,
          "duplicatedLines": 519,
          "duplicatedTokens": 4436,
          "percentage": 3.05,
          "percentageTokens": 3.43,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "app/(platform)/trust/verification/[builderId]/page.tsx": {
            "lines": 54,
            "tokens": 348,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/profile/profile-settings/edit/page.tsx": {
            "lines": 13,
            "tokens": 88,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 85,
            "percentage": 84.62,
            "percentageTokens": 96.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/profile/profile-settings/availability/page.tsx": {
            "lines": 77,
            "tokens": 648,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/marketplace/builders/[id]/page.tsx": {
            "lines": 6,
            "tokens": 84,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/marketplace/builders/[id]/BuilderProfileClient.tsx": {
            "lines": 357,
            "tokens": 2888,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/builder/profile/components/validation-tier.tsx": {
            "lines": 129,
            "tokens": 873,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/builder/profile/components/portfolio-gallery.tsx": {
            "lines": 179,
            "tokens": 1564,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/builder/profile/components/metrics-display.tsx": {
            "lines": 186,
            "tokens": 1403,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/unit/lib/auth/express/client-auth.test.tsx": {
            "lines": 468,
            "tokens": 4118,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 246,
            "percentage": 5.13,
            "percentageTokens": 5.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/auth/src/lib/hello-server.tsx": {
            "lines": 3,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "libs/auth/src/lib/auth.tsx": {
            "lines": 10,
            "tokens": 70,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/availability/weekly-availability.tsx": {
            "lines": 334,
            "tokens": 2884,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 295,
            "percentage": 13.17,
            "percentageTokens": 10.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/availability/availability-management.tsx": {
            "lines": 330,
            "tokens": 2775,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/availability/availability-exceptions.tsx": {
            "lines": 494,
            "tokens": 4157,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 58,
            "duplicatedTokens": 493,
            "percentage": 11.74,
            "percentageTokens": 11.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/filter-panel/filter-panel.tsx": {
            "lines": 178,
            "tokens": 1559,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/error-boundaries/simple-marketplace-error-boundary.tsx": {
            "lines": 36,
            "tokens": 224,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/error-boundaries/marketplace-error-boundary.tsx": {
            "lines": 84,
            "tokens": 598,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-list/builder-list.tsx": {
            "lines": 55,
            "tokens": 400,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-list/builder-list-skeleton.tsx": {
            "lines": 20,
            "tokens": 136,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-image/fallback.tsx": {
            "lines": 42,
            "tokens": 224,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-image/builder-image.tsx": {
            "lines": 68,
            "tokens": 372,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-card/card-skeleton.tsx": {
            "lines": 45,
            "tokens": 363,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/components/builder-card/builder-card.tsx": {
            "lines": 136,
            "tokens": 987,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 53,
            "duplicatedTokens": 445,
            "percentage": 38.97,
            "percentageTokens": 45.09,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/profile/profile-settings/page.tsx": {
            "lines": 231,
            "tokens": 1748,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 60,
            "duplicatedTokens": 408,
            "percentage": 25.97,
            "percentageTokens": 23.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/profile/profile-settings/layout.tsx": {
            "lines": 13,
            "tokens": 91,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/profile/edit/page.tsx": {
            "lines": 13,
            "tokens": 88,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 85,
            "percentage": 84.62,
            "percentageTokens": 96.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/profile/[id]/page.tsx": {
            "lines": 104,
            "tokens": 744,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/learning/timeline/page.tsx": {
            "lines": 76,
            "tokens": 658,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 82,
            "percentage": 9.21,
            "percentageTokens": 12.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/community/knowledge/page.tsx": {
            "lines": 129,
            "tokens": 961,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/builder/[slug]/page.tsx": {
            "lines": 300,
            "tokens": 2066,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/book/[builderId]/page.tsx": {
            "lines": 145,
            "tokens": 1221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/admin/session-types/page.tsx": {
            "lines": 372,
            "tokens": 2944,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 180,
            "percentage": 8.6,
            "percentageTokens": 6.11,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/admin/builders/page.tsx": {
            "lines": 214,
            "tokens": 1718,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(auth)/sign-up/[[...sign-up]]/page.tsx": {
            "lines": 64,
            "tokens": 434,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 80,
            "duplicatedTokens": 546,
            "percentage": 125,
            "percentageTokens": 125.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(auth)/sign-up/[[...sign-up]]/layout.tsx": {
            "lines": 13,
            "tokens": 86,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(auth)/sign-in/[[...sign-in]]/page.tsx": {
            "lines": 64,
            "tokens": 434,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 40,
            "duplicatedTokens": 300,
            "percentage": 62.5,
            "percentageTokens": 69.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(auth)/sign-in/[[...sign-in]]/layout.tsx": {
            "lines": 13,
            "tokens": 86,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/tooltip.tsx": {
            "lines": 29,
            "tokens": 200,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/textarea.tsx": {
            "lines": 23,
            "tokens": 140,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/tabs.tsx": {
            "lines": 54,
            "tokens": 361,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/table.tsx": {
            "lines": 119,
            "tokens": 754,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/switch.tsx": {
            "lines": 28,
            "tokens": 167,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/sonner.tsx": {
            "lines": 38,
            "tokens": 222,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/slider.tsx": {
            "lines": 27,
            "tokens": 190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/skeleton.tsx": {
            "lines": 26,
            "tokens": 81,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/separator.tsx": {
            "lines": 30,
            "tokens": 193,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/select.tsx": {
            "lines": 157,
            "tokens": 1036,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/radio-group.tsx": {
            "lines": 109,
            "tokens": 912,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/progress.tsx": {
            "lines": 40,
            "tokens": 293,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/popover.tsx": {
            "lines": 32,
            "tokens": 223,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/pagination.tsx": {
            "lines": 137,
            "tokens": 1015,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/loading-spinner.tsx": {
            "lines": 32,
            "tokens": 217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/label.tsx": {
            "lines": 25,
            "tokens": 188,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/input.tsx": {
            "lines": 24,
            "tokens": 149,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/form.tsx": {
            "lines": 177,
            "tokens": 1236,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/dropdown-menu.tsx": {
            "lines": 199,
            "tokens": 1273,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/dialog.tsx": {
            "lines": 120,
            "tokens": 735,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/dashboard-skeleton.tsx": {
            "lines": 80,
            "tokens": 628,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/checkbox.tsx": {
            "lines": 28,
            "tokens": 193,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/card.tsx": {
            "lines": 78,
            "tokens": 553,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/calendar.tsx": {
            "lines": 160,
            "tokens": 1455,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/button.tsx": {
            "lines": 56,
            "tokens": 375,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/badge.tsx": {
            "lines": 35,
            "tokens": 232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/avatar.tsx": {
            "lines": 49,
            "tokens": 346,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/alert.tsx": {
            "lines": 58,
            "tokens": 404,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/core/accordion.tsx": {
            "lines": 55,
            "tokens": 432,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/ui/composite/form-error.tsx": {
            "lines": 20,
            "tokens": 164,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/trust/ui/validation-tier-badge.tsx": {
            "lines": 77,
            "tokens": 581,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/shared/timezone-selector.tsx": {
            "lines": 60,
            "tokens": 472,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/time-slot-selector.tsx": {
            "lines": 136,
            "tokens": 1150,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 62,
            "duplicatedTokens": 459,
            "percentage": 45.59,
            "percentageTokens": 39.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/stripe-booking-form.tsx": {
            "lines": 219,
            "tokens": 1676,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/session-type-selector.tsx": {
            "lines": 82,
            "tokens": 691,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/session-type-category.tsx": {
            "lines": 100,
            "tokens": 853,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/pathway-selector.tsx": {
            "lines": 59,
            "tokens": 548,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/integrated-booking.tsx": {
            "lines": 106,
            "tokens": 735,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/calendly-session-type-selector.tsx": {
            "lines": 149,
            "tokens": 1182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/booking-form.tsx": {
            "lines": 219,
            "tokens": 1835,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/booking-flow.tsx": {
            "lines": 560,
            "tokens": 4219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/client/booking-calendar.tsx": {
            "lines": 422,
            "tokens": 3401,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-session-type-list.tsx": {
            "lines": 179,
            "tokens": 1433,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 141,
            "percentage": 6.15,
            "percentageTokens": 9.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-embed.tsx": {
            "lines": 286,
            "tokens": 2255,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 143,
            "percentage": 6.64,
            "percentageTokens": 6.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-embed-simple.tsx": {
            "lines": 54,
            "tokens": 394,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-embed-optimized.tsx": {
            "lines": 207,
            "tokens": 1503,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 143,
            "percentage": 9.18,
            "percentageTokens": 9.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-embed-native.tsx": {
            "lines": 53,
            "tokens": 373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-calendar.tsx": {
            "lines": 296,
            "tokens": 2537,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 86,
            "duplicatedTokens": 693,
            "percentage": 29.05,
            "percentageTokens": 27.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/booking-confirmation.tsx": {
            "lines": 193,
            "tokens": 1608,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/weekly-schedule.tsx": {
            "lines": 242,
            "tokens": 2285,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 170,
            "percentage": 9.09,
            "percentageTokens": 7.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/session-type-editor.tsx": {
            "lines": 362,
            "tokens": 3139,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 22,
            "duplicatedTokens": 170,
            "percentage": 6.08,
            "percentageTokens": 5.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/pathway-analytics.tsx": {
            "lines": 225,
            "tokens": 1901,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/client-progress.tsx": {
            "lines": 270,
            "tokens": 2226,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/builder/bookings-by-pathway.tsx": {
            "lines": 215,
            "tokens": 1931,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/ui/session-booking-card.tsx": {
            "lines": 198,
            "tokens": 1694,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 100,
            "percentage": 7.58,
            "percentageTokens": 5.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/ui/profile-stats.tsx": {
            "lines": 112,
            "tokens": 819,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/ui/profile-header.tsx": {
            "lines": 55,
            "tokens": 350,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/ui/profile-details.tsx": {
            "lines": 159,
            "tokens": 1050,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/ui/filter-panel.tsx": {
            "lines": 193,
            "tokens": 1397,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/ui/demo-badge.tsx": {
            "lines": 37,
            "tokens": 190,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/trust-proof-companies.tsx": {
            "lines": 54,
            "tokens": 364,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/testimonial-card.tsx": {
            "lines": 107,
            "tokens": 795,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 48,
            "duplicatedTokens": 359,
            "percentage": 44.86,
            "percentageTokens": 45.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/newsletter-form.tsx": {
            "lines": 82,
            "tokens": 519,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/marketing-stat.tsx": {
            "lines": 121,
            "tokens": 1102,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 190,
            "percentage": 13.22,
            "percentageTokens": 17.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/marketing-marquee.tsx": {
            "lines": 81,
            "tokens": 560,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/ui/feature-card.tsx": {
            "lines": 127,
            "tokens": 927,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 17,
            "duplicatedTokens": 244,
            "percentage": 13.39,
            "percentageTokens": 26.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/learning/ui/timeline-item.tsx": {
            "lines": 106,
            "tokens": 767,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/learning/ui/timeline-filter.tsx": {
            "lines": 102,
            "tokens": 695,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/ui/testimonial-scroll.tsx": {
            "lines": 88,
            "tokens": 621,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 48,
            "duplicatedTokens": 359,
            "percentage": 54.55,
            "percentageTokens": 57.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/community/ui/server-discussion-card.tsx": {
            "lines": 157,
            "tokens": 1010,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 110,
            "duplicatedTokens": 721,
            "percentage": 70.06,
            "percentageTokens": 71.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/community/ui/knowledge-item.tsx": {
            "lines": 213,
            "tokens": 1319,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/community/ui/discussion-card.tsx": {
            "lines": 184,
            "tokens": 1133,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 110,
            "duplicatedTokens": 721,
            "percentage": 59.78,
            "percentageTokens": 63.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/ui/admin-card.tsx": {
            "lines": 90,
            "tokens": 593,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/public-resources/page.tsx": {
            "lines": 99,
            "tokens": 739,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/dyslexic-mode/page.tsx": {
            "lines": 233,
            "tokens": 2311,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/calendly-optimized/page.tsx": {
            "lines": 50,
            "tokens": 414,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/calendly-debug/page.tsx": {
            "lines": 62,
            "tokens": 508,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 246,
            "percentage": 40.32,
            "percentageTokens": 48.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/calendly-api/page.tsx": {
            "lines": 108,
            "tokens": 935,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/calendly/page.tsx": {
            "lines": 87,
            "tokens": 624,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/booking-flow-custom/page.tsx": {
            "lines": 73,
            "tokens": 596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/studio/[[...tool]]/page.tsx": {
            "lines": 24,
            "tokens": 99,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/booking/schedule/page.tsx": {
            "lines": 83,
            "tokens": 657,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/booking/recovery/page.tsx": {
            "lines": 171,
            "tokens": 1257,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 111,
            "percentage": 10.53,
            "percentageTokens": 8.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/booking/confirmation/page.tsx": {
            "lines": 207,
            "tokens": 1591,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 111,
            "percentage": 8.7,
            "percentageTokens": 6.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/trust/page.tsx": {
            "lines": 26,
            "tokens": 176,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/profile/page.tsx": {
            "lines": 63,
            "tokens": 393,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/portfolio/page.tsx": {
            "lines": 189,
            "tokens": 1411,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/marketplace/page.tsx": {
            "lines": 91,
            "tokens": 565,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/learning/page.tsx": {
            "lines": 76,
            "tokens": 803,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 82,
            "percentage": 9.21,
            "percentageTokens": 10.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/dashboard/page.tsx": {
            "lines": 123,
            "tokens": 940,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/dashboard/layout.tsx": {
            "lines": 20,
            "tokens": 127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/community/page.tsx": {
            "lines": 68,
            "tokens": 627,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/admin/page.tsx": {
            "lines": 100,
            "tokens": 1018,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/admin/layout.tsx": {
            "lines": 26,
            "tokens": 202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(marketing)/toolkit/page.tsx": {
            "lines": 416,
            "tokens": 2697,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(marketing)/terms/page.tsx": {
            "lines": 104,
            "tokens": 1493,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(marketing)/privacy/page.tsx": {
            "lines": 158,
            "tokens": 2568,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(marketing)/how-it-works/page.tsx": {
            "lines": 178,
            "tokens": 2048,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(marketing)/faq/page.tsx": {
            "lines": 155,
            "tokens": 982,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(marketing)/contact/page.tsx": {
            "lines": 112,
            "tokens": 1236,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(marketing)/about/page.tsx": {
            "lines": 147,
            "tokens": 1740,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/integration/error-handling/error-boundary-sentry.test.tsx": {
            "lines": 244,
            "tokens": 1856,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 44,
            "duplicatedTokens": 342,
            "percentage": 18.03,
            "percentageTokens": 18.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/integration/booking-payment/calendly-booking-flow.test.tsx": {
            "lines": 196,
            "tokens": 1689,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 300,
            "percentage": 11.22,
            "percentageTokens": 17.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/integration/booking-payment/booking-flow.test.tsx": {
            "lines": 128,
            "tokens": 1070,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/integration/auth-marketplace/booking-integration.test.tsx": {
            "lines": 173,
            "tokens": 1189,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 200,
            "percentage": 20.81,
            "percentageTokens": 16.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/components/error-boundaries/global-error-boundary.test.tsx": {
            "lines": 245,
            "tokens": 1864,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 110,
            "duplicatedTokens": 860,
            "percentage": 44.9,
            "percentageTokens": 46.14,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/components/error-boundaries/feature-error-boundary.test.tsx": {
            "lines": 216,
            "tokens": 1660,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 96,
            "percentage": 4.63,
            "percentageTokens": 5.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/components/error-boundaries/api-error-boundary.test.tsx": {
            "lines": 317,
            "tokens": 2655,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 90,
            "duplicatedTokens": 698,
            "percentage": 28.39,
            "percentageTokens": 26.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "__tests__/components/auth/auth-status.test.tsx": {
            "lines": 32,
            "tokens": 376,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/contexts/profile-context.tsx": {
            "lines": 176,
            "tokens": 1370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "lib/contexts/booking-flow-context.tsx": {
            "lines": 446,
            "tokens": 3916,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/trust/verification-detail.tsx": {
            "lines": 148,
            "tokens": 1204,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/trust/trust-overview.tsx": {
            "lines": 138,
            "tokens": 1191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/session-type-list.tsx": {
            "lines": 81,
            "tokens": 646,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 141,
            "percentage": 13.58,
            "percentageTokens": 21.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/providers/providers.tsx": {
            "lines": 36,
            "tokens": 227,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/providers/enhanced-clerk-provider.tsx": {
            "lines": 138,
            "tokens": 1001,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 210,
            "percentage": 18.12,
            "percentageTokens": 20.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/providers/datadog-rum-provider.tsx": {
            "lines": 56,
            "tokens": 282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/providers/clerk-provider.tsx": {
            "lines": 25,
            "tokens": 154,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/user-profile.tsx": {
            "lines": 111,
            "tokens": 698,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/success-metrics-dashboard.tsx": {
            "lines": 192,
            "tokens": 1491,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/role-badges.tsx": {
            "lines": 184,
            "tokens": 1160,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/profile-auth-provider.tsx": {
            "lines": 127,
            "tokens": 738,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/portfolio-showcase.tsx": {
            "lines": 223,
            "tokens": 1816,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 44,
            "duplicatedTokens": 398,
            "percentage": 19.73,
            "percentageTokens": 21.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/portfolio-gallery.tsx": {
            "lines": 537,
            "tokens": 4132,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 126,
            "percentage": 2.61,
            "percentageTokens": 3.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/client-profile.tsx": {
            "lines": 123,
            "tokens": 892,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/client-dashboard.tsx": {
            "lines": 184,
            "tokens": 1520,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/builder-profile.tsx": {
            "lines": 654,
            "tokens": 5201,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 48,
            "duplicatedTokens": 492,
            "percentage": 7.34,
            "percentageTokens": 9.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/builder-profile-wrapper.tsx": {
            "lines": 144,
            "tokens": 1043,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/builder-profile-client-wrapper.tsx": {
            "lines": 116,
            "tokens": 838,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 100,
            "percentage": 12.93,
            "percentageTokens": 11.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/app-showcase.tsx": {
            "lines": 236,
            "tokens": 1804,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 272,
            "percentage": 12.71,
            "percentageTokens": 15.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/profile/add-project-form.tsx": {
            "lines": 424,
            "tokens": 3101,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/platform/viewing-preferences.tsx": {
            "lines": 327,
            "tokens": 2405,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/platform/platform-header.tsx": {
            "lines": 693,
            "tokens": 5301,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 72,
            "duplicatedTokens": 538,
            "percentage": 10.39,
            "percentageTokens": 10.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/payment/stripe-provider.tsx": {
            "lines": 50,
            "tokens": 309,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/payment/payment-status-indicator.tsx": {
            "lines": 226,
            "tokens": 1505,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/payment/payment-confirmation.tsx": {
            "lines": 116,
            "tokens": 954,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/payment/checkout-button.tsx": {
            "lines": 101,
            "tokens": 704,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/pages/profile-edit-page.tsx": {
            "lines": 128,
            "tokens": 976,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/simplified-builder-image.tsx": {
            "lines": 66,
            "tokens": 418,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/fixed-builder-image.tsx": {
            "lines": 71,
            "tokens": 438,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/builder-list.tsx": {
            "lines": 86,
            "tokens": 546,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 121,
            "percentage": 15.12,
            "percentageTokens": 22.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/builder-list-client.tsx": {
            "lines": 75,
            "tokens": 514,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 121,
            "percentage": 17.33,
            "percentageTokens": 23.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/builder-image.tsx": {
            "lines": 106,
            "tokens": 658,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/builder-dashboard.tsx": {
            "lines": 989,
            "tokens": 7801,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 138,
            "percentage": 1.62,
            "percentageTokens": 1.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketplace/builder-card.tsx": {
            "lines": 162,
            "tokens": 1218,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 53,
            "duplicatedTokens": 445,
            "percentage": 32.72,
            "percentageTokens": 36.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/testimonial-section.tsx": {
            "lines": 93,
            "tokens": 601,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/marketing-hero.tsx": {
            "lines": 122,
            "tokens": 901,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/marketing-cta.tsx": {
            "lines": 66,
            "tokens": 455,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/feature-showcase.tsx": {
            "lines": 202,
            "tokens": 1770,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 71,
            "duplicatedTokens": 746,
            "percentage": 35.15,
            "percentageTokens": 42.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/marketing/feature-grid.tsx": {
            "lines": 104,
            "tokens": 717,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 117,
            "percentage": 13.46,
            "percentageTokens": 16.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/word-rotate.tsx": {
            "lines": 49,
            "tokens": 413,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 28,
            "duplicatedTokens": 312,
            "percentage": 57.14,
            "percentageTokens": 75.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/word-rotate-with-fonts.tsx": {
            "lines": 64,
            "tokens": 545,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 114,
            "percentage": 15.63,
            "percentageTokens": 20.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/typing-animation.tsx": {
            "lines": 89,
            "tokens": 682,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 302,
            "percentage": 42.7,
            "percentageTokens": 44.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/text-animate.tsx": {
            "lines": 406,
            "tokens": 2724,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 184,
            "percentage": 6.9,
            "percentageTokens": 6.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/terminal.tsx": {
            "lines": 127,
            "tokens": 970,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 38,
            "duplicatedTokens": 302,
            "percentage": 29.92,
            "percentageTokens": 31.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/shine-border.tsx": {
            "lines": 62,
            "tokens": 301,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/ripple.tsx": {
            "lines": 58,
            "tokens": 445,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/particles.tsx": {
            "lines": 365,
            "tokens": 3731,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 100,
            "duplicatedTokens": 1158,
            "percentage": 27.4,
            "percentageTokens": 31.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/orbiting-circles.tsx": {
            "lines": 70,
            "tokens": 467,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/marquee.tsx": {
            "lines": 72,
            "tokens": 318,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/globe.tsx": {
            "lines": 135,
            "tokens": 1278,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/dot-pattern.tsx": {
            "lines": 157,
            "tokens": 973,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/border-beam.tsx": {
            "lines": 93,
            "tokens": 480,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/blur-fade.tsx": {
            "lines": 80,
            "tokens": 616,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/avatar-circles.tsx": {
            "lines": 49,
            "tokens": 308,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/aurora-text.tsx": {
            "lines": 42,
            "tokens": 291,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/animated-subscribe-button.tsx": {
            "lines": 97,
            "tokens": 722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/magicui/animated-circular-progress-bar.tsx": {
            "lines": 107,
            "tokens": 614,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/learning/timeline.tsx": {
            "lines": 71,
            "tokens": 553,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/trusted-ecosystem.tsx": {
            "lines": 19,
            "tokens": 170,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/testimonial-section.tsx": {
            "lines": 64,
            "tokens": 417,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/skills-tree-section.tsx": {
            "lines": 180,
            "tokens": 1319,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/skills-carousel.tsx": {
            "lines": 125,
            "tokens": 976,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/performance-optimizations.tsx": {
            "lines": 212,
            "tokens": 1588,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/navbar.tsx": {
            "lines": 438,
            "tokens": 3149,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 52,
            "duplicatedTokens": 428,
            "percentage": 11.87,
            "percentageTokens": 13.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/hero-section.tsx": {
            "lines": 141,
            "tokens": 1220,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/feature-scroll.tsx": {
            "lines": 91,
            "tokens": 1005,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 69,
            "duplicatedTokens": 706,
            "percentage": 75.82,
            "percentageTokens": 70.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/data.tsx": {
            "lines": 133,
            "tokens": 1277,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/cta-section.tsx": {
            "lines": 143,
            "tokens": 1004,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/company-logos.tsx": {
            "lines": 91,
            "tokens": 764,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/client-motion-wrapper.tsx": {
            "lines": 26,
            "tokens": 189,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/brand-word-rotate.tsx": {
            "lines": 86,
            "tokens": 680,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 198,
            "percentage": 20.93,
            "percentageTokens": 29.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/bento-section.tsx": {
            "lines": 91,
            "tokens": 823,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 65,
            "percentage": 7.69,
            "percentageTokens": 7.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/ai-stats.tsx": {
            "lines": 117,
            "tokens": 1100,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/ai-capabilities-marquee.tsx": {
            "lines": 120,
            "tokens": 997,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/accessibility.tsx": {
            "lines": 130,
            "tokens": 681,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/error-boundaries/global-error-boundary.tsx": {
            "lines": 126,
            "tokens": 896,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/error-boundaries/feature-error-boundary.tsx": {
            "lines": 157,
            "tokens": 1090,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 67,
            "percentage": 3.82,
            "percentageTokens": 6.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/error-boundaries/api-error-boundary.tsx": {
            "lines": 139,
            "tokens": 959,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 67,
            "percentage": 4.32,
            "percentageTokens": 6.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/community/knowledge-base.tsx": {
            "lines": 137,
            "tokens": 1003,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/client/faq-accordion.tsx": {
            "lines": 30,
            "tokens": 230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/booking/booking-button.tsx": {
            "lines": 124,
            "tokens": 735,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/role-protected.tsx": {
            "lines": 101,
            "tokens": 610,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/protected-route.tsx": {
            "lines": 81,
            "tokens": 592,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/progressive-loading-state.tsx": {
            "lines": 83,
            "tokens": 701,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/optimized-loading-state.tsx": {
            "lines": 71,
            "tokens": 479,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/loading-state.tsx": {
            "lines": 56,
            "tokens": 373,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/express-auth-provider.tsx": {
            "lines": 55,
            "tokens": 238,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/clerk-auth-form.tsx": {
            "lines": 81,
            "tokens": 545,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 126,
            "percentage": 25.93,
            "percentageTokens": 23.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/auth-status.tsx": {
            "lines": 253,
            "tokens": 2006,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 178,
            "percentage": 10.28,
            "percentageTokens": 8.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/auth/auth-error-boundary.tsx": {
            "lines": 277,
            "tokens": 2053,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 90,
            "percentage": 2.17,
            "percentageTokens": 4.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/settings-panel.tsx": {
            "lines": 119,
            "tokens": 837,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/session-type-form.tsx": {
            "lines": 258,
            "tokens": 1858,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/admin-nav.tsx": {
            "lines": 51,
            "tokens": 296,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/admin/admin-dashboard.tsx": {
            "lines": 129,
            "tokens": 994,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/test/layout.tsx": {
            "lines": 10,
            "tokens": 57,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/role-test/page.tsx": {
            "lines": 114,
            "tokens": 998,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/role-test/client.tsx": {
            "lines": 317,
            "tokens": 2760,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 36,
            "duplicatedTokens": 300,
            "percentage": 11.36,
            "percentageTokens": 10.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/onboarding/page.tsx": {
            "lines": 177,
            "tokens": 1202,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 60,
            "duplicatedTokens": 408,
            "percentage": 33.9,
            "percentageTokens": 33.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/onboarding/layout.tsx": {
            "lines": 13,
            "tokens": 91,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/calendly-test/page.tsx": {
            "lines": 115,
            "tokens": 975,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 246,
            "percentage": 21.74,
            "percentageTokens": 25.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/calendly-direct-test/page.tsx": {
            "lines": 22,
            "tokens": 154,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/booking/layout.tsx": {
            "lines": 13,
            "tokens": 98,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth-test/page.tsx": {
            "lines": 96,
            "tokens": 708,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 147,
            "percentage": 20.83,
            "percentageTokens": 20.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/auth-test/client.tsx": {
            "lines": 267,
            "tokens": 2248,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 56,
            "duplicatedTokens": 447,
            "percentage": 20.97,
            "percentageTokens": 19.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(platform)/layout.tsx": {
            "lines": 30,
            "tokens": 207,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(marketing)/page.tsx": {
            "lines": 63,
            "tokens": 374,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/(marketing)/layout.tsx": {
            "lines": 17,
            "tokens": 123,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "pages/_document.tsx": {
            "lines": 12,
            "tokens": 88,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "examples/word-rotate-fonts-example.tsx": {
            "lines": 44,
            "tokens": 250,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "docs/buildappswith-platform-overview.tsx": {
            "lines": 630,
            "tokens": 5319,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/user-auth-form.tsx": {
            "lines": 167,
            "tokens": 1304,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/theme-provider.tsx": {
            "lines": 27,
            "tokens": 254,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/suspense-user-auth-form.tsx": {
            "lines": 12,
            "tokens": 104,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/site-footer.tsx": {
            "lines": 172,
            "tokens": 1286,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/feature-flag-wrapper.tsx": {
            "lines": 92,
            "tokens": 589,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/not-found.tsx": {
            "lines": 12,
            "tokens": 116,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/layout.tsx": {
            "lines": 39,
            "tokens": 256,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/global-error.tsx": {
            "lines": 30,
            "tokens": 246,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/error.tsx": {
            "lines": 28,
            "tokens": 203,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "test-page.tsx": {
            "lines": 11,
            "tokens": 69,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 36477,
          "tokens": 283366,
          "sources": 268,
          "clones": 79,
          "duplicatedLines": 1247,
          "duplicatedTokens": 10317,
          "percentage": 3.42,
          "percentageTokens": 3.64,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "libs/auth/src/lib/auth.module.css": {
            "lines": 6,
            "tokens": 0,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/scheduling/calendly/calendly-embed-optimized.tsx": {
            "lines": 11,
            "tokens": 36,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "components/landing/accessibility.tsx": {
            "lines": 0,
            "tokens": 2,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "app/globals.css": {
            "lines": 395,
            "tokens": 2737,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 100,
            "duplicatedTokens": 716,
            "percentage": 25.32,
            "percentageTokens": 26.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 412,
          "tokens": 2775,
          "sources": 4,
          "clones": 2,
          "duplicatedLines": 50,
          "duplicatedTokens": 358,
          "percentage": 12.14,
          "percentageTokens": 12.9,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 122112,
      "tokens": 896993,
      "sources": 964,
      "clones": 357,
      "duplicatedLines": 6212,
      "duplicatedTokens": 49086,
      "percentage": 5.09,
      "percentageTokens": 5.47,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n\n// Placeholder logger until we set up proper imports\nconst logger = {\n  info: (message: string, context?: any) => console.log(`[INFO] ${message}`, context),\n  error: (message: string, error?: any) => console.error(`[ERROR] ${message}`, error),\n  warn: (message: string, context?: any) => console.warn(`[WARN] ${message}`, context),\n  debug: (message: string, context?: any) => console.debug(`[DEBUG] ${message}`, context),\n};\n\n/**\n * Creates a Next.js middleware function that uses Clerk Express SDK\n * @returns Middleware function compatible with Next.js\n */",
      "tokens": 0,
      "firstFile": {
        "name": "libs/auth/src/lib/express/adapter.ts",
        "start": 34,
        "end": 47,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 139
        },
        "endLoc": {
          "line": 47,
          "column": 4,
          "position": 296
        }
      },
      "secondFile": {
        "name": "libs/auth/src/lib/express/server-auth.ts",
        "start": 14,
        "end": 26,
        "startLoc": {
          "line": 14,
          "column": 11,
          "position": 65
        },
        "endLoc": {
          "line": 26,
          "column": 4,
          "position": 222
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", {\n        bookingId: bookingContext.bookingId,\n        state: bookingContext.state,\n        userId: user?.id || 'anonymous',\n        isAuthenticated: !!user\n      });\n      \n      return NextResponse.json({\n        success: true,\n        bookingId: bookingContext.bookingId,\n        state: bookingContext.state\n      });\n      \n    } catch (validationError) {\n      logger.error('Validation error when creating anonymous booking'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/bookings/create/route.ts",
        "start": 55,
        "end": 69,
        "startLoc": {
          "line": 55,
          "column": 37,
          "position": 464
        },
        "endLoc": {
          "line": 69,
          "column": 51,
          "position": 571
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/bookings/initialize/route.ts",
        "start": 46,
        "end": 60,
        "startLoc": {
          "line": 46,
          "column": 41,
          "position": 362
        },
        "endLoc": {
          "line": 60,
          "column": 45,
          "position": 469
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n        error: validationError,\n        userId: user?.id || 'anonymous'\n      });\n      \n      return NextResponse.json(\n        { error: 'Invalid request data', details: validationError },\n        { status: 400 }\n      );\n    }\n    \n  } catch (error) {\n    logger.error('Error creating anonymous booking'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/bookings/create/route.ts",
        "start": 69,
        "end": 81,
        "startLoc": {
          "line": 69,
          "column": 51,
          "position": 572
        },
        "endLoc": {
          "line": 81,
          "column": 35,
          "position": 663
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/bookings/initialize/route.ts",
        "start": 60,
        "end": 72,
        "startLoc": {
          "line": 60,
          "column": 45,
          "position": 470
        },
        "endLoc": {
          "line": 72,
          "column": 29,
          "position": 561
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "= withAuth(async (\n  req: NextRequest,\n  userId: string,\n  { params }: { params: { bookingId: string } }\n) => {\n  const startTime = performance.now();\n  const path = req.nextUrl.pathname;\n  const method = req.method;\n  const { bookingId } = params;\n\n  try {\n    logger.info('Booking update request received'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/bookings/[bookingId]/route.ts",
        "start": 147,
        "end": 158,
        "startLoc": {
          "line": 147,
          "column": 2,
          "position": 1010
        },
        "endLoc": {
          "line": 158,
          "column": 34,
          "position": 1127
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/bookings/[bookingId]/route.ts",
        "start": 25,
        "end": 36,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 225
        },
        "endLoc": {
          "line": 36,
          "column": 33,
          "position": 342
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ", {\n        path,\n        method,\n        userId,\n        bookingId\n      });\n      \n      return createAuthErrorResponse(\n        'RESOURCE_NOT_FOUND',\n        'Booking not found',\n        404,\n        path,\n        method,\n        userId\n      );\n    }\n    \n    // Get user roles from auth context\n    const req_roles = req.auth?.sessionClaims?.roles as UserRole[] || \n                    req.auth?.sessionClaims?.['public_metadata']?.['roles'] as UserRole[] || \n                    [];\n    \n    // Authorization check",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/bookings/[bookingId]/route.ts",
        "start": 169,
        "end": 191,
        "startLoc": {
          "line": 169,
          "column": 31,
          "position": 1190
        },
        "endLoc": {
          "line": 191,
          "column": 23,
          "position": 1318
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/bookings/[bookingId]/route.ts",
        "start": 47,
        "end": 69,
        "startLoc": {
          "line": 47,
          "column": 20,
          "position": 405
        },
        "endLoc": {
          "line": 69,
          "column": 59,
          "position": 533
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ",\n        duration: `${(performance.now() - startTime).toFixed(2)}ms`\n      });\n\n      // Create response with standardized format\n      const response = NextResponse.json({\n        success: true,\n        data: { booking: updatedBooking }\n      });\n\n      // Add performance metrics to the response\n      return addAuthPerformanceMetrics(\n        response, \n        startTime, \n        true, \n        path, \n        method, \n        userId\n      );\n    } else {",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/bookings/[bookingId]/route.ts",
        "start": 346,
        "end": 365,
        "startLoc": {
          "line": 346,
          "column": 14,
          "position": 2240
        },
        "endLoc": {
          "line": 365,
          "column": 2,
          "position": 2360
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/bookings/[bookingId]/route.ts",
        "start": 272,
        "end": 291,
        "startLoc": {
          "line": 272,
          "column": 7,
          "position": 1818
        },
        "endLoc": {
          "line": 291,
          "column": 3,
          "position": 1938
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      error: errorMessage,\n      path,\n      method,\n      userId,\n      bookingId,\n      duration: `${(performance.now() - startTime).toFixed(2)}ms`\n    });\n    \n    Sentry.captureException(error);\n    \n    return createAuthErrorResponse(\n      AuthErrorType.SERVER,\n      'Failed to update booking'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/bookings/[bookingId]/route.ts",
        "start": 385,
        "end": 398,
        "startLoc": {
          "line": 385,
          "column": 25,
          "position": 2476
        },
        "endLoc": {
          "line": 398,
          "column": 27,
          "position": 2558
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/bookings/[bookingId]/route.ts",
        "start": 121,
        "end": 134,
        "startLoc": {
          "line": 121,
          "column": 25,
          "position": 890
        },
        "endLoc": {
          "line": 134,
          "column": 26,
          "position": 972
        }
      }
    },
    {
      "format": "typescript",
      "lines": 37,
      "fragment": "},\n      include: {\n        user: {\n          select: {\n            id: true,\n            name: true,\n            email: true,\n            image: true,\n            roles: true,\n          }\n        },\n        skills: {\n          include: {\n            skill: true\n          }\n        }\n      }\n    });\n\n    if (!builderProfile) {\n      return NextResponse.json(\n        { error: 'Builder profile not found' },\n        { status: 404 }\n      );\n    }\n\n    // Transform skills into a more readable format\n    const formattedSkills = builderProfile.skills.map(skill => ({\n      id: skill.skill.id,\n      name: skill.skill.name,\n      category: skill.skill.category,\n    }));\n\n    // Return the builder profile with user information\n    return NextResponse.json({\n      id: builderProfile.id,\n      user",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/profiles/builder/[id]/route.ts",
        "start": 41,
        "end": 77,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 241
        },
        "endLoc": {
          "line": 77,
          "column": 5,
          "position": 469
        }
      },
      "secondFile": {
        "name": "app/api/profiles/builder/slug/[slug]/route.ts",
        "start": 33,
        "end": 69,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 185
        },
        "endLoc": {
          "line": 69,
          "column": 5,
          "position": 413
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ",\n      user: {\n        id: builderProfile.user.id,\n        name: builderProfile.user.name,\n        email: builderProfile.user.email,\n        image: builderProfile.user.image,\n      },\n      bio: builderProfile.bio,\n      headline: builderProfile.headline,\n      skills: formattedSkills,\n      availableForHire: builderProfile.availableForHire,\n      adhdFocus: builderProfile.adhdFocus,\n      validationTier: builderProfile.validationTier,\n      socialLinks: builderProfile.socialLinks,\n      createdAt: builderProfile.createdAt,\n      updatedAt: builderProfile.updatedAt,\n    });\n  } catch (error) {\n    logger",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/profiles/builder/[id]/route.ts",
        "start": 76,
        "end": 94,
        "startLoc": {
          "line": 76,
          "column": 3,
          "position": 466
        },
        "endLoc": {
          "line": 94,
          "column": 7,
          "position": 618
        }
      },
      "secondFile": {
        "name": "app/api/profiles/builder/slug/[slug]/route.ts",
        "start": 69,
        "end": 87,
        "startLoc": {
          "line": 69,
          "column": 5,
          "position": 419
        },
        "endLoc": {
          "line": 87,
          "column": 8,
          "position": 571
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ";\n    \n    // Get the app with builder info\n    const app = await db.app.findUnique({\n      where: { id },\n      include: {\n        builder: {\n          include: {\n            user: true\n          }\n        }\n      }\n    });\n    \n    if (!app) {\n      return NextResponse.json(\n        { error: \"App not found\" },\n        { status: 404 }\n      );\n    }\n    \n    // Check if the user owns this app\n    if (app.builder.user.email !== user.email) {\n      // Admin check\n      const currentUser = await db.user.findUnique({\n        where: { email: user.email }\n      });\n      \n      if (!currentUser?.roles.includes(\"ADMIN\")) {\n        return NextResponse.json(\n          { error: \"You don't have permission to delete this app\"",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/apps/edit/[id]/route.ts",
        "start": 81,
        "end": 111,
        "startLoc": {
          "line": 81,
          "column": 7,
          "position": 808
        },
        "endLoc": {
          "line": 111,
          "column": 47,
          "position": 1029
        }
      },
      "secondFile": {
        "name": "app/api/apps/edit/[id]/route.ts",
        "start": 14,
        "end": 44,
        "startLoc": {
          "line": 14,
          "column": 2,
          "position": 171
        },
        "endLoc": {
          "line": 44,
          "column": 45,
          "position": 392
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= withAdmin(async (\n  req: NextRequest,\n  userId: string,\n  roles: UserRole[],\n  { params }: { params: { id: string } }\n) => {\n  const startTime = performance.now();\n  const path = req.nextUrl.pathname;\n  const method = req.method;\n  const id = params.id;\n\n  try {\n    logger.info('Admin session type update request received'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/admin/session-types/[id]/route.ts",
        "start": 125,
        "end": 137,
        "startLoc": {
          "line": 125,
          "column": 2,
          "position": 960
        },
        "endLoc": {
          "line": 137,
          "column": 45,
          "position": 1084
        }
      },
      "secondFile": {
        "name": "app/api/admin/session-types/[id]/route.ts",
        "start": 26,
        "end": 38,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 333
        },
        "endLoc": {
          "line": 38,
          "column": 38,
          "position": 457
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      error: errorMessage,\n      sessionTypeId: id,\n      path,\n      method,\n      userId,\n      duration: `${(performance.now() - startTime).toFixed(2)}ms`\n    });\n    \n    Sentry.captureException(error);\n    \n    return createAuthErrorResponse(\n      AuthErrorType.SERVER,\n      'Failed to update session type'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/admin/session-types/[id]/route.ts",
        "start": 241,
        "end": 254,
        "startLoc": {
          "line": 241,
          "column": 30,
          "position": 1857
        },
        "endLoc": {
          "line": 254,
          "column": 32,
          "position": 1942
        }
      },
      "secondFile": {
        "name": "app/api/admin/session-types/[id]/route.ts",
        "start": 101,
        "end": 114,
        "startLoc": {
          "line": 101,
          "column": 30,
          "position": 835
        },
        "endLoc": {
          "line": 114,
          "column": 31,
          "position": 920
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= withAdmin(async (\n  req: NextRequest,\n  userId: string,\n  roles: UserRole[],\n  { params }: { params: { id: string } }\n) => {\n  const startTime = performance.now();\n  const path = req.nextUrl.pathname;\n  const method = req.method;\n  const id = params.id;\n\n  try {\n    logger.info('Admin session type deletion request received'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/admin/session-types/[id]/route.ts",
        "start": 265,
        "end": 277,
        "startLoc": {
          "line": 265,
          "column": 2,
          "position": 1982
        },
        "endLoc": {
          "line": 277,
          "column": 47,
          "position": 2106
        }
      },
      "secondFile": {
        "name": "app/api/admin/session-types/[id]/route.ts",
        "start": 26,
        "end": 38,
        "startLoc": {
          "line": 26,
          "column": 2,
          "position": 333
        },
        "endLoc": {
          "line": 38,
          "column": 38,
          "position": 457
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n      error: errorMessage,\n      sessionTypeId: id,\n      path,\n      method,\n      userId,\n      duration: `${(performance.now() - startTime).toFixed(2)}ms`\n    });\n    \n    Sentry.captureException(error);\n    \n    return createAuthErrorResponse(\n      AuthErrorType.SERVER,\n      'Failed to delete session type'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/admin/session-types/[id]/route.ts",
        "start": 363,
        "end": 376,
        "startLoc": {
          "line": 363,
          "column": 30,
          "position": 2611
        },
        "endLoc": {
          "line": 376,
          "column": 32,
          "position": 2696
        }
      },
      "secondFile": {
        "name": "app/api/admin/session-types/[id]/route.ts",
        "start": 101,
        "end": 114,
        "startLoc": {
          "line": 101,
          "column": 30,
          "position": 835
        },
        "endLoc": {
          "line": 114,
          "column": 31,
          "position": 920
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async () => {\n      const eventId = 'test-event-id';\n      const inviteeId = 'test-invitee-id';\n\n      const webhookPayload = createMockWebhookPayload('invitee.created', eventId, inviteeId, {\n        payload: {\n          invitee: {\n            tracking: {\n              utm_source: 'buildappswith',\n              utm_medium: 'scheduling',\n              utm_campaign: 'booking',\n              utm_content: 'session_type_id=non-existent&client_id=client-1'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/service.test.ts",
        "start": 274,
        "end": 285,
        "startLoc": {
          "line": 274,
          "column": 37,
          "position": 2235
        },
        "endLoc": {
          "line": 285,
          "column": 50,
          "position": 2330
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/service.test.ts",
        "start": 191,
        "end": 202,
        "startLoc": {
          "line": 191,
          "column": 39,
          "position": 1612
        },
        "endLoc": {
          "line": 202,
          "column": 47,
          "position": 1707
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "vi.mock('@/lib/scheduling/calendly/key-manager', () => ({\n        getCalendlyKeyManager: () => ({\n          getToken: () => 'test-token',\n          markTokenFailed: vi.fn()\n        }),\n        TokenStatus: {\n          ACTIVE: 'active',\n          INVALID: 'invalid'\n        }\n      }));\n\n      // Mock a network error",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/api-client.test.ts",
        "start": 94,
        "end": 105,
        "startLoc": {
          "line": 94,
          "column": 7,
          "position": 690
        },
        "endLoc": {
          "line": 105,
          "column": 24,
          "position": 774
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/api-client.test.ts",
        "start": 70,
        "end": 81,
        "startLoc": {
          "line": 70,
          "column": 7,
          "position": 475
        },
        "endLoc": {
          "line": 81,
          "column": 55,
          "position": 559
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", async () => {\n      // Mock the key manager to return a token without error\n      vi.mock('@/lib/scheduling/calendly/key-manager', () => ({\n        getCalendlyKeyManager: () => ({\n          getToken: () => 'test-token',\n          markTokenFailed: vi.fn()\n        }),\n        TokenStatus: {\n          ACTIVE: 'active',\n          INVALID: 'invalid'\n        }\n      }));\n\n      // Mock the users/me endpoint for the current user",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/api-client.test.ts",
        "start": 120,
        "end": 133,
        "startLoc": {
          "line": 120,
          "column": 38,
          "position": 883
        },
        "endLoc": {
          "line": 133,
          "column": 51,
          "position": 982
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/api-client.test.ts",
        "start": 92,
        "end": 81,
        "startLoc": {
          "line": 92,
          "column": 31,
          "position": 675
        },
        "endLoc": {
          "line": 81,
          "column": 55,
          "position": 559
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", async () => {\n      // Mock the key manager to return a token without error\n      vi.mock('@/lib/scheduling/calendly/key-manager', () => ({\n        getCalendlyKeyManager: () => ({\n          getToken: () => 'test-token',\n          markTokenFailed: vi.fn()\n        }),\n        TokenStatus: {\n          ACTIVE: 'active',\n          INVALID: 'invalid'\n        }\n      }));\n\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/api-client.test.ts",
        "start": 204,
        "end": 217,
        "startLoc": {
          "line": 204,
          "column": 48,
          "position": 1477
        },
        "endLoc": {
          "line": 217,
          "column": 6,
          "position": 1576
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/api-client.test.ts",
        "start": 92,
        "end": 81,
        "startLoc": {
          "line": 92,
          "column": 31,
          "position": 675
        },
        "endLoc": {
          "line": 81,
          "column": 55,
          "position": 559
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ", async () => {\n      // Mock the key manager to return a token without error\n      vi.mock('@/lib/scheduling/calendly/key-manager', () => ({\n        getCalendlyKeyManager: () => ({\n          getToken: () => 'test-token',\n          markTokenFailed: vi.fn()\n        }),\n        TokenStatus: {\n          ACTIVE: 'active',\n          INVALID: 'invalid'\n        }\n      }));\n\n      // Mock the users/me endpoint for the current user\n      mockServer.use(\n        http.get('https://api.calendly.com/users/me', () => {\n          return HttpResponse.json(mockCalendlyUser);\n        })\n      );\n\n      // Create mock events",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/api-client.test.ts",
        "start": 275,
        "end": 295,
        "startLoc": {
          "line": 275,
          "column": 43,
          "position": 2050
        },
        "endLoc": {
          "line": 295,
          "column": 22,
          "position": 2193
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/api-client.test.ts",
        "start": 92,
        "end": 140,
        "startLoc": {
          "line": 92,
          "column": 31,
          "position": 675
        },
        "endLoc": {
          "line": 140,
          "column": 33,
          "position": 1026
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", async () => {\n      // Mock the key manager to return a token without error\n      vi.mock('@/lib/scheduling/calendly/key-manager', () => ({\n        getCalendlyKeyManager: () => ({\n          getToken: () => 'test-token',\n          markTokenFailed: vi.fn()\n        }),\n        TokenStatus: {\n          ACTIVE: 'active',\n          INVALID: 'invalid'\n        }\n      }));\n\n      // Create a test implementation for this specific test",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/api-client.test.ts",
        "start": 332,
        "end": 345,
        "startLoc": {
          "line": 332,
          "column": 45,
          "position": 2455
        },
        "endLoc": {
          "line": 345,
          "column": 55,
          "position": 2554
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/api-client.test.ts",
        "start": 92,
        "end": 81,
        "startLoc": {
          "line": 92,
          "column": 31,
          "position": 675
        },
        "endLoc": {
          "line": 81,
          "column": 55,
          "position": 559
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", async () => {\n      // Mock the key manager to return a token without error\n      vi.mock('@/lib/scheduling/calendly/key-manager', () => ({\n        getCalendlyKeyManager: () => ({\n          getToken: () => 'test-token',\n          markTokenFailed: vi.fn()\n        }),\n        TokenStatus: {\n          ACTIVE: 'active',\n          INVALID: 'invalid'\n        }\n      }));\n\n      const mockEvent",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/api-client.test.ts",
        "start": 373,
        "end": 386,
        "startLoc": {
          "line": 373,
          "column": 43,
          "position": 2725
        },
        "endLoc": {
          "line": 386,
          "column": 10,
          "position": 2826
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/api-client.test.ts",
        "start": 92,
        "end": 217,
        "startLoc": {
          "line": 92,
          "column": 31,
          "position": 675
        },
        "endLoc": {
          "line": 217,
          "column": 12,
          "position": 1578
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "();\n      \n      expect(auth).toEqual({\n        userId: 'test-user-id',\n        sessionId: 'test-session-id',\n        isAuthenticated: true,\n        roles: [UserRole.CLIENT, UserRole.BUILDER],\n        hasRole: expect.any(Function),\n      });\n    });\n    \n    it('should throw AuthenticationError when user is not authenticated'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/server-auth.test.ts",
        "start": 292,
        "end": 303,
        "startLoc": {
          "line": 292,
          "column": 18,
          "position": 2501
        },
        "endLoc": {
          "line": 303,
          "column": 66,
          "position": 2581
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/server-auth.test.ts",
        "start": 86,
        "end": 97,
        "startLoc": {
          "line": 86,
          "column": 14,
          "position": 724
        },
        "endLoc": {
          "line": 97,
          "column": 43,
          "position": 804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n      \n      expect(auth).toEqual({\n        userId: 'test-user-id',\n        sessionId: 'test-session-id',\n        isAuthenticated: true,\n        roles: [UserRole.CLIENT, UserRole.BUILDER],\n        hasRole: expect.any(Function),\n      });\n    });\n    \n    it('should throw AuthenticationError when user is not authenticated', () => {\n      mockHeaders.delete('x-clerk-auth-user-id');\n      \n      expect(() => requireServerRole",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/server-auth.test.ts",
        "start": 313,
        "end": 327,
        "startLoc": {
          "line": 313,
          "column": 7,
          "position": 2689
        },
        "endLoc": {
          "line": 327,
          "column": 18,
          "position": 2797
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/server-auth.test.ts",
        "start": 86,
        "end": 306,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 725
        },
        "endLoc": {
          "line": 306,
          "column": 18,
          "position": 2610
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ", async () => {\n      const { useAuth: useClerkAuth } = require('@clerk/nextjs');\n      const mockSignOut = vi.fn().mockResolvedValue({ ok: true });\n      \n      useClerkAuth.mockReturnValue({\n        isLoaded: true,\n        isSignedIn: true,\n        userId: 'test-user-id',\n        getToken: vi.fn().mockResolvedValue('header.eyJyb2xlcyI6WyJDTElFTlQiXX0=.signature'),\n        signOut: mockSignOut,\n      });\n      \n      const { result:",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/client-auth.test.tsx",
        "start": 360,
        "end": 372,
        "startLoc": {
          "line": 360,
          "column": 52,
          "position": 3201
        },
        "endLoc": {
          "line": 372,
          "column": 2,
          "position": 3324
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/client-auth.test.tsx",
        "start": 185,
        "end": 196,
        "startLoc": {
          "line": 185,
          "column": 55,
          "position": 1555
        },
        "endLoc": {
          "line": 196,
          "column": 2,
          "position": 1677
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "),\n}));\n\nvi.mock('@/lib/logger', () => ({\n  logger: {\n    debug: vi.fn(),\n    info: vi.fn(),\n    error: vi.fn(),\n  },\n}));\n\ndescribe('API Route Protection'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 48,
        "end": 59,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 564
        },
        "endLoc": {
          "line": 59,
          "column": 23,
          "position": 639
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/server-auth.test.ts",
        "start": 22,
        "end": 33,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 182
        },
        "endLoc": {
          "line": 33,
          "column": 34,
          "position": 257
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n      \n      const handler = vi.fn(() => NextResponse.json({ success: true }));\n      const protectedHandler = withAuth(handler);\n      \n      await protectedHandler(mockRequest as NextRequest);\n      \n      expect(handler).not.toHaveBeenCalled();\n      expect(logger",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 122,
        "end": 130,
        "startLoc": {
          "line": 122,
          "column": 15,
          "position": 1202
        },
        "endLoc": {
          "line": 130,
          "column": 7,
          "position": 1285
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 99,
        "end": 107,
        "startLoc": {
          "line": 99,
          "column": 2,
          "position": 988
        },
        "endLoc": {
          "line": 107,
          "column": 13,
          "position": 1071
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", handler);\n      \n      await protectedHandler(mockRequest as NextRequest);\n      \n      expect(handler).toHaveBeenCalledWith(\n        expect.objectContaining({\n          auth: expect.objectContaining({\n            userId: 'test-user-id',\n          }),\n        }),\n        'test-user-id',\n        [UserRole.CLIENT, UserRole.BUILDER]\n      );\n    });\n    \n    it('should return 403 when user does not have any of the required roles'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 188,
        "end": 203,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 1824
        },
        "endLoc": {
          "line": 203,
          "column": 70,
          "position": 1920
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 144,
        "end": 159,
        "startLoc": {
          "line": 144,
          "column": 7,
          "position": 1429
        },
        "endLoc": {
          "line": 159,
          "column": 62,
          "position": 1525
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async () => {\n      const { getAuth } = require('@clerk/express');\n      getAuth.mockReturnValue({\n        userId: 'test-user-id',\n        sessionId: 'test-session-id',\n        sessionClaims: {\n          roles: [UserRole.CLIENT],\n        },\n      });\n      \n      const handler = vi.fn(() => NextResponse.json({ success: true }));\n      const protectedHandler = withAnyRole",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 203,
        "end": 214,
        "startLoc": {
          "line": 203,
          "column": 70,
          "position": 1921
        },
        "endLoc": {
          "line": 214,
          "column": 12,
          "position": 2037
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 159,
        "end": 170,
        "startLoc": {
          "line": 159,
          "column": 62,
          "position": 1526
        },
        "endLoc": {
          "line": 170,
          "column": 9,
          "position": 1642
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "const handler = vi.fn(() => NextResponse.json({ success: true }));\n      const protectedHandler = withAnyRole([UserRole.ADMIN, UserRole.BUILDER], handler);\n      \n      await protectedHandler(mockRequest as NextRequest);\n      \n      expect(handler).not",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 213,
        "end": 218,
        "startLoc": {
          "line": 213,
          "column": 7,
          "position": 1999
        },
        "endLoc": {
          "line": 218,
          "column": 4,
          "position": 2078
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 187,
        "end": 192,
        "startLoc": {
          "line": 187,
          "column": 7,
          "position": 1774
        },
        "endLoc": {
          "line": 192,
          "column": 21,
          "position": 1853
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", handler);\n      \n      await protectedHandler(mockRequest as NextRequest);\n      \n      expect(handler).not.toHaveBeenCalled();\n      expect(NextResponse.json).toHaveBeenCalledWith(\n        expect.objectContaining({\n          success: false,\n          message: 'Insufficient permissions',\n        }),\n        { status: 403 }\n      );\n    });\n  });\n\n  describe('withAllRoles'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 214,
        "end": 229,
        "startLoc": {
          "line": 214,
          "column": 2,
          "position": 2049
        },
        "endLoc": {
          "line": 229,
          "column": 15,
          "position": 2150
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 170,
        "end": 185,
        "startLoc": {
          "line": 170,
          "column": 6,
          "position": 1647
        },
        "endLoc": {
          "line": 185,
          "column": 14,
          "position": 1748
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", UserRole.BUILDER], handler);\n      \n      await protectedHandler(mockRequest as NextRequest);\n      \n      expect(handler).toHaveBeenCalledWith(\n        expect.objectContaining({\n          auth: expect.objectContaining({\n            userId: 'test-user-id',\n          }),\n        }),\n        'test-user-id',\n        [UserRole.CLIENT, UserRole.BUILDER]\n      );\n    });\n    \n    it('should return 403 when user does not have all required roles'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 232,
        "end": 247,
        "startLoc": {
          "line": 232,
          "column": 7,
          "position": 2220
        },
        "endLoc": {
          "line": 247,
          "column": 63,
          "position": 2322
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 188,
        "end": 159,
        "startLoc": {
          "line": 188,
          "column": 6,
          "position": 1818
        },
        "endLoc": {
          "line": 159,
          "column": 62,
          "position": 1525
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async () => {\n      const { getAuth } = require('@clerk/express');\n      getAuth.mockReturnValue({\n        userId: 'test-user-id',\n        sessionId: 'test-session-id',\n        sessionClaims: {\n          roles: [UserRole.CLIENT],\n        },\n      });\n      \n      const handler = vi.fn(() => NextResponse.json({ success: true }));\n      const protectedHandler = withAllRoles",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 247,
        "end": 258,
        "startLoc": {
          "line": 247,
          "column": 63,
          "position": 2323
        },
        "endLoc": {
          "line": 258,
          "column": 13,
          "position": 2439
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 159,
        "end": 170,
        "startLoc": {
          "line": 159,
          "column": 62,
          "position": 1526
        },
        "endLoc": {
          "line": 170,
          "column": 9,
          "position": 1642
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "const handler = vi.fn(() => NextResponse.json({ success: true }));\n      const protectedHandler = withAllRoles([UserRole.CLIENT, UserRole.BUILDER], handler);\n      \n      await protectedHandler(mockRequest as NextRequest);\n      \n      expect(handler).not",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 257,
        "end": 262,
        "startLoc": {
          "line": 257,
          "column": 7,
          "position": 2401
        },
        "endLoc": {
          "line": 262,
          "column": 4,
          "position": 2480
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 231,
        "end": 236,
        "startLoc": {
          "line": 231,
          "column": 7,
          "position": 2176
        },
        "endLoc": {
          "line": 236,
          "column": 21,
          "position": 2255
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ", UserRole.BUILDER], handler);\n      \n      await protectedHandler(mockRequest as NextRequest);\n      \n      expect(handler).not.toHaveBeenCalled();\n      expect(NextResponse.json).toHaveBeenCalledWith(\n        expect.objectContaining({\n          success: false,\n          message: 'Insufficient permissions',\n        }),\n        { status: 403 }\n      );\n    });\n  });\n\n  describe('Role-specific wrappers'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 258,
        "end": 273,
        "startLoc": {
          "line": 258,
          "column": 7,
          "position": 2445
        },
        "endLoc": {
          "line": 273,
          "column": 25,
          "position": 2552
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 214,
        "end": 185,
        "startLoc": {
          "line": 214,
          "column": 6,
          "position": 2043
        },
        "endLoc": {
          "line": 185,
          "column": 14,
          "position": 1748
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", handler);\n      \n      await protectedHandler(mockRequest as NextRequest);\n      \n      expect(handler).not.toHaveBeenCalled();\n      expect(NextResponse.json).toHaveBeenCalledWith(\n        expect.objectContaining({\n          success: false,\n          message: 'Insufficient permissions',\n        }),\n        { status: 403 }\n      );\n    });\n    \n    it",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 329,
        "end": 343,
        "startLoc": {
          "line": 329,
          "column": 15,
          "position": 3117
        },
        "endLoc": {
          "line": 343,
          "column": 3,
          "position": 3212
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 170,
        "end": 183,
        "startLoc": {
          "line": 170,
          "column": 6,
          "position": 1647
        },
        "endLoc": {
          "line": 183,
          "column": 2,
          "position": 1740
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "vi.mock('next/server', () => ({\n  NextRequest: vi.fn(),\n  NextResponse: {\n    next: vi.fn(() => ({ headers: new Map() })),\n    redirect: vi.fn((url) => ({ headers: new Map(), url })),\n    json: vi.fn((body, options) => ({ body, options, headers: new Map() })),\n  },\n}));\n\nvi.mock('@clerk/express', () => ({\n  clerkMiddleware",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/adapter.test.ts",
        "start": 6,
        "end": 16,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 66
        },
        "endLoc": {
          "line": 16,
          "column": 16,
          "position": 228
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 7,
        "end": 17,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 94
        },
        "endLoc": {
          "line": 17,
          "column": 12,
          "position": 256
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": vi.fn(() => async (req: any, res: any, next: any) => {\n    next();\n    return true;\n  }),\n  getAuth: vi.fn(() => ({\n    userId: 'test-user-id',\n    sessionId: 'test-session-id',\n    sessionClaims: {\n      roles: ['CLIENT']",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/adapter.test.ts",
        "start": 16,
        "end": 24,
        "startLoc": {
          "line": 16,
          "column": 16,
          "position": 229
        },
        "endLoc": {
          "line": 24,
          "column": 2,
          "position": 324
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 17,
        "end": 25,
        "startLoc": {
          "line": 17,
          "column": 12,
          "position": 257
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 352
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n  })),\n}));\n\nvi.mock('@/lib/logger', () => ({\n  logger: {\n    debug: vi.fn(),\n    info: vi.fn(),\n    error: vi.fn(),\n  },\n}));\n\ndescribe('Clerk Express SDK Adapter'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/auth/express/adapter.test.ts",
        "start": 25,
        "end": 37,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 329
        },
        "endLoc": {
          "line": 37,
          "column": 28,
          "position": 409
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express/api-auth.test.ts",
        "start": 47,
        "end": 33,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 559
        },
        "endLoc": {
          "line": 33,
          "column": 34,
          "position": 257
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ".\n        </CardDescription>\n      </CardHeader>\n      \n      <CardContent>\n        {error && (\n          <div className=\"mb-4 p-3 bg-red-50 border border-red-200 text-red-700 rounded-md\">\n            {error}\n          </div>\n        )}\n        \n        {isLoading && !isAdding ? (\n          <div className=\"flex justify-center items-center p-8\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            {/* Display existing exceptions */",
      "tokens": 0,
      "firstFile": {
        "name": "components/scheduling/builder/availability/availability-exceptions.tsx",
        "start": 225,
        "end": 242,
        "startLoc": {
          "line": 225,
          "column": 9,
          "position": 2042
        },
        "endLoc": {
          "line": 242,
          "column": 34,
          "position": 2159
        }
      },
      "secondFile": {
        "name": "components/scheduling/builder/availability/weekly-availability.tsx",
        "start": 171,
        "end": 188,
        "startLoc": {
          "line": 171,
          "column": 9,
          "position": 1614
        },
        "endLoc": {
          "line": 188,
          "column": 35,
          "position": 1731
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "), 'HH:mm')}\n                            onChange={(e) => {\n                              const [hours, minutes] = e.target.value.split(':').map(Number);\n                              const date = new Date(newException.date);\n                              date.setHours(hours, minutes, 0, 0);\n                              setNewSlot(prev => ({\n                                ...prev,\n                                endTime",
      "tokens": 0,
      "firstFile": {
        "name": "components/scheduling/builder/availability/availability-exceptions.tsx",
        "start": 411,
        "end": 418,
        "startLoc": {
          "line": 411,
          "column": 8,
          "position": 3574
        },
        "endLoc": {
          "line": 418,
          "column": 8,
          "position": 3673
        }
      },
      "secondFile": {
        "name": "components/scheduling/builder/availability/availability-exceptions.tsx",
        "start": 394,
        "end": 401,
        "startLoc": {
          "line": 394,
          "column": 10,
          "position": 3394
        },
        "endLoc": {
          "line": 401,
          "column": 10,
          "position": 3493
        }
      }
    },
    {
      "format": "tsx",
      "lines": 28,
      "fragment": "Cancel\n                  </Button>\n                  <Button\n                    onClick={handleCreateException}\n                    disabled={isLoading}\n                  >\n                    {isLoading ? (\n                      <span className=\"flex items-center\">\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                        Creating...\n                      </span>\n                    ) : (\n                      <span className=\"flex items-center\">\n                        <Save className=\"h-4 w-4 mr-2\" />\n                        Save\n                      </span>\n                    )}\n                  </Button>\n                </div>\n              </div>\n            ) : (\n              <Button\n                variant=\"outline\"\n                className=\"w-full mt-4\"\n                onClick={() => setIsAdding(true)}\n              >\n                <PlusCircle className=\"h-4 w-4 mr-2\" />\n                Add Exception",
      "tokens": 0,
      "firstFile": {
        "name": "components/scheduling/builder/availability/availability-exceptions.tsx",
        "start": 452,
        "end": 479,
        "startLoc": {
          "line": 452,
          "column": 21,
          "position": 3876
        },
        "endLoc": {
          "line": 479,
          "column": 10,
          "position": 4054
        }
      },
      "secondFile": {
        "name": "components/scheduling/builder/availability/weekly-availability.tsx",
        "start": 292,
        "end": 319,
        "startLoc": {
          "line": 292,
          "column": 21,
          "position": 2605
        },
        "endLoc": {
          "line": 319,
          "column": 13,
          "position": 2783
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ", {\n      error: error instanceof Error ? error.message : String(error)\n    });\n    \n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * Handle OPTIONS requests for CORS preflight\n */\nexport async function OPTIONS() {\n  return new NextResponse(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, calendly-webhook-signature'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/webhooks/calendly/route.ts",
        "start": 162,
        "end": 182,
        "startLoc": {
          "line": 162,
          "column": 36,
          "position": 1239
        },
        "endLoc": {
          "line": 182,
          "column": 43,
          "position": 1369
        }
      },
      "secondFile": {
        "name": "app/api/webhooks/stripe/route.ts",
        "start": 124,
        "end": 144,
        "startLoc": {
          "line": 124,
          "column": 34,
          "position": 841
        },
        "endLoc": {
          "line": 144,
          "column": 33,
          "position": 971
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "export async function GET(request: NextRequest) {\n  try {\n    // Get query parameters\n    const { searchParams } = new URL(request.url);\n    const rawParams = Object.fromEntries(searchParams.entries());\n    \n    // Parse and validate parameters\n    const result = querySchema.safeParse(rawParams);\n    \n    if (!result.success) {\n      return NextResponse.json(\n        { error: 'Invalid query parameters', details: result.error.flatten",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/session-types/route.ts",
        "start": 30,
        "end": 41,
        "startLoc": {
          "line": 30,
          "column": 1,
          "position": 305
        },
        "endLoc": {
          "line": 41,
          "column": 8,
          "position": 427
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/time-slots/route.ts",
        "start": 33,
        "end": 44,
        "startLoc": {
          "line": 33,
          "column": 1,
          "position": 253
        },
        "endLoc": {
          "line": 44,
          "column": 7,
          "position": 375
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "().optional(),\n});\n\n/**\n * Helper function to handle service errors with appropriate responses\n */\nfunction handleServiceError(error: any, defaultMessage: string): NextResponse {\n  console.error(defaultMessage, error);\n  Sentry.captureException(error);\n  \n  // Extract readable error message if available\n  const errorMessage = error.message || defaultMessage;\n  \n  return NextResponse.json(\n    { error: errorMessage }, \n    { status: 500 }\n  );\n}\n\n/**\n * Helper to check if user has permission to modify a builder's settings\n */",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/builder-settings/route.ts",
        "start": 23,
        "end": 44,
        "startLoc": {
          "line": 23,
          "column": 8,
          "position": 244
        },
        "endLoc": {
          "line": 44,
          "column": 4,
          "position": 361
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/time-slots/route.ts",
        "start": 11,
        "end": 32,
        "startLoc": {
          "line": 11,
          "column": 7,
          "position": 134
        },
        "endLoc": {
          "line": 32,
          "column": 4,
          "position": 251
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "{\n  try {\n    // Get query parameters\n    const { searchParams } = new URL(request.url);\n    const rawParams = Object.fromEntries(searchParams.entries());\n    \n    // Parse and validate parameters\n    const result = querySchema.safeParse(rawParams);\n    \n    if (!result.success) {\n      return NextResponse.json(\n        { error: 'Invalid query parameters', details: result.error.format() }, \n        { status: 400 }\n      );\n    }\n    \n    const { builderId }",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/builder-settings/route.ts",
        "start": 55,
        "end": 71,
        "startLoc": {
          "line": 55,
          "column": 2,
          "position": 486
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 628
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/time-slots/route.ts",
        "start": 33,
        "end": 49,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 267
        },
        "endLoc": {
          "line": 49,
          "column": 2,
          "position": 408
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n      duration: `${(performance.now() - startTime).toFixed(2)}ms`\n    });\n\n    // Create response with standardized format\n    const response = NextResponse.json({\n      success: true,\n      data: { booking }\n    });\n\n    // Add performance metrics to the response\n    return addAuthPerformanceMetrics(\n      response, \n      startTime, \n      true, \n      path, \n      method, \n      userId\n    );\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    \n    logger.error('Error creating booking'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/bookings/route.ts",
        "start": 143,
        "end": 165,
        "startLoc": {
          "line": 143,
          "column": 10,
          "position": 1076
        },
        "endLoc": {
          "line": 165,
          "column": 25,
          "position": 1233
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/bookings/[bookingId]/route.ts",
        "start": 99,
        "end": 121,
        "startLoc": {
          "line": 99,
          "column": 10,
          "position": 732
        },
        "endLoc": {
          "line": 121,
          "column": 25,
          "position": 889
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: errorMessage,\n      path,\n      method,\n      userId,\n      duration: `${(performance.now() - startTime).toFixed(2)}ms`\n    });\n    \n    Sentry.captureException(error);\n    \n    return createAuthErrorResponse(\n      AuthErrorType.SERVER,\n      'Error fetching bookings'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/bookings/route.ts",
        "start": 293,
        "end": 305,
        "startLoc": {
          "line": 293,
          "column": 26,
          "position": 2119
        },
        "endLoc": {
          "line": 305,
          "column": 26,
          "position": 2197
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/bookings/route.ts",
        "start": 165,
        "end": 177,
        "startLoc": {
          "line": 165,
          "column": 25,
          "position": 1234
        },
        "endLoc": {
          "line": 177,
          "column": 25,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "} from '@/lib/scheduling/real-data/scheduling-service';\nimport { withAuth } from '@/lib/auth/clerk/api-auth';\nimport { AuthUser } from '@/lib/auth/clerk/helpers';\nimport { UserRole } from '@/lib/auth/types';\nimport * as Sentry from '@sentry/nextjs';\n\n// Validation schema for query parameters\nconst querySchema = z.object({\n  builderId: z.string().min(1, 'Builder ID is required'),\n});\n\n// Validation schema for creating/updating an availability rule",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/availability-rules/route.ts",
        "start": 8,
        "end": 19,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 19,
          "column": 64,
          "position": 151
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/builder-settings/route.ts",
        "start": 6,
        "end": 17,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 41
        },
        "endLoc": {
          "line": 17,
          "column": 62,
          "position": 139
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "});\n\n/**\n * Helper function to handle service errors with appropriate responses\n */\nfunction handleServiceError(error: any, defaultMessage: string): NextResponse {\n  console.error(defaultMessage, error);\n  Sentry.captureException(error);\n  \n  // Extract readable error message if available\n  const errorMessage = error.message || defaultMessage;\n  \n  return NextResponse.json(\n    { error: errorMessage }, \n    { status: 500 }\n  );\n}\n\n/**\n * Helper to check if user has permission to modify a builder's availability\n */",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/availability-rules/route.ts",
        "start": 29,
        "end": 49,
        "startLoc": {
          "line": 29,
          "column": 1,
          "position": 300
        },
        "endLoc": {
          "line": 49,
          "column": 4,
          "position": 409
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/time-slots/route.ts",
        "start": 12,
        "end": 32,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 142
        },
        "endLoc": {
          "line": 32,
          "column": 4,
          "position": 251
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "function hasPermission(user: AuthUser, builderId: string): boolean {\n  const isAdmin = user.roles.includes(UserRole.ADMIN);\n  const isBuilder = user.roles.includes(UserRole.BUILDER);\n  const isOwnProfile = user.id === builderId;\n  return isAdmin || (isBuilder && isOwnProfile);\n}\n\n/**\n * GET handler for fetching availability rules for a builder\n */",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/availability-rules/route.ts",
        "start": 50,
        "end": 59,
        "startLoc": {
          "line": 50,
          "column": 1,
          "position": 411
        },
        "endLoc": {
          "line": 59,
          "column": 4,
          "position": 505
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/builder-settings/route.ts",
        "start": 45,
        "end": 54,
        "startLoc": {
          "line": 45,
          "column": 1,
          "position": 363
        },
        "endLoc": {
          "line": 54,
          "column": 4,
          "position": 457
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "export async function GET(request: NextRequest) {\n  try {\n    // Get query parameters\n    const { searchParams } = new URL(request.url);\n    const rawParams = Object.fromEntries(searchParams.entries());\n    \n    // Parse and validate parameters\n    const result = querySchema.safeParse(rawParams);\n    \n    if (!result.success) {\n      return NextResponse.json(\n        { error: 'Invalid query parameters', details: result.error.format() }, \n        { status: 400 }\n      );\n    }\n    \n    const { builderId } = result.data;\n    \n    // Fetch availability rules",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/availability-rules/route.ts",
        "start": 60,
        "end": 78,
        "startLoc": {
          "line": 60,
          "column": 1,
          "position": 507
        },
        "endLoc": {
          "line": 78,
          "column": 28,
          "position": 675
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/time-slots/route.ts",
        "start": 33,
        "end": 73,
        "startLoc": {
          "line": 33,
          "column": 1,
          "position": 253
        },
        "endLoc": {
          "line": 73,
          "column": 23,
          "position": 640
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= withAuth(async (request: NextRequest, user: AuthUser, { params }: { params: { id: string } }) => {\n  try {\n    // Get rule ID from URL\n    const id = params?.id;\n    \n    if (!id) {\n      return NextResponse.json(\n        { error: 'Availability rule ID is required' }, \n        { status: 400 }\n      );\n    }\n    \n    // Get the rule to check authorization",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/availability-rules/route.ts",
        "start": 178,
        "end": 190,
        "startLoc": {
          "line": 178,
          "column": 2,
          "position": 1436
        },
        "endLoc": {
          "line": 190,
          "column": 39,
          "position": 1556
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/availability-rules/route.ts",
        "start": 129,
        "end": 141,
        "startLoc": {
          "line": 129,
          "column": 2,
          "position": 1040
        },
        "endLoc": {
          "line": 141,
          "column": 22,
          "position": 1160
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "} from '@/lib/scheduling/real-data/scheduling-service';\nimport { withAuth } from '@/lib/auth/clerk/api-auth';\nimport { AuthUser } from '@/lib/auth/clerk/helpers';\nimport { UserRole } from '@/lib/auth/types';\nimport * as Sentry from '@sentry/nextjs';\n\n// Validation schema for query parameters\nconst querySchema = z.object({\n  builderId: z.string().min(1, 'Builder ID is required'),\n  startDate",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/availability-exceptions/route.ts",
        "start": 9,
        "end": 18,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 53
        },
        "endLoc": {
          "line": 18,
          "column": 10,
          "position": 147
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/builder-settings/route.ts",
        "start": 6,
        "end": 15,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 41
        },
        "endLoc": {
          "line": 15,
          "column": 2,
          "position": 134
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "]\n});\n\n/**\n * Helper function to handle service errors with appropriate responses\n */\nfunction handleServiceError(error: any, defaultMessage: string): NextResponse {\n  console.error(defaultMessage, error);\n  Sentry.captureException(error);\n  \n  // Extract readable error message if available\n  const errorMessage = error.message || defaultMessage;\n  \n  return NextResponse.json(\n    { error: errorMessage }, \n    { status: 500 }\n  );\n}\n\n/**\n * Helper to check if user has permission to modify a builder's availability\n */\nfunction hasPermission(user: AuthUser, builderId: string): boolean {\n  const isAdmin = user.roles.includes(UserRole.ADMIN);\n  const isBuilder = user.roles.includes(UserRole.BUILDER);\n  const isOwnProfile = user.id === builderId;\n  return isAdmin || (isBuilder && isOwnProfile);\n}\n\n/**\n * GET handler for fetching availability exceptions for a builder\n */",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/availability-exceptions/route.ts",
        "start": 40,
        "end": 71,
        "startLoc": {
          "line": 40,
          "column": 8,
          "position": 438
        },
        "endLoc": {
          "line": 71,
          "column": 4,
          "position": 645
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/availability-rules/route.ts",
        "start": 28,
        "end": 54,
        "startLoc": {
          "line": 28,
          "column": 12,
          "position": 298
        },
        "endLoc": {
          "line": 54,
          "column": 4,
          "position": 457
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "export async function GET(request: NextRequest) {\n  try {\n    // Get query parameters\n    const { searchParams } = new URL(request.url);\n    const rawParams = Object.fromEntries(searchParams.entries());\n    \n    // Parse and validate parameters\n    const result = querySchema.safeParse(rawParams);\n    \n    if (!result.success) {\n      return NextResponse.json(\n        { error: 'Invalid query parameters', details: result.error.format() }, \n        { status: 400 }\n      );\n    }\n    \n    const { builderId, startDate, endDate }",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/availability-exceptions/route.ts",
        "start": 72,
        "end": 88,
        "startLoc": {
          "line": 72,
          "column": 1,
          "position": 647
        },
        "endLoc": {
          "line": 88,
          "column": 2,
          "position": 809
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/time-slots/route.ts",
        "start": 33,
        "end": 49,
        "startLoc": {
          "line": 33,
          "column": 1,
          "position": 253
        },
        "endLoc": {
          "line": 49,
          "column": 2,
          "position": 414
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= withAuth(async (request: NextRequest, user: AuthUser, { params }: { params: { id: string } }) => {\n  try {\n    // Get exception ID from URL\n    const id = params?.id;\n    \n    if (!id) {\n      return NextResponse.json(\n        { error: 'Availability exception ID is required' }, \n        { status: 400 }\n      );\n    }\n    \n    // Parse request body",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/availability-exceptions/route.ts",
        "start": 181,
        "end": 193,
        "startLoc": {
          "line": 181,
          "column": 2,
          "position": 1499
        },
        "endLoc": {
          "line": 193,
          "column": 22,
          "position": 1619
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/availability-exceptions/route.ts",
        "start": 141,
        "end": 153,
        "startLoc": {
          "line": 141,
          "column": 2,
          "position": 1192
        },
        "endLoc": {
          "line": 153,
          "column": 21,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "= withAuth(async (request: NextRequest, user: AuthUser, { params }: { params: { id: string } }) => {\n  try {\n    // Get exception ID from URL\n    const id = params?.id;\n    \n    if (!id) {\n      return NextResponse.json(\n        { error: 'Availability exception ID is required' }, \n        { status: 400 }\n      );\n    }\n    \n    // Get the exception for authorization check",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/availability-exceptions/route.ts",
        "start": 248,
        "end": 260,
        "startLoc": {
          "line": 248,
          "column": 2,
          "position": 2033
        },
        "endLoc": {
          "line": 260,
          "column": 45,
          "position": 2153
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/availability-exceptions/route.ts",
        "start": 141,
        "end": 153,
        "startLoc": {
          "line": 141,
          "column": 2,
          "position": 1192
        },
        "endLoc": {
          "line": 153,
          "column": 21,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "const exception = await getAvailabilityExceptionById(id);\n    \n    if (!exception) {\n      return NextResponse.json(\n        { error: 'Availability exception not found' }, \n        { status: 404 }\n      );\n    }\n    \n    // Authorization check\n    if (!hasPermission(user, exception.builderId)) {\n      return NextResponse.json(\n        { error: 'Not authorized to delete this availability exception'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/scheduling/availability-exceptions/route.ts",
        "start": 261,
        "end": 273,
        "startLoc": {
          "line": 261,
          "column": 5,
          "position": 2156
        },
        "endLoc": {
          "line": 273,
          "column": 55,
          "position": 2256
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/availability-exceptions/route.ts",
        "start": 154,
        "end": 166,
        "startLoc": {
          "line": 154,
          "column": 5,
          "position": 1315
        },
        "endLoc": {
          "line": 166,
          "column": 55,
          "position": 1415
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "= withBuilder(async (req: NextRequest, userId: string, roles: UserRole[]) => {\n  const startTime = performance.now();\n  const path = req.nextUrl.pathname;\n  const method = req.method;\n\n  try {\n    logger.debug('Updating builder profile'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/profiles/builder/route.ts",
        "start": 137,
        "end": 143,
        "startLoc": {
          "line": 137,
          "column": 2,
          "position": 1089
        },
        "endLoc": {
          "line": 143,
          "column": 27,
          "position": 1171
        }
      },
      "secondFile": {
        "name": "app/api/profiles/builder/route.ts",
        "start": 38,
        "end": 44,
        "startLoc": {
          "line": 38,
          "column": 2,
          "position": 397
        },
        "endLoc": {
          "line": 44,
          "column": 27,
          "position": 479
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(async (req: NextRequest, userId: string, roles: UserRole[]) => {\n  const startTime = performance.now();\n  const path = req.nextUrl.pathname;\n  const method = req.method;\n\n  try {\n    logger.info('Admin session types request received'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/admin/session-types/route.ts",
        "start": 27,
        "end": 33,
        "startLoc": {
          "line": 27,
          "column": 10,
          "position": 320
        },
        "endLoc": {
          "line": 33,
          "column": 39,
          "position": 399
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/bookings/route.ts",
        "start": 31,
        "end": 37,
        "startLoc": {
          "line": 31,
          "column": 11,
          "position": 343
        },
        "endLoc": {
          "line": 37,
          "column": 36,
          "position": 422
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: errorMessage,\n      path,\n      method,\n      userId,\n      duration: `${(performance.now() - startTime).toFixed(2)}ms`\n    });\n    \n    Sentry.captureException(error);\n    \n    return createAuthErrorResponse(\n      AuthErrorType.SERVER,\n      'Failed to fetch session types'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/admin/session-types/route.ts",
        "start": 84,
        "end": 96,
        "startLoc": {
          "line": 84,
          "column": 31,
          "position": 766
        },
        "endLoc": {
          "line": 96,
          "column": 32,
          "position": 844
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/bookings/route.ts",
        "start": 165,
        "end": 177,
        "startLoc": {
          "line": 165,
          "column": 25,
          "position": 1234
        },
        "endLoc": {
          "line": 177,
          "column": 25,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "= withAdmin(async (req: NextRequest, userId: string, roles: UserRole[]) => {\n  const startTime = performance.now();\n  const path = req.nextUrl.pathname;\n  const method = req.method;\n\n  try {\n    logger.info('Admin session type creation request received'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/admin/session-types/route.ts",
        "start": 107,
        "end": 113,
        "startLoc": {
          "line": 107,
          "column": 2,
          "position": 884
        },
        "endLoc": {
          "line": 113,
          "column": 47,
          "position": 966
        }
      },
      "secondFile": {
        "name": "app/api/admin/session-types/route.ts",
        "start": 27,
        "end": 37,
        "startLoc": {
          "line": 27,
          "column": 2,
          "position": 317
        },
        "endLoc": {
          "line": 37,
          "column": 36,
          "position": 422
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: errorMessage,\n      path,\n      method,\n      userId,\n      duration: `${(performance.now() - startTime).toFixed(2)}ms`\n    });\n    \n    Sentry.captureException(error);\n    \n    return createAuthErrorResponse(\n      AuthErrorType.SERVER,\n      'Failed to create session type'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/admin/session-types/route.ts",
        "start": 195,
        "end": 207,
        "startLoc": {
          "line": 195,
          "column": 30,
          "position": 1509
        },
        "endLoc": {
          "line": 207,
          "column": 32,
          "position": 1587
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/bookings/route.ts",
        "start": 165,
        "end": 177,
        "startLoc": {
          "line": 165,
          "column": 25,
          "position": 1234
        },
        "endLoc": {
          "line": 177,
          "column": 25,
          "position": 1312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "// Updated to use Express SDK with admin role check\nexport const GET = withAdmin(async (req: NextRequest, userId: string, roles: UserRole[]) => {\n  const startTime = performance.now();\n  const path = req.nextUrl.pathname;\n  const method = req.method;\n\n  try {\n    logger.info('Admin builders list request received'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/admin/builders/route.ts",
        "start": 12,
        "end": 19,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 117
        },
        "endLoc": {
          "line": 19,
          "column": 39,
          "position": 207
        }
      },
      "secondFile": {
        "name": "app/api/admin/session-types/route.ts",
        "start": 26,
        "end": 37,
        "startLoc": {
          "line": 26,
          "column": 1,
          "position": 309
        },
        "endLoc": {
          "line": 37,
          "column": 36,
          "position": 422
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", {\n      error: errorMessage,\n      path,\n      method,\n      userId,\n      duration: `${(performance.now() - startTime).toFixed(2)}ms`\n    });\n    \n    Sentry.captureException(error);\n    \n    return createAuthErrorResponse(\n      AuthErrorType.SERVER,\n      'Failed to fetch builders'",
      "tokens": 0,
      "firstFile": {
        "name": "app/api/admin/builders/route.ts",
        "start": 84,
        "end": 96,
        "startLoc": {
          "line": 84,
          "column": 26,
          "position": 669
        },
        "endLoc": {
          "line": 96,
          "column": 27,
          "position": 747
        }
      },
      "secondFile": {
        "name": "app/api/scheduling/bookings/route.ts",
        "start": 165,
        "end": 177,
        "startLoc": {
          "line": 165,
          "column": 25,
          "position": 1234
        },
        "endLoc": {
          "line": 177,
          "column": 25,
          "position": 1312
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "import ProfileEditPage from \"@/components/pages/profile-edit-page\";\nimport { ProfileProvider } from \"@/lib/contexts/profile-context\";\nimport { Toaster } from \"sonner\";\n\nexport default function ProfileEditRoute() {\n  return (\n    <ProfileProvider>\n      <Toaster position=\"top-right\" />\n      <ProfileEditPage />\n    </ProfileProvider>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "app/(platform)/profile/edit/page.tsx",
        "start": 3,
        "end": 14,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 14,
          "column": 2,
          "position": 88
        }
      },
      "secondFile": {
        "name": "app/(platform)/profile/profile-settings/edit/page.tsx",
        "start": 3,
        "end": 14,
        "startLoc": {
          "line": 3,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 14,
          "column": 2,
          "position": 88
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "builder.\n                    </DialogDescription>\n                  </DialogHeader>\n                  <SessionTypeForm \n                    onSubmit={(data) => {\n                      if (selectedBuilder) {\n                        handleSessionTypeSubmit({\n                          ...data,\n                          builderId: selectedBuilder\n                        }, false);\n                      }\n                    }}\n                  />\n                </DialogContent>\n              </Dialog>\n            </div>\n          )",
      "tokens": 0,
      "firstFile": {
        "name": "app/(platform)/admin/session-types/page.tsx",
        "start": 277,
        "end": 293,
        "startLoc": {
          "line": 277,
          "column": 2,
          "position": 2254
        },
        "endLoc": {
          "line": 293,
          "column": 2,
          "position": 2344
        }
      },
      "secondFile": {
        "name": "app/(platform)/admin/session-types/page.tsx",
        "start": 240,
        "end": 256,
        "startLoc": {
          "line": 240,
          "column": 2,
          "position": 1949
        },
        "endLoc": {
          "line": 256,
          "column": 3,
          "position": 2039
        }
      }
    },
    {
      "format": "tsx",
      "lines": 41,
      "fragment": "() {\n  const { theme } = useTheme();\n  const searchParams = useSearchParams();\n  const [redirectUrl, setRedirectUrl] = useState<string | undefined>();\n  \n  useEffect(() => {\n    // Check for various redirect parameters that might be set\n    const redirect = searchParams?.get('redirect_url') || \n                    searchParams?.get('redirectUrl') ||\n                    searchParams?.get('returnUrl') ||\n                    searchParams?.get('return_url');\n    \n    setRedirectUrl(redirect || undefined);\n  }, [searchParams]);\n\n  // Clerk appearance customization\n  const appearance = {\n    baseTheme: theme === \"dark\" ? dark : undefined,\n    elements: {\n      formButtonPrimary:\n        \"bg-primary hover:bg-primary/90 text-primary-foreground\",\n      card: \"bg-background border border-border shadow-sm\",\n      formButtonReset: \"text-muted-foreground hover:text-foreground\",\n      footerActionLink: \"text-primary hover:text-primary/90\",\n      headerTitle: \"text-foreground\",\n      headerSubtitle: \"text-muted-foreground\",\n      socialButtonsBlockButton:\n        \"border border-border hover:bg-muted text-foreground\",\n      formFieldLabel: \"text-foreground\",\n      formFieldInput:\n        \"bg-background border border-input text-foreground rounded-md\",\n      identityPreview: \"bg-muted-foreground/20\",\n      dividerLine: \"bg-border\",\n      dividerText: \"text-muted-foreground\",\n    },\n  };\n\n  // Pass redirectUrl if provided to ensure proper post-auth redirect\n  return (\n    <div className=\"flex justify-center items-center min-h-screen\">\n      <SignIn",
      "tokens": 0,
      "firstFile": {
        "name": "app/(auth)/sign-in/[[...sign-in]]/page.tsx",
        "start": 15,
        "end": 55,
        "startLoc": {
          "line": 15,
          "column": 11,
          "position": 82
        },
        "endLoc": {
          "line": 55,
          "column": 7,
          "position": 382
        }
      },
      "secondFile": {
        "name": "app/(auth)/sign-up/[[...sign-up]]/page.tsx",
        "start": 15,
        "end": 55,
        "startLoc": {
          "line": 15,
          "column": 11,
          "position": 82
        },
        "endLoc": {
          "line": 55,
          "column": 7,
          "position": 382
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ": {\n    info: vi.fn(),\n    debug: vi.fn(),\n    warn: vi.fn(),\n    error: vi.fn(),\n    child: vi.fn().mockReturnValue({\n      info: vi.fn(),\n      debug: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn()\n    })\n  },\n  createDomainLogger",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/scheduling/state-machine/state-machine.test.ts",
        "start": 93,
        "end": 105,
        "startLoc": {
          "line": 93,
          "column": 15,
          "position": 697
        },
        "endLoc": {
          "line": 105,
          "column": 19,
          "position": 811
        }
      },
      "secondFile": {
        "name": "__tests__/unit/scheduling/state-machine/state-machine.test.ts",
        "start": 80,
        "end": 92,
        "startLoc": {
          "line": 80,
          "column": 7,
          "position": 579
        },
        "endLoc": {
          "line": 92,
          "column": 30,
          "position": 693
        }
      }
    },
    {
      "format": "typescript",
      "lines": 99,
      "fragment": ";\n\n// Mock dependencies\n// Mock Datadog config\nvi.mock('@/lib/datadog/config', () => ({\n  getDatadogConfig: vi.fn().mockReturnValue({\n    enabled: false,\n    service: 'test-service',\n    env: 'test',\n    version: '1.0.0',\n    site: 'us1.datadoghq.com',\n    logSampleRate: 1.0\n  })\n}));\n\n// Mock Datadog\nvi.mock('dd-trace', () => ({\n  tracer: {\n    scope: () => ({\n      active: () => ({\n        context: () => ({\n          toTraceId: () => 'test-trace-id',\n          toSpanId: () => 'test-span-id'\n        })\n      })\n    })\n  }\n}));\n\n// Mock Sentry\nvi.mock('@sentry/nextjs', () => ({\n  captureMessage: vi.fn(),\n  captureException: vi.fn(),\n  withScope: vi.fn((callback) => callback({\n    setTag: vi.fn(),\n    setExtra: vi.fn(),\n    setLevel: vi.fn()\n  }))\n}));\n\n// Mock db\nvi.mock('@/lib/db', () => ({\n  db: {\n    booking: {\n      findUnique: vi.fn(),\n      create: vi.fn(),\n      update: vi.fn(),\n      delete: vi.fn(),\n    },\n    $transaction: vi.fn().mockImplementation(async (callback) => {\n      return callback({\n        booking: {\n          update: vi.fn(),\n          create: vi.fn(),\n        },\n        stateTransitionLog: {\n          create: vi.fn(),\n        }\n      });\n    }),\n  },\n  prisma: vi.fn(),\n}));\n\nvi.mock('@/lib/logger', () => ({\n  logger: {\n    info: vi.fn(),\n    debug: vi.fn(),\n    warn: vi.fn(),\n    error: vi.fn(),\n    child: vi.fn().mockReturnValue({\n      info: vi.fn(),\n      debug: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn()\n    })\n  },\n  // For backward compatibility\n  enhancedLogger: {\n    info: vi.fn(),\n    debug: vi.fn(),\n    warn: vi.fn(),\n    error: vi.fn(),\n    child: vi.fn().mockReturnValue({\n      info: vi.fn(),\n      debug: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn()\n    })\n  },\n  createDomainLogger: vi.fn().mockReturnValue({\n    info: vi.fn(),\n    debug: vi.fn(),\n    warn: vi.fn(),\n    error: vi.fn()\n  })\n}));\n\ndescribe('State Machine Security Features'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/scheduling/state-machine/security.test.ts",
        "start": 16,
        "end": 114,
        "startLoc": {
          "line": 16,
          "column": 2,
          "position": 109
        },
        "endLoc": {
          "line": 114,
          "column": 34,
          "position": 905
        }
      },
      "secondFile": {
        "name": "__tests__/unit/scheduling/state-machine/state-machine.test.ts",
        "start": 15,
        "end": 113,
        "startLoc": {
          "line": 15,
          "column": 39,
          "position": 83
        },
        "endLoc": {
          "line": 113,
          "column": 24,
          "position": 879
        }
      }
    },
    {
      "format": "typescript",
      "lines": 100,
      "fragment": ";\n});\n\n// Mock dependencies\n// Mock Datadog config\nvi.mock('@/lib/datadog/config', () => ({\n  getDatadogConfig: vi.fn().mockReturnValue({\n    enabled: false,\n    service: 'test-service',\n    env: 'test',\n    version: '1.0.0',\n    site: 'us1.datadoghq.com',\n    logSampleRate: 1.0\n  })\n}));\n\n// Mock Datadog\nvi.mock('dd-trace', () => ({\n  tracer: {\n    scope: () => ({\n      active: () => ({\n        context: () => ({\n          toTraceId: () => 'test-trace-id',\n          toSpanId: () => 'test-span-id'\n        })\n      })\n    })\n  }\n}));\n\n// Mock Sentry\nvi.mock('@sentry/nextjs', () => ({\n  captureMessage: vi.fn(),\n  captureException: vi.fn(),\n  withScope: vi.fn((callback) => callback({\n    setTag: vi.fn(),\n    setExtra: vi.fn(),\n    setLevel: vi.fn()\n  }))\n}));\n\n// Mock db\nvi.mock('@/lib/db', () => ({\n  db: {\n    booking: {\n      findUnique: vi.fn(),\n      create: vi.fn(),\n      update: vi.fn(),\n      delete: vi.fn(),\n    },\n    $transaction: vi.fn().mockImplementation(async (callback) => {\n      return callback({\n        booking: {\n          update: vi.fn(),\n          create: vi.fn(),\n        },\n        stateTransitionLog: {\n          create: vi.fn(),\n        }\n      });\n    }),\n  },\n  prisma: vi.fn(),\n}));\n\nvi.mock('@/lib/logger', () => ({\n  logger: {\n    info: vi.fn(),\n    debug: vi.fn(),\n    warn: vi.fn(),\n    error: vi.fn(),\n    child: vi.fn().mockReturnValue({\n      info: vi.fn(),\n      debug: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn()\n    })\n  },\n  // For backward compatibility\n  enhancedLogger: {\n    info: vi.fn(),\n    debug: vi.fn(),\n    warn: vi.fn(),\n    error: vi.fn(),\n    child: vi.fn().mockReturnValue({\n      info: vi.fn(),\n      debug: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn()\n    })\n  },\n  createDomainLogger: vi.fn().mockReturnValue({\n    info: vi.fn(),\n    debug: vi.fn(),\n    warn: vi.fn(),\n    error: vi.fn()\n  })\n}));\n\n// Mock state machine dependencies",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/scheduling/state-machine/error-handling.test.ts",
        "start": 111,
        "end": 210,
        "startLoc": {
          "line": 111,
          "column": 2,
          "position": 1095
        },
        "endLoc": {
          "line": 210,
          "column": 35,
          "position": 1893
        }
      },
      "secondFile": {
        "name": "__tests__/unit/scheduling/state-machine/security.test.ts",
        "start": 15,
        "end": 113,
        "startLoc": {
          "line": 15,
          "column": 7,
          "position": 105
        },
        "endLoc": {
          "line": 113,
          "column": 9,
          "position": 877
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ");\n      \n      expect(Sentry.configureScope).toHaveBeenCalled();\n      \n      // Get the scope from the callback\n      const scopeCallback = Sentry.configureScope.mock.calls[0][0];\n      const mockScope = { \n        setUser: vi.fn(),\n        setContext: vi.fn(),\n      };\n      scopeCallback(mockScope);\n      \n      // Check request context was set with direct request values",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/sentry/user-context.test.ts",
        "start": 211,
        "end": 223,
        "startLoc": {
          "line": 211,
          "column": 12,
          "position": 1595
        },
        "endLoc": {
          "line": 223,
          "column": 60,
          "position": 1686
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/sentry/user-context.test.ts",
        "start": 160,
        "end": 171,
        "startLoc": {
          "line": 160,
          "column": 2,
          "position": 1257
        },
        "endLoc": {
          "line": 171,
          "column": 44,
          "position": 1346
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "const mockScope = {\n        setTag: vi.fn(),\n        setContext: vi.fn(),\n        setLevel: vi.fn(),\n      };\n      \n      // Call the callback with our mock scope\n      scopeCallback(mockScope);\n      \n      // Verify the scope was configured correctly\n      expect(mockScope.setTag).toHaveBeenCalledWith('error.severity', ErrorSeverity.LOW",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/sentry/error-classification.test.ts",
        "start": 136,
        "end": 146,
        "startLoc": {
          "line": 136,
          "column": 7,
          "position": 1156
        },
        "endLoc": {
          "line": 146,
          "column": 4,
          "position": 1233
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/sentry/error-classification.test.ts",
        "start": 91,
        "end": 101,
        "startLoc": {
          "line": 91,
          "column": 7,
          "position": 715
        },
        "endLoc": {
          "line": 101,
          "column": 9,
          "position": 792
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ");\n      \n      // Extract the callback function\n      const scopeCallback = Sentry.withScope.mock.calls[0][0];\n      const mockScope = {\n        setTag: vi.fn(),\n        setContext: vi.fn(),\n        setLevel: vi.fn(),\n      };\n      \n      // Call the callback with our mock scope\n      scopeCallback(mockScope);\n      \n      // Verify that domain metadata was passed correctly",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/sentry/error-classification.test.ts",
        "start": 173,
        "end": 186,
        "startLoc": {
          "line": 173,
          "column": 6,
          "position": 1501
        },
        "endLoc": {
          "line": 186,
          "column": 52,
          "position": 1592
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/sentry/error-classification.test.ts",
        "start": 132,
        "end": 145,
        "startLoc": {
          "line": 132,
          "column": 9,
          "position": 1125
        },
        "endLoc": {
          "line": 145,
          "column": 45,
          "position": 1216
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ");\n      \n      // Extract the callback function\n      const scopeCallback = Sentry.withScope.mock.calls[0][0];\n      const mockScope = {\n        setTag: vi.fn(),\n        setContext: vi.fn(),\n        setLevel: vi.fn(),\n      };\n      \n      // Call the callback with our mock scope\n      scopeCallback(mockScope);\n      \n      // Verify that domain metadata was passed correctly\n      expect(mockScope.setTag).toHaveBeenCalledWith('error.component', 'auth'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/sentry/error-classification.test.ts",
        "start": 198,
        "end": 212,
        "startLoc": {
          "line": 198,
          "column": 34,
          "position": 1713
        },
        "endLoc": {
          "line": 212,
          "column": 7,
          "position": 1819
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/sentry/error-classification.test.ts",
        "start": 132,
        "end": 187,
        "startLoc": {
          "line": 132,
          "column": 9,
          "position": 1125
        },
        "endLoc": {
          "line": 187,
          "column": 10,
          "position": 1607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ": vi.fn(),\n}));\n\n// Mock lib/sentry\nvi.mock('../../../../lib/sentry', () => ({\n  getInitializationConfig: vi.fn().mockReturnValue({\n    dsn: 'https://mock-dsn@ingest.de.sentry.io/123456',\n    region: 'eu',\n  }),\n  configureSentryDataFiltering: vi.fn((config) => ({ ...config, filtered: true })),\n  configureSentryPerformance: vi.fn((config) => ({ ...config, performanceConfig: true })),\n}));\n\ndescribe('Sentry Client Instrumentation'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/sentry/client-instrumentation.test.ts",
        "start": 11,
        "end": 24,
        "startLoc": {
          "line": 11,
          "column": 27,
          "position": 98
        },
        "endLoc": {
          "line": 24,
          "column": 32,
          "position": 233
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/sentry/instrumentation.test.ts",
        "start": 14,
        "end": 27,
        "startLoc": {
          "line": 14,
          "column": 20,
          "position": 104
        },
        "endLoc": {
          "line": 27,
          "column": 25,
          "position": 239
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "register();\n    \n    // Verify Sentry init was called with correct config\n    expect(Sentry.init).toHaveBeenCalledTimes(1);\n    const initCall = Sentry.init.mock.calls[0][0];\n    expect(initCall.region).toBe('eu');\n    expect(initCall.filtered).toBe(true);\n    expect(initCall.performanceConfig).toBe(true);\n  });\n  \n  it('should integrate with Datadog RUM when available'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/lib/sentry/client-instrumentation.test.ts",
        "start": 59,
        "end": 69,
        "startLoc": {
          "line": 59,
          "column": 5,
          "position": 496
        },
        "endLoc": {
          "line": 69,
          "column": 51,
          "position": 594
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/sentry/instrumentation.test.ts",
        "start": 56,
        "end": 66,
        "startLoc": {
          "line": 56,
          "column": 2,
          "position": 461
        },
        "endLoc": {
          "line": 66,
          "column": 53,
          "position": 559
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "expect(response?.status).toBe(403);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHORIZATION_ERROR');\n    });\n    \n    it",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 102,
        "end": 108,
        "startLoc": {
          "line": 102,
          "column": 7,
          "position": 780
        },
        "endLoc": {
          "line": 108,
          "column": 3,
          "position": 849
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/auth/express-api-auth.test.ts",
        "start": 127,
        "end": 132,
        "startLoc": {
          "line": 127,
          "column": 7,
          "position": 1042
        },
        "endLoc": {
          "line": 132,
          "column": 2,
          "position": 1109
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(data.data).toBeDefined();\n      expect(Array.isArray(data.data.bookings)).toBe(true);\n    });\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 145,
        "end": 153,
        "startLoc": {
          "line": 145,
          "column": 10,
          "position": 1178
        },
        "endLoc": {
          "line": 153,
          "column": 2,
          "position": 1269
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 122,
        "end": 131,
        "startLoc": {
          "line": 122,
          "column": 9,
          "position": 967
        },
        "endLoc": {
          "line": 131,
          "column": 3,
          "position": 1060
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n      const response = await tester.withoutAuth();\n      \n      expect(response?.status).toBe(401);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHENTICATION_ERROR');\n    });\n    \n    it('should return 403 for non-client users'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 174,
        "end": 183,
        "startLoc": {
          "line": 174,
          "column": 7,
          "position": 1412
        },
        "endLoc": {
          "line": 183,
          "column": 41,
          "position": 1505
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 68,
        "end": 77,
        "startLoc": {
          "line": 68,
          "column": 7,
          "position": 485
        },
        "endLoc": {
          "line": 77,
          "column": 66,
          "position": 578
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n      \n      expect(response?.status).toBe(403);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHORIZATION_ERROR');\n    });\n    \n    it('should return 400 for invalid booking data'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 190,
        "end": 198,
        "startLoc": {
          "line": 190,
          "column": 8,
          "position": 1570
        },
        "endLoc": {
          "line": 198,
          "column": 45,
          "position": 1647
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 100,
        "end": 108,
        "startLoc": {
          "line": 100,
          "column": 2,
          "position": 774
        },
        "endLoc": {
          "line": 108,
          "column": 56,
          "position": 851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n      \n      expect(response?.status).toBe(400);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('VALIDATION_ERROR');\n    });\n    \n    it('should return 403 if client tries to book for another client'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 211,
        "end": 219,
        "startLoc": {
          "line": 211,
          "column": 7,
          "position": 1743
        },
        "endLoc": {
          "line": 219,
          "column": 63,
          "position": 1820
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 82,
        "end": 90,
        "startLoc": {
          "line": 82,
          "column": 9,
          "position": 626
        },
        "endLoc": {
          "line": 90,
          "column": 62,
          "position": 703
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n      \n      expect(response?.status).toBe(403);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHORIZATION_ERROR');\n    });\n    \n    it('should return 200 and create booking for client user'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 242,
        "end": 250,
        "startLoc": {
          "line": 242,
          "column": 7,
          "position": 1988
        },
        "endLoc": {
          "line": 250,
          "column": 55,
          "position": 2065
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 100,
        "end": 108,
        "startLoc": {
          "line": 100,
          "column": 2,
          "position": 774
        },
        "endLoc": {
          "line": 108,
          "column": 56,
          "position": 851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\nimport { UserRole } from '@/lib/auth/types';\n\n// Mock scheduling service\nvi.mock('@/lib/scheduling/real-data/scheduling-service', () => {\n  const mockBooking = {\n    id: 'booking_123',\n    sessionTypeId: 'st_123',\n    builderId: 'user_builder123',\n    clientId: 'user_client123',\n    startTime: '2023-12-01T10:00:00Z',\n    endTime: '2023-12-01T11:00:00Z',\n    status: 'pending',\n    paymentStatus: 'unpaid',\n    clientTimezone: 'America/New_York',\n    builderTimezone: 'America/Los_Angeles',\n    createdAt: new Date(),\n    updatedAt: new Date()\n  };\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 10,
        "end": 30,
        "startLoc": {
          "line": 10,
          "column": 50,
          "position": 61
        },
        "endLoc": {
          "line": 30,
          "column": 7,
          "position": 199
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 10,
        "end": 30,
        "startLoc": {
          "line": 10,
          "column": 38,
          "position": 61
        },
        "endLoc": {
          "line": 30,
          "column": 6,
          "position": 199
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\n      );\n      const response = await tester.withoutAuth();\n      \n      expect(response?.status).toBe(401);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHENTICATION_ERROR');\n    });\n    \n    it('should return 404 if booking not found'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 72,
        "end": 82,
        "startLoc": {
          "line": 72,
          "column": 2,
          "position": 515
        },
        "endLoc": {
          "line": 82,
          "column": 41,
          "position": 611
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 173,
        "end": 77,
        "startLoc": {
          "line": 173,
          "column": 2,
          "position": 1409
        },
        "endLoc": {
          "line": 77,
          "column": 66,
          "position": 578
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "const response = await tester.withAuth();\n      \n      expect(response?.status).toBe(403);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHORIZATION_ERROR');\n    });\n    \n    it('should return 200 for booking client'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 117,
        "end": 125,
        "startLoc": {
          "line": 117,
          "column": 7,
          "position": 899
        },
        "endLoc": {
          "line": 125,
          "column": 39,
          "position": 988
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 100,
        "end": 108,
        "startLoc": {
          "line": 100,
          "column": 7,
          "position": 762
        },
        "endLoc": {
          "line": 108,
          "column": 56,
          "position": 851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ");\n      const response = await tester.withAuth('client');\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(data.data.",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 140,
        "end": 146,
        "startLoc": {
          "line": 140,
          "column": 7,
          "position": 1100
        },
        "endLoc": {
          "line": 146,
          "column": 2,
          "position": 1174
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 121,
        "end": 127,
        "startLoc": {
          "line": 121,
          "column": 7,
          "position": 950
        },
        "endLoc": {
          "line": 127,
          "column": 2,
          "position": 1024
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ");\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(data.data.booking).toBeDefined();\n      expect(data.data.booking.id).toBe(testBookingId",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 141,
        "end": 147,
        "startLoc": {
          "line": 141,
          "column": 9,
          "position": 1117
        },
        "endLoc": {
          "line": 147,
          "column": 14,
          "position": 1197
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 266,
        "end": 272,
        "startLoc": {
          "line": 266,
          "column": 7,
          "position": 2196
        },
        "endLoc": {
          "line": 272,
          "column": 14,
          "position": 2276
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ");\n      const response = await tester.withAuth('builder');\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(data.data.",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 165,
        "end": 171,
        "startLoc": {
          "line": 165,
          "column": 7,
          "position": 1323
        },
        "endLoc": {
          "line": 171,
          "column": 2,
          "position": 1397
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 144,
        "end": 150,
        "startLoc": {
          "line": 144,
          "column": 7,
          "position": 1161
        },
        "endLoc": {
          "line": 150,
          "column": 2,
          "position": 1235
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(data.data.booking).toBeDefined();\n      expect(data.data.booking.id).toBe(testBookingId);\n    });\n    \n    it('should return 200 for admin user'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 166,
        "end": 175,
        "startLoc": {
          "line": 166,
          "column": 10,
          "position": 1340
        },
        "endLoc": {
          "line": 175,
          "column": 35,
          "position": 1434
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 266,
        "end": 150,
        "startLoc": {
          "line": 266,
          "column": 7,
          "position": 2196
        },
        "endLoc": {
          "line": 150,
          "column": 40,
          "position": 1211
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(data.data.booking).toBeDefined();\n      expect(data.data.booking.id).toBe(testBookingId);\n    });\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 182,
        "end": 190,
        "startLoc": {
          "line": 182,
          "column": 6,
          "position": 1501
        },
        "endLoc": {
          "line": 190,
          "column": 2,
          "position": 1591
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 266,
        "end": 150,
        "startLoc": {
          "line": 266,
          "column": 7,
          "position": 2196
        },
        "endLoc": {
          "line": 150,
          "column": 3,
          "position": 1209
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "}\n      );\n      const response = await tester.withoutAuth();\n      \n      expect(response?.status).toBe(401);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHENTICATION_ERROR');\n    });\n    \n    it('should return 404 if booking not found', async () => {\n      // Mock getBookingById to return null for this test\n      const { getBookingById } = require('@/lib/scheduling/real-data/scheduling-service');\n      getBookingById.mockResolvedValueOnce(null);\n      \n      const tester = testProtectedRoute(\n        PATCH",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 201,
        "end": 217,
        "startLoc": {
          "line": 201,
          "column": 2,
          "position": 1704
        },
        "endLoc": {
          "line": 217,
          "column": 6,
          "position": 1854
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 173,
        "end": 88,
        "startLoc": {
          "line": 173,
          "column": 2,
          "position": 1409
        },
        "endLoc": {
          "line": 88,
          "column": 4,
          "position": 665
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\n      );\n      const response = await tester.withAuth();\n      \n      expect(response?.status).toBe(404);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('RESOURCE_NOT_FOUND');\n    });\n    \n    it('should return 403 if non-builder tries to confirm booking'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 220,
        "end": 230,
        "startLoc": {
          "line": 220,
          "column": 2,
          "position": 1882
        },
        "endLoc": {
          "line": 230,
          "column": 60,
          "position": 1978
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 91,
        "end": 101,
        "startLoc": {
          "line": 91,
          "column": 2,
          "position": 687
        },
        "endLoc": {
          "line": 101,
          "column": 65,
          "position": 783
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async () => {\n      // Set up auth to use the client ID\n      const mockGetAuth = vi.spyOn(require('@clerk/express'), 'getAuth');\n      mockGetAuth.mockReturnValue({\n        userId: 'user_client123',\n        sessionClaims: {\n          roles: [UserRole.CLIENT]\n        }\n      });\n      \n      const tester = testProtectedRoute(\n        PATCH",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 230,
        "end": 241,
        "startLoc": {
          "line": 230,
          "column": 60,
          "position": 1979
        },
        "endLoc": {
          "line": 241,
          "column": 6,
          "position": 2065
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 125,
        "end": 136,
        "startLoc": {
          "line": 125,
          "column": 39,
          "position": 989
        },
        "endLoc": {
          "line": 136,
          "column": 4,
          "position": 1075
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\n      );\n      const response = await tester.withRole(UserRole.CLIENT);\n      \n      expect(response?.status).toBe(403);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHORIZATION_ERROR');\n    });\n    \n    it('should return 403 if non-admin/builder tries to update payment'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 244,
        "end": 254,
        "startLoc": {
          "line": 244,
          "column": 2,
          "position": 2100
        },
        "endLoc": {
          "line": 254,
          "column": 65,
          "position": 2199
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 240,
        "end": 108,
        "startLoc": {
          "line": 240,
          "column": 2,
          "position": 1966
        },
        "endLoc": {
          "line": 108,
          "column": 56,
          "position": 851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", async () => {\n      // Set up auth to use the client ID\n      const mockGetAuth = vi.spyOn(require('@clerk/express'), 'getAuth');\n      mockGetAuth.mockReturnValue({\n        userId: 'user_client123',\n        sessionClaims: {\n          roles: [UserRole.CLIENT]\n        }\n      });\n      \n      const tester = testProtectedRoute(\n        PATCH, \n        `/api/scheduling/bookings/${testBookingId}`, \n        'PATCH',\n        { params, body: paymentUpdate",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 254,
        "end": 268,
        "startLoc": {
          "line": 254,
          "column": 65,
          "position": 2200
        },
        "endLoc": {
          "line": 268,
          "column": 14,
          "position": 2312
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 125,
        "end": 244,
        "startLoc": {
          "line": 125,
          "column": 39,
          "position": 989
        },
        "endLoc": {
          "line": 244,
          "column": 2,
          "position": 2091
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\n      );\n      const response = await tester.withRole(UserRole.CLIENT);\n      \n      expect(response?.status).toBe(403);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHORIZATION_ERROR');\n    });\n    \n    it('should return 200 when builder confirms booking'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 268,
        "end": 278,
        "startLoc": {
          "line": 268,
          "column": 2,
          "position": 2314
        },
        "endLoc": {
          "line": 278,
          "column": 50,
          "position": 2413
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 240,
        "end": 108,
        "startLoc": {
          "line": 240,
          "column": 2,
          "position": 1966
        },
        "endLoc": {
          "line": 108,
          "column": 56,
          "position": 851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async () => {\n      // Set up auth to use the builder ID\n      const mockGetAuth = vi.spyOn(require('@clerk/express'), 'getAuth');\n      mockGetAuth.mockReturnValue({\n        userId: 'user_builder123',\n        sessionClaims: {\n          roles: [UserRole.BUILDER]\n        }\n      });\n      \n      const tester = testProtectedRoute(\n        PATCH",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 278,
        "end": 289,
        "startLoc": {
          "line": 278,
          "column": 50,
          "position": 2414
        },
        "endLoc": {
          "line": 289,
          "column": 6,
          "position": 2500
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 150,
        "end": 161,
        "startLoc": {
          "line": 150,
          "column": 40,
          "position": 1212
        },
        "endLoc": {
          "line": 161,
          "column": 4,
          "position": 1298
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ");\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(data.data.booking).toBeDefined();\n      expect(data.data.booking.status",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 294,
        "end": 300,
        "startLoc": {
          "line": 294,
          "column": 8,
          "position": 2550
        },
        "endLoc": {
          "line": 300,
          "column": 7,
          "position": 2625
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 266,
        "end": 272,
        "startLoc": {
          "line": 266,
          "column": 7,
          "position": 2196
        },
        "endLoc": {
          "line": 272,
          "column": 3,
          "position": 2271
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ", async () => {\n      // Set up auth to use the builder ID\n      const mockGetAuth = vi.spyOn(require('@clerk/express'), 'getAuth');\n      mockGetAuth.mockReturnValue({\n        userId: 'user_builder123',\n        sessionClaims: {\n          roles: [UserRole.BUILDER]\n        }\n      });\n      \n      const tester = testProtectedRoute(\n        PATCH, \n        `/api/scheduling/bookings/${testBookingId}`, \n        'PATCH',\n        { params, body: paymentUpdate",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 303,
        "end": 317,
        "startLoc": {
          "line": 303,
          "column": 56,
          "position": 2645
        },
        "endLoc": {
          "line": 317,
          "column": 14,
          "position": 2757
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 150,
        "end": 292,
        "startLoc": {
          "line": 150,
          "column": 40,
          "position": 1212
        },
        "endLoc": {
          "line": 292,
          "column": 13,
          "position": 2526
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "}\n      );\n      const response = await tester.withRole(UserRole.BUILDER);\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(data.data.booking).toBeDefined();\n      expect(data.data.booking.paymentStatus",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 317,
        "end": 325,
        "startLoc": {
          "line": 317,
          "column": 2,
          "position": 2759
        },
        "endLoc": {
          "line": 325,
          "column": 14,
          "position": 2856
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 292,
        "end": 272,
        "startLoc": {
          "line": 292,
          "column": 2,
          "position": 2528
        },
        "endLoc": {
          "line": 272,
          "column": 3,
          "position": 2271
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ");\n      \n      expect(response?.status).toBe(400);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('VALIDATION_ERROR');\n    });\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 341,
        "end": 348,
        "startLoc": {
          "line": 341,
          "column": 6,
          "position": 2990
        },
        "endLoc": {
          "line": 348,
          "column": 2,
          "position": 3063
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 82,
        "end": 90,
        "startLoc": {
          "line": 82,
          "column": 9,
          "position": 626
        },
        "endLoc": {
          "line": 90,
          "column": 3,
          "position": 701
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n      const response = await tester.withoutAuth();\n      \n      expect(response?.status).toBe(401);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHENTICATION_ERROR');\n    });\n    \n    it('should return 403 for non-admin users'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-types.test.ts",
        "start": 61,
        "end": 70,
        "startLoc": {
          "line": 61,
          "column": 27,
          "position": 477
        },
        "endLoc": {
          "line": 70,
          "column": 40,
          "position": 570
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 68,
        "end": 77,
        "startLoc": {
          "line": 68,
          "column": 7,
          "position": 485
        },
        "endLoc": {
          "line": 77,
          "column": 66,
          "position": 578
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n      const response = await tester.withRole(UserRole.CLIENT);\n      \n      expect(response?.status).toBe(403);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHORIZATION_ERROR');\n    });\n    \n    it('should return 200 and session types for admin users'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-types.test.ts",
        "start": 71,
        "end": 80,
        "startLoc": {
          "line": 71,
          "column": 27,
          "position": 595
        },
        "endLoc": {
          "line": 80,
          "column": 54,
          "position": 691
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 241,
        "end": 108,
        "startLoc": {
          "line": 241,
          "column": 7,
          "position": 1969
        },
        "endLoc": {
          "line": 108,
          "column": 56,
          "position": 851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ");\n      const response = await tester.withRole(UserRole.ADMIN);\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(Array",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-types.test.ts",
        "start": 81,
        "end": 87,
        "startLoc": {
          "line": 81,
          "column": 27,
          "position": 716
        },
        "endLoc": {
          "line": 87,
          "column": 6,
          "position": 789
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 181,
        "end": 187,
        "startLoc": {
          "line": 181,
          "column": 7,
          "position": 1482
        },
        "endLoc": {
          "line": 187,
          "column": 5,
          "position": 1555
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "}\n      );\n      const response = await tester.withoutAuth();\n      \n      expect(response?.status).toBe(401);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHENTICATION_ERROR');\n    });\n    \n    it('should return 403 for non-admin users', async () => {\n      const tester = testProtectedRoute(\n        POST",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-types.test.ts",
        "start": 111,
        "end": 123,
        "startLoc": {
          "line": 111,
          "column": 2,
          "position": 987
        },
        "endLoc": {
          "line": 123,
          "column": 5,
          "position": 1106
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 173,
        "end": 71,
        "startLoc": {
          "line": 173,
          "column": 2,
          "position": 1409
        },
        "endLoc": {
          "line": 71,
          "column": 4,
          "position": 591
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\n      );\n      const response = await tester.withRole(UserRole.BUILDER);\n      \n      expect(response?.status).toBe(403);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHORIZATION_ERROR');\n    });\n    \n    it('should return 201 and create session type for admin users'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-types.test.ts",
        "start": 126,
        "end": 136,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 1127
        },
        "endLoc": {
          "line": 136,
          "column": 60,
          "position": 1226
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 188,
        "end": 108,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 1548
        },
        "endLoc": {
          "line": 108,
          "column": 56,
          "position": 851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\n      );\n      const response = await tester.withRole(UserRole.ADMIN);\n      \n      expect(response?.status).toBe(400);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('VALIDATION_ERROR');\n    });\n  });\n});",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-types.test.ts",
        "start": 164,
        "end": 174,
        "startLoc": {
          "line": 164,
          "column": 2,
          "position": 1469
        },
        "endLoc": {
          "line": 174,
          "column": 2,
          "position": 1570
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 339,
        "end": 349,
        "startLoc": {
          "line": 339,
          "column": 2,
          "position": 2968
        },
        "endLoc": {
          "line": 349,
          "column": 2,
          "position": 3069
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ";\nimport { UserRole } from '@/lib/auth/types';\n\n// Mock PrismaClient\nvi.mock('@prisma/client', () => {\n  const mockSessionType = {\n    id: 'st_123',\n    builderId: 'user_builder123',\n    title: 'Test Session',\n    description: 'Test session description',\n    durationMinutes: 60,\n    price: { toNumber: () => 100 },\n    currency: 'USD',\n    isActive: true,\n    color: '#00FF00',\n    maxParticipants: 5,\n    createdAt: new Date(),\n    updatedAt: new Date()\n  };\n\n  return {\n    PrismaClient: vi.fn().mockImplementation(() => ({\n      sessionType: {\n        findUnique",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 10,
        "end": 33,
        "startLoc": {
          "line": 10,
          "column": 43,
          "position": 64
        },
        "endLoc": {
          "line": 33,
          "column": 11,
          "position": 245
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/admin/session-types.test.ts",
        "start": 10,
        "end": 33,
        "startLoc": {
          "line": 10,
          "column": 38,
          "position": 61
        },
        "endLoc": {
          "line": 33,
          "column": 9,
          "position": 242
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "}`, \n        'GET',\n        { params }\n      );\n      const response = await tester.withoutAuth();\n      \n      expect(response?.status).toBe(401);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHENTICATION_ERROR');\n    });\n    \n    it('should return 403 for non-admin users', async () => {\n      const tester = testProtectedRoute(\n        GET, \n        `/api/admin/session-types/",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 67,
        "end": 82,
        "startLoc": {
          "line": 67,
          "column": 14,
          "position": 496
        },
        "endLoc": {
          "line": 82,
          "column": 27,
          "position": 634
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 70,
        "end": 71,
        "startLoc": {
          "line": 70,
          "column": 14,
          "position": 501
        },
        "endLoc": {
          "line": 71,
          "column": 27,
          "position": 594
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\n      );\n      const response = await tester.withRole(UserRole.CLIENT);\n      \n      expect(response?.status).toBe(403);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHORIZATION_ERROR');\n    });\n    \n    it('should return 200 and session type for admin users'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 84,
        "end": 94,
        "startLoc": {
          "line": 84,
          "column": 2,
          "position": 651
        },
        "endLoc": {
          "line": 94,
          "column": 53,
          "position": 750
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 240,
        "end": 108,
        "startLoc": {
          "line": 240,
          "column": 2,
          "position": 1966
        },
        "endLoc": {
          "line": 108,
          "column": 56,
          "position": 851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "}`, \n        'GET',\n        { params }\n      );\n      const response = await tester.withRole(UserRole.ADMIN);\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(data.data)",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 97,
        "end": 106,
        "startLoc": {
          "line": 97,
          "column": 14,
          "position": 781
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 874
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 178,
        "end": 187,
        "startLoc": {
          "line": 178,
          "column": 14,
          "position": 1465
        },
        "endLoc": {
          "line": 187,
          "column": 2,
          "position": 1558
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ");\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(data.data).toBeDefined();\n      expect(data",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 101,
        "end": 107,
        "startLoc": {
          "line": 101,
          "column": 6,
          "position": 817
        },
        "endLoc": {
          "line": 107,
          "column": 5,
          "position": 884
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 122,
        "end": 128,
        "startLoc": {
          "line": 122,
          "column": 9,
          "position": 967
        },
        "endLoc": {
          "line": 128,
          "column": 6,
          "position": 1034
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "}\n      );\n      const response = await tester.withoutAuth();\n      \n      expect(response?.status).toBe(401);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHENTICATION_ERROR');\n    });\n    \n    it('should return 403 for non-admin users', async () => {\n      const tester = testProtectedRoute(\n        PUT",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 124,
        "end": 136,
        "startLoc": {
          "line": 124,
          "column": 2,
          "position": 1025
        },
        "endLoc": {
          "line": 136,
          "column": 4,
          "position": 1144
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 173,
        "end": 71,
        "startLoc": {
          "line": 173,
          "column": 2,
          "position": 1409
        },
        "endLoc": {
          "line": 71,
          "column": 4,
          "position": 591
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\n      );\n      const response = await tester.withRole(UserRole.BUILDER);\n      \n      expect(response?.status).toBe(403);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHORIZATION_ERROR');\n    });\n    \n    it('should return 200 and update session type for admin users'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 2,
          "position": 1172
        },
        "endLoc": {
          "line": 149,
          "column": 60,
          "position": 1271
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 188,
        "end": 108,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 1548
        },
        "endLoc": {
          "line": 108,
          "column": 56,
          "position": 851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "}\n      );\n      const response = await tester.withRole(UserRole.ADMIN);\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(data.data).toBeDefined();\n      expect(data.data.title",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 154,
        "end": 162,
        "startLoc": {
          "line": 154,
          "column": 2,
          "position": 1322
        },
        "endLoc": {
          "line": 162,
          "column": 6,
          "position": 1415
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 180,
        "end": 107,
        "startLoc": {
          "line": 180,
          "column": 2,
          "position": 1479
        },
        "endLoc": {
          "line": 107,
          "column": 3,
          "position": 888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "}\n      );\n      const response = await tester.withRole(UserRole.ADMIN);\n      \n      expect(response?.status).toBe(400);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('VALIDATION_ERROR');\n    });\n  });\n\n  describe",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 175,
        "end": 186,
        "startLoc": {
          "line": 175,
          "column": 2,
          "position": 1518
        },
        "endLoc": {
          "line": 186,
          "column": 9,
          "position": 1619
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 339,
        "end": 349,
        "startLoc": {
          "line": 339,
          "column": 2,
          "position": 2968
        },
        "endLoc": {
          "line": 349,
          "column": 2,
          "position": 3067
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n        { params }\n      );\n      const response = await tester.withoutAuth();\n      \n      expect(response?.status).toBe(401);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHENTICATION_ERROR');\n    });\n    \n    it('should return 403 for non-admin users', async () => {\n      const tester = testProtectedRoute(\n        DELETE",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 191,
        "end": 204,
        "startLoc": {
          "line": 191,
          "column": 9,
          "position": 1672
        },
        "endLoc": {
          "line": 204,
          "column": 7,
          "position": 1798
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 71,
        "end": 71,
        "startLoc": {
          "line": 71,
          "column": 6,
          "position": 508
        },
        "endLoc": {
          "line": 71,
          "column": 4,
          "position": 591
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\n      );\n      const response = await tester.withRole(UserRole.BUILDER);\n      \n      expect(response?.status).toBe(403);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('AUTHORIZATION_ERROR');\n    });\n    \n    it('should return 200 and delete session type for admin users'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 207,
        "end": 217,
        "startLoc": {
          "line": 207,
          "column": 2,
          "position": 1820
        },
        "endLoc": {
          "line": 217,
          "column": 60,
          "position": 1919
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/bookings.test.ts",
        "start": 188,
        "end": 108,
        "startLoc": {
          "line": 188,
          "column": 2,
          "position": 1548
        },
        "endLoc": {
          "line": 108,
          "column": 56,
          "position": 851
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ",\n        { params }\n      );\n      const response = await tester.withRole(UserRole.ADMIN);\n      \n      expect(response?.status).toBe(200);\n      const data = await response?.json();\n      expect(data.success).toBe(true);\n      expect(data.message",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 221,
        "end": 229,
        "startLoc": {
          "line": 221,
          "column": 9,
          "position": 1957
        },
        "endLoc": {
          "line": 229,
          "column": 8,
          "position": 2042
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 179,
        "end": 187,
        "startLoc": {
          "line": 179,
          "column": 6,
          "position": 1472
        },
        "endLoc": {
          "line": 187,
          "column": 5,
          "position": 1557
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "}\n      );\n      const response = await tester.withRole(UserRole.ADMIN);\n      \n      expect(response?.status).toBe(400);\n      const data = await response?.json();\n      expect(data.success).toBe(false);\n      expect(data.error.type).toBe('VALIDATION_ERROR');\n      expect",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/unit/api/admin/session-type-by-id.test.ts",
        "start": 241,
        "end": 249,
        "startLoc": {
          "line": 241,
          "column": 2,
          "position": 2141
        },
        "endLoc": {
          "line": 249,
          "column": 7,
          "position": 2231
        }
      },
      "secondFile": {
        "name": "__tests__/unit/api/scheduling/booking-by-id.test.ts",
        "start": 339,
        "end": 88,
        "startLoc": {
          "line": 339,
          "column": 2,
          "position": 2968
        },
        "endLoc": {
          "line": 88,
          "column": 2,
          "position": 694
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "{\n        success: false,\n        previousState: BookingStateEnum.ERROR,\n        currentState: BookingStateEnum.ERROR,\n        stateData: {\n          bookingId,\n          error: {\n            message: error instanceof Error ? error.message : String(error),\n            timestamp: new Date().toISOString(),\n            source: 'error-handling-system'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/scheduling/state-machine/error-handling.ts",
        "start": 298,
        "end": 307,
        "startLoc": {
          "line": 298,
          "column": 2,
          "position": 2000
        },
        "endLoc": {
          "line": 307,
          "column": 24,
          "position": 2086
        }
      },
      "secondFile": {
        "name": "lib/scheduling/state-machine/service.ts",
        "start": 118,
        "end": 127,
        "startLoc": {
          "line": 118,
          "column": 2,
          "position": 786
        },
        "endLoc": {
          "line": 127,
          "column": 24,
          "position": 872
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "// Transform the database session type to our API type\n    return {\n      id: sessionType.id,\n      builderId: sessionType.builderId,\n      title: sessionType.title,\n      description: sessionType.description,\n      durationMinutes: sessionType.durationMinutes,\n      price: sessionType.price.toNumber(),\n      currency: sessionType.currency,\n      isActive: sessionType.isActive,\n      color: sessionType.color || undefined,\n      maxParticipants: sessionType.maxParticipants || undefined,\n      calendlyEventTypeId: sessionType.calendlyEventTypeId || undefined,\n      calendlyEventTypeUri: sessionType.calendlyEventTypeUri || undefined,\n      createdAt: sessionType.createdAt.toISOString(),\n      updatedAt: sessionType.updatedAt.toISOString(),\n    };\n  } catch (error) {\n    logger.error('Error creating session type'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/scheduling/real-data/scheduling-service-ext.ts",
        "start": 113,
        "end": 131,
        "startLoc": {
          "line": 113,
          "column": 5,
          "position": 765
        },
        "endLoc": {
          "line": 131,
          "column": 30,
          "position": 946
        }
      },
      "secondFile": {
        "name": "lib/scheduling/real-data/scheduling-service-ext.ts",
        "start": 35,
        "end": 53,
        "startLoc": {
          "line": 35,
          "column": 5,
          "position": 164
        },
        "endLoc": {
          "line": 53,
          "column": 32,
          "position": 345
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "});\n\n      // Transform the database session type to our API type\n      return {\n        id: sessionType.id,\n        builderId: sessionType.builderId,\n        title: sessionType.title,\n        description: sessionType.description,\n        durationMinutes: sessionType.durationMinutes,\n        price: sessionType.price.toNumber(),\n        currency: sessionType.currency,\n        isActive: sessionType.isActive,\n        color: sessionType.color || undefined,\n        maxParticipants: sessionType.maxParticipants || undefined,\n        calendlyEventTypeId: sessionType.calendlyEventTypeId || undefined,\n        calendlyEventTypeUri: sessionType.calendlyEventTypeUri || undefined,\n        createdAt: sessionType.createdAt.toISOString(),\n        updatedAt: sessionType.updatedAt.toISOString(),\n      };\n    }\n\n    // For regular session types, update all fields",
      "tokens": 0,
      "firstFile": {
        "name": "lib/scheduling/real-data/scheduling-service-ext.ts",
        "start": 183,
        "end": 204,
        "startLoc": {
          "line": 183,
          "column": 7,
          "position": 1264
        },
        "endLoc": {
          "line": 204,
          "column": 48,
          "position": 1440
        }
      },
      "secondFile": {
        "name": "lib/scheduling/real-data/scheduling-service-ext.ts",
        "start": 111,
        "end": 52,
        "startLoc": {
          "line": 111,
          "column": 5,
          "position": 759
        },
        "endLoc": {
          "line": 52,
          "column": 6,
          "position": 332
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ", {\n      sessionTypeId: sessionType.id,\n      builderId: sessionType.builderId,\n      title: sessionType.title\n    });\n\n    // Transform the database session type to our API type\n    return {\n      id: sessionType.id,\n      builderId: sessionType.builderId,\n      title: sessionType.title,\n      description: sessionType.description,\n      durationMinutes: sessionType.durationMinutes,\n      price: sessionType.price.toNumber(),\n      currency: sessionType.currency,\n      isActive: sessionType.isActive,\n      color: sessionType.color || undefined,\n      maxParticipants: sessionType.maxParticipants || undefined,\n      calendlyEventTypeId: sessionType.calendlyEventTypeId || undefined,\n      calendlyEventTypeUri: sessionType.calendlyEventTypeUri || undefined,\n      createdAt: sessionType.createdAt.toISOString(),\n      updatedAt: sessionType.updatedAt.toISOString(),\n    };\n  } catch (error) {\n    logger.error('Error updating session type'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/scheduling/real-data/scheduling-service-ext.ts",
        "start": 210,
        "end": 234,
        "startLoc": {
          "line": 210,
          "column": 23,
          "position": 1485
        },
        "endLoc": {
          "line": 234,
          "column": 30,
          "position": 1703
        }
      },
      "secondFile": {
        "name": "lib/scheduling/real-data/scheduling-service-ext.ts",
        "start": 107,
        "end": 53,
        "startLoc": {
          "line": 107,
          "column": 23,
          "position": 728
        },
        "endLoc": {
          "line": 53,
          "column": 32,
          "position": 345
        }
      }
    },
    {
      "format": "typescript",
      "lines": 49,
      "fragment": "payload: {\n    event_type: {\n      uuid: string\n      kind: string\n      slug: string\n      name: string\n      duration: number\n      owner: {\n        type: string\n        uuid: string\n      }\n    }\n    event: {\n      uuid: string\n      start_time: string\n      end_time: string\n      location: {\n        type: string\n        location?: string\n        join_url?: string\n      }\n    }\n    invitee: {\n      uuid: string\n      email: string\n      name: string\n      timezone: string\n      created_at: string\n      updated_at: string\n      questions_and_answers: {\n        question: string\n        answer: string\n      }[]\n      tracking: {\n        utm_source?: string\n        utm_medium?: string\n        utm_campaign?: string\n        utm_content?: string\n        utm_term?: string\n        salesforce_uuid?: string\n      }\n      cancel_url: string\n      reschedule_url: string\n      status: string\n      text_reminder_number: string | null\n      no_show: {\n        label: string\n      } | null\n      cancellation",
      "tokens": 0,
      "firstFile": {
        "name": "lib/scheduling/calendly/types.ts",
        "start": 145,
        "end": 193,
        "startLoc": {
          "line": 145,
          "column": 3,
          "position": 711
        },
        "endLoc": {
          "line": 193,
          "column": 13,
          "position": 996
        }
      },
      "secondFile": {
        "name": "lib/scheduling/calendly/types.ts",
        "start": 82,
        "end": 130,
        "startLoc": {
          "line": 82,
          "column": 3,
          "position": 366
        },
        "endLoc": {
          "line": 130,
          "column": 2,
          "position": 651
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "// Determine which scope to use (organization, user, or default to current user)\n    let queryParams: Record<string, any> = {}\n    \n    if (options.organizationUri) {\n      queryParams.organization = options.organizationUri\n    } else if (options.userUri) {\n      queryParams.user = options.userUri\n    } else {\n      // Default to current user\n      const user = await this.getCurrentUser()\n      queryParams.user = user.resource.uri\n    }\n    \n    // Add filtering parameters",
      "tokens": 0,
      "firstFile": {
        "name": "lib/scheduling/calendly/api-client.ts",
        "start": 513,
        "end": 526,
        "startLoc": {
          "line": 513,
          "column": 5,
          "position": 3030
        },
        "endLoc": {
          "line": 526,
          "column": 28,
          "position": 3145
        }
      },
      "secondFile": {
        "name": "lib/scheduling/calendly/api-client.ts",
        "start": 382,
        "end": 395,
        "startLoc": {
          "line": 382,
          "column": 5,
          "position": 2203
        },
        "endLoc": {
          "line": 395,
          "column": 41,
          "position": 2318
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "if (options.status) queryParams.status = options.status\n    \n    // Add pagination and sorting parameters\n    if (options.count) queryParams.count = options.count\n    if (options.pageToken) queryParams.page_token = options.pageToken\n    if (options.sort) queryParams.sort = options.sort\n    \n    return this.request<CalendlyInviteesResponse",
      "tokens": 0,
      "firstFile": {
        "name": "lib/scheduling/calendly/api-client.ts",
        "start": 579,
        "end": 586,
        "startLoc": {
          "line": 579,
          "column": 5,
          "position": 3524
        },
        "endLoc": {
          "line": 586,
          "column": 25,
          "position": 3613
        }
      },
      "secondFile": {
        "name": "lib/scheduling/calendly/api-client.ts",
        "start": 529,
        "end": 536,
        "startLoc": {
          "line": 529,
          "column": 5,
          "position": 3186
        },
        "endLoc": {
          "line": 536,
          "column": 23,
          "position": 3275
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ",\n        bio: builder.bio || undefined,\n        headline: builder.headline || undefined,\n        tagline: builder.tagline || undefined,\n        // Only use imageUrl after mapping to ensure consistency\n        avatarUrl: mappedUser.imageUrl || undefined,\n        validationTier: builder.validationTier,\n        skills: builder.skills.map((s) => s.skill.name),\n        topSkills: builder.topSkills || [],\n        hourlyRate: builder.hourlyRate ? Number(builder.hourlyRate) : undefined,\n        rating: builder.rating || undefined,\n        featured: builder.featured,\n        availability: (builder.availability as any) || 'available',\n        adhd_focus: builder.adhd_focus,\n        completedProjects: (builder as any).completedProjects || 0,\n        responseRate: (builder as any).responseRate || undefined,\n        slug",
      "tokens": 0,
      "firstFile": {
        "name": "lib/marketplace/data/marketplace-service.ts",
        "start": 421,
        "end": 437,
        "startLoc": {
          "line": 421,
          "column": 10,
          "position": 2996
        },
        "endLoc": {
          "line": 437,
          "column": 5,
          "position": 3211
        }
      },
      "secondFile": {
        "name": "lib/marketplace/data/marketplace-service.ts",
        "start": 270,
        "end": 286,
        "startLoc": {
          "line": 270,
          "column": 12,
          "position": 1896
        },
        "endLoc": {
          "line": 286,
          "column": 2,
          "position": 2111
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "= {\n          id: builder.id,\n          userId: builder.userId,\n          name: builder.displayName || mappedUser.name || 'Unknown Builder',\n          displayName: builder.displayName || undefined,\n          bio: builder.bio || undefined,\n          headline: builder.headline || undefined,\n          tagline: builder.tagline || undefined,\n          // Only use imageUrl after mapping to ensure consistency\n          avatarUrl: mappedUser.imageUrl || undefined,\n          validationTier: builder.validationTier,\n          skills: builder.skills.map((s) => s.skill.name),\n          topSkills: builder.topSkills || [],\n          hourlyRate: builder.hourlyRate ? Number(builder.hourlyRate) : undefined,\n          rating: builder.rating || undefined,\n          featured: builder.featured,\n          availability: (builder.availability as any) || 'available',\n          adhd_focus: builder.adhd_focus,\n          completedProjects: (builder as any).completedProjects || 0,\n          responseRate: (builder as any).responseRate || undefined,\n        };\n        \n        // Add demo status information\n        return enhanceWithDemoStatus(baseProfile, mappedUser);\n      } catch (error) {\n        marketplaceLogger.error('Error mapping featured builder'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/marketplace/data/marketplace-service.ts",
        "start": 532,
        "end": 557,
        "startLoc": {
          "line": 532,
          "column": 2,
          "position": 4011
        },
        "endLoc": {
          "line": 557,
          "column": 33,
          "position": 4314
        }
      },
      "secondFile": {
        "name": "lib/marketplace/data/marketplace-service.ts",
        "start": 417,
        "end": 291,
        "startLoc": {
          "line": 417,
          "column": 2,
          "position": 2944
        },
        "endLoc": {
          "line": 291,
          "column": 35,
          "position": 2147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ", {\n          builderId: builder.id,\n          error: error instanceof Error ? error.message : String(error)\n        });\n\n        // Return a fallback object with required fields to prevent page crashes\n        return {\n          id: builder.id,\n          userId: builder.userId || 'unknown',\n          name: builder.displayName || 'Unknown Builder',\n          validationTier: builder.validationTier || 1,\n          skills: [],\n          topSkills: [],\n          featured: true",
      "tokens": 0,
      "firstFile": {
        "name": "lib/marketplace/data/marketplace-service.ts",
        "start": 557,
        "end": 570,
        "startLoc": {
          "line": 557,
          "column": 33,
          "position": 4315
        },
        "endLoc": {
          "line": 570,
          "column": 5,
          "position": 4433
        }
      },
      "secondFile": {
        "name": "lib/marketplace/data/marketplace-service.ts",
        "start": 291,
        "end": 304,
        "startLoc": {
          "line": 291,
          "column": 35,
          "position": 2148
        },
        "endLoc": {
          "line": 304,
          "column": 6,
          "position": 2266
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "sortOptions: [\n        { value: 'featured', label: 'Featured' },\n        { value: 'rating', label: 'Highest Rated' },\n        { value: 'projects', label: 'Most Projects' },\n        { value: 'hourly_rate_asc', label: 'Hourly Rate: Low to High' },\n        { value: 'hourly_rate_desc', label: 'Hourly Rate: High to Low' },\n        { value: 'validation', label: 'Validation Level' },\n        { value: 'recent', label: 'Recently Joined' },",
      "tokens": 0,
      "firstFile": {
        "name": "lib/marketplace/data/marketplace-service.ts",
        "start": 646,
        "end": 653,
        "startLoc": {
          "line": 646,
          "column": 7,
          "position": 4981
        },
        "endLoc": {
          "line": 653,
          "column": 2,
          "position": 5103
        }
      },
      "secondFile": {
        "name": "app/api/marketplace/filters/route.ts",
        "start": 29,
        "end": 37,
        "startLoc": {
          "line": 29,
          "column": 7,
          "position": 249
        },
        "endLoc": {
          "line": 37,
          "column": 2,
          "position": 373
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "},\n\n  /**\n   * Serializes trace context to a JSON string for client storage\n   */\n  serializeTraceContext(context: TraceContext | null): string {\n    if (!context) return '';\n    return JSON.stringify(context);\n  },\n\n  /**\n   * Deserializes trace context from a JSON string\n   */\n  deserializeTraceContext(serializedContext: string): TraceContext | null {\n    try {\n      if (!serializedContext) return null;\n      return JSON.parse(serializedContext) as TraceContext;\n    } catch (error) {\n      console.error('Failed to deserialize trace context:', error);\n      return null;\n    }\n  }\n};",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/client/trace-context.client.ts",
        "start": 33,
        "end": 55,
        "startLoc": {
          "line": 33,
          "column": 3,
          "position": 139
        },
        "endLoc": {
          "line": 55,
          "column": 2,
          "position": 283
        }
      },
      "secondFile": {
        "name": "lib/datadog/server/trace-context.server.ts",
        "start": 67,
        "end": 89,
        "startLoc": {
          "line": 67,
          "column": 3,
          "position": 445
        },
        "endLoc": {
          "line": 89,
          "column": 2,
          "position": 589
        }
      }
    },
    {
      "format": "typescript",
      "lines": 43,
      "fragment": ";\n\n/**\n * Authentication information from server context\n */\nexport interface ServerAuth {\n  userId: string | null;\n  sessionId: string | null;\n  isAuthenticated: boolean;\n  roles: UserRole[];\n  hasRole: (role: UserRole) => boolean;\n}\n\n/**\n * Get basic auth state in server components and route handlers\n * @returns Authentication information from response headers\n */\nexport function getServerAuth(): ServerAuth {\n  try {\n    const headersList = headers();\n    const userId = headersList.get('x-clerk-auth-user-id');\n    const sessionId = headersList.get('x-clerk-auth-session-id');\n    \n    // Parse roles from header if available\n    let roles: UserRole[] = [];\n    const rolesHeader = headersList.get('x-clerk-auth-user-roles');\n    \n    if (rolesHeader) {\n      try {\n        // Attempt to parse JSON roles array\n        roles = JSON.parse(rolesHeader);\n      } catch {\n        // Fallback to comma-separated string\n        roles = rolesHeader.split(',') as UserRole[];\n      }\n    }\n    \n    return {\n      userId,\n      sessionId,\n      isAuthenticated: !!userId,\n      roles,\n      hasRole: (role:",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/server-auth.ts",
        "start": 13,
        "end": 55,
        "startLoc": {
          "line": 13,
          "column": 11,
          "position": 75
        },
        "endLoc": {
          "line": 55,
          "column": 2,
          "position": 344
        }
      },
      "secondFile": {
        "name": "libs/auth/src/lib/express/server-auth.ts",
        "start": 22,
        "end": 64,
        "startLoc": {
          "line": 22,
          "column": 2,
          "position": 219
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 489
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": ");\n    return false;\n  }\n}\n\n/**\n * Require authentication for server component or route handler\n * @throws AuthenticationError if user is not authenticated\n */\nexport function requireServerAuth(): ServerAuth {\n  const auth = getServerAuth();\n  \n  if (!auth.isAuthenticated) {\n    throw new AuthenticationError('Authentication required');\n  }\n  \n  return auth;\n}\n\n/**\n * Require specific role for server component or route handler\n * @param role Role to require\n * @throws AuthenticationError if user is not authenticated\n * @throws AuthorizationError if user doesn't have the required role\n */\nexport function requireServerRole(role: UserRole): ServerAuth {\n  const auth = requireServerAuth();\n  \n  if (!auth.hasRole",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/server-auth.ts",
        "start": 195,
        "end": 223,
        "startLoc": {
          "line": 195,
          "column": 2,
          "position": 1424
        },
        "endLoc": {
          "line": 223,
          "column": 8,
          "position": 1545
        }
      },
      "secondFile": {
        "name": "libs/auth/src/lib/express/server-auth.ts",
        "start": 187,
        "end": 215,
        "startLoc": {
          "line": 187,
          "column": 6,
          "position": 1380
        },
        "endLoc": {
          "line": 215,
          "column": 6,
          "position": 1501
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(requiredPermissions: string[]): boolean {\n  const { roles, isLoaded } = useAuth();\n  \n  return useMemo(() => {\n    if (!isLoaded || !requiredPermissions.length) return false;\n    \n    const permissions = calculatePermissions(roles);\n    return requiredPermissions.every",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/permission-hooks.ts",
        "start": 94,
        "end": 101,
        "startLoc": {
          "line": 94,
          "column": 18,
          "position": 555
        },
        "endLoc": {
          "line": 101,
          "column": 6,
          "position": 642
        }
      },
      "secondFile": {
        "name": "lib/auth/express/permission-hooks.ts",
        "start": 78,
        "end": 85,
        "startLoc": {
          "line": 78,
          "column": 17,
          "position": 418
        },
        "endLoc": {
          "line": 85,
          "column": 5,
          "position": 505
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": ";\n\n/**\n * Error type definitions for standardized responses\n */\nexport enum AuthErrorType {\n  AUTHENTICATION = 'AUTHENTICATION_ERROR',\n  AUTHORIZATION = 'AUTHORIZATION_ERROR',\n  CONFIGURATION = 'CONFIGURATION_ERROR',\n  RATE_LIMIT = 'RATE_LIMIT_ERROR',\n  SESSION = 'SESSION_ERROR',\n  TOKEN = 'TOKEN_ERROR',\n  SERVER = 'SERVER_ERROR',\n  VALIDATION = 'VALIDATION_ERROR',\n  RESOURCE_NOT_FOUND = 'RESOURCE_NOT_FOUND',\n}\n\n/**\n * Base authentication error class\n */\nexport class AuthError extends Error {\n  statusCode: number;\n  code: string;\n\n  constructor(message: string, statusCode: number = 401, code: string = 'auth_error') {\n    super(message);\n    this.name = 'AuthError';\n    this.statusCode = statusCode;\n    this.code = code;\n  }\n\n  /**\n   * Convert to a standardized error response object\n   */\n  toJSON() {\n    return {\n      error: {\n        message: this.message,\n        code: this.code,\n        type: this.name\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/errors.ts",
        "start": 13,
        "end": 53,
        "startLoc": {
          "line": 13,
          "column": 30,
          "position": 56
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 293
        }
      },
      "secondFile": {
        "name": "libs/auth/src/lib/express/errors.ts",
        "start": 9,
        "end": 48,
        "startLoc": {
          "line": 9,
          "column": 14,
          "position": 14
        },
        "endLoc": {
          "line": 48,
          "column": 2,
          "position": 249
        }
      }
    },
    {
      "format": "typescript",
      "lines": 97,
      "fragment": "}\n    };\n  }\n}\n\n/**\n * Authentication error for unauthorized access attempts\n */\nexport class AuthenticationError extends AuthError {\n  constructor(message: string = 'Authentication required') {\n    super(message, 401, 'auth_required');\n    this.name = 'AuthenticationError';\n  }\n}\n\n/**\n * Authorization error for insufficient permissions\n */\nexport class AuthorizationError extends AuthError {\n  constructor(message: string = 'Insufficient permissions', role?: string) {\n    const msg = role ? `Insufficient permissions: ${role} role required` : message;\n    super(msg, 403, 'auth_forbidden');\n    this.name = 'AuthorizationError';\n  }\n}\n\n/**\n * Configuration error for auth setup issues\n */\nexport class AuthConfigurationError extends AuthError {\n  constructor(message: string = 'Authentication configuration error') {\n    super(message, 500, 'auth_config_error');\n    this.name = 'AuthConfigurationError';\n  }\n}\n\n/**\n * Rate limit error for too many auth attempts\n */\nexport class AuthRateLimitError extends AuthError {\n  constructor(message: string = 'Too many authentication attempts', retryAfter?: number) {\n    super(message, 429, 'auth_rate_limited');\n    this.name = 'AuthRateLimitError';\n  }\n}\n\n/**\n * Session error for invalid or expired sessions\n */\nexport class SessionError extends AuthError {\n  constructor(message: string = 'Invalid or expired session') {\n    super(message, 401, 'auth_session_error');\n    this.name = 'SessionError';\n  }\n}\n\n/**\n * Token error for invalid or expired tokens\n */\nexport class TokenError extends AuthError {\n  constructor(message: string = 'Invalid or expired token') {\n    super(message, 401, 'auth_token_error');\n    this.name = 'TokenError';\n  }\n}\n\n/**\n * Validation error for invalid input data\n */\nexport class ValidationError extends AuthError {\n  constructor(message: string = 'Invalid input data') {\n    super(message, 400, 'validation_error');\n    this.name = 'ValidationError';\n  }\n}\n\n/**\n * Resource not found error\n */\nexport class ResourceNotFoundError extends AuthError {\n  constructor(message: string = 'Resource not found') {\n    super(message, 404, 'resource_not_found');\n    this.name = 'ResourceNotFoundError';\n  }\n}\n\n/**\n * Create a standardized authentication error response\n *\n * @param type Error type from AuthErrorType enum\n * @param detail Detailed error message\n * @param statusCode HTTP status code (defaults based on error type)\n * @param path Request path for logging (optional)\n * @param method HTTP method for logging (optional)\n * @param userId User ID for logging (optional)\n * @returns NextResponse with standardized error format\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/errors.ts",
        "start": 53,
        "end": 149,
        "startLoc": {
          "line": 53,
          "column": 7,
          "position": 293
        },
        "endLoc": {
          "line": 149,
          "column": 4,
          "position": 805
        }
      },
      "secondFile": {
        "name": "libs/auth/src/lib/express/errors.ts",
        "start": 50,
        "end": 143,
        "startLoc": {
          "line": 50,
          "column": 7,
          "position": 260
        },
        "endLoc": {
          "line": 143,
          "column": 4,
          "position": 772
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "const rolePermissions: Record<string, string[]> = {\n      [UserRole.ADMIN]: ['*'], // Admin has all permissions\n      [UserRole.BUILDER]: ['profile:edit', 'builder:manage'],\n      [UserRole.CLIENT]: ['profile:view', 'booking:create'],\n    };\n\n    // Check if any of the user's roles grant the required permission\n    return roles",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/client-auth.ts",
        "start": 167,
        "end": 174,
        "startLoc": {
          "line": 167,
          "column": 5,
          "position": 1225
        },
        "endLoc": {
          "line": 174,
          "column": 6,
          "position": 1302
        }
      },
      "secondFile": {
        "name": "lib/auth/express/server-auth.ts",
        "start": 180,
        "end": 187,
        "startLoc": {
          "line": 180,
          "column": 5,
          "position": 1244
        },
        "endLoc": {
          "line": 187,
          "column": 10,
          "position": 1322
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "const auth = req.auth;\n      \n      // Extract roles from session claims\n      const userRoles = (auth?.sessionClaims?.roles as UserRole[] || \n                       auth?.sessionClaims?.['public_metadata']?.['roles'] as UserRole[] || \n                       []) as UserRole[];\n\n      // Check if user has any of the required roles",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 203,
        "end": 210,
        "startLoc": {
          "line": 203,
          "column": 7,
          "position": 1285
        },
        "endLoc": {
          "line": 210,
          "column": 47,
          "position": 1365
        }
      },
      "secondFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 136,
        "end": 143,
        "startLoc": {
          "line": 136,
          "column": 7,
          "position": 817
        },
        "endLoc": {
          "line": 143,
          "column": 3,
          "position": 897
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": ",\n        path: req.nextUrl.pathname,\n        method: req.method,\n      });\n      \n      return NextResponse.json(\n        {\n          success: false,\n          message: 'Authorization error',\n          error: {\n            type: 'SERVER_ERROR',\n            detail: 'An error occurred while checking your permissions',\n          },\n        },\n        { status: 500 }\n      );\n    }\n  });\n}\n\n/**\n * Middleware for protecting API routes with all required roles (AND logic)\n * @param roles Array of roles, all of which are required\n * @param handler The route handler function\n * @returns A function that checks if the user has all of the required roles\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 244,
        "end": 269,
        "startLoc": {
          "line": 244,
          "column": 6,
          "position": 1619
        },
        "endLoc": {
          "line": 269,
          "column": 4,
          "position": 1726
        }
      },
      "secondFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 173,
        "end": 198,
        "startLoc": {
          "line": 173,
          "column": 5,
          "position": 1121
        },
        "endLoc": {
          "line": 198,
          "column": 4,
          "position": 1228
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "const auth = req.auth;\n      \n      // Extract roles from session claims\n      const userRoles = (auth?.sessionClaims?.roles as UserRole[] || \n                       auth?.sessionClaims?.['public_metadata']?.['roles'] as UserRole[] || \n                       []) as UserRole[];\n\n      // Check if user has all required roles",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 274,
        "end": 281,
        "startLoc": {
          "line": 274,
          "column": 7,
          "position": 1783
        },
        "endLoc": {
          "line": 281,
          "column": 40,
          "position": 1863
        }
      },
      "secondFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 136,
        "end": 143,
        "startLoc": {
          "line": 136,
          "column": 7,
          "position": 817
        },
        "endLoc": {
          "line": 143,
          "column": 3,
          "position": 897
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ") {\n        return handler(req, userId, userRoles);\n      }\n\n      // Log authorization failure\n      logger.info('API role check failed', {\n        userId,\n        requiredRoles: roles,\n        userRoles,\n        path: req.nextUrl.pathname,\n        method: req.method,\n      });\n      \n      // Return standardized error response\n      return NextResponse.json(\n        {\n          success: false,\n          message: 'Insufficient permissions',\n          error: {\n            type: 'AUTHORIZATION_ERROR',\n            detail: `You do not have all required roles: ",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 285,
        "end": 305,
        "startLoc": {
          "line": 285,
          "column": 20,
          "position": 1906
        },
        "endLoc": {
          "line": 305,
          "column": 38,
          "position": 2029
        }
      },
      "secondFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 214,
        "end": 234,
        "startLoc": {
          "line": 214,
          "column": 16,
          "position": 1408
        },
        "endLoc": {
          "line": 234,
          "column": 45,
          "position": 1531
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "${roles.join(', ')}`,\n          },\n        },\n        { status: 403 }\n      );\n    } catch (error) {\n      // Log error and return 500\n      logger.error('API role check error', {\n        error: error instanceof Error ? error.message : 'Unknown error',\n        userId,\n        requiredRoles: roles,\n        path: req.nextUrl.pathname,\n        method: req.method,\n      });\n      \n      return NextResponse.json(\n        {\n          success: false,\n          message: 'Authorization error',\n          error: {\n            type: 'SERVER_ERROR',\n            detail: 'An error occurred while checking your permissions',\n          },\n        },\n        { status: 500 }\n      );\n    }\n  });\n}\n\n/**\n * Middleware for protecting admin-only API routes\n * @param handler The route handler function\n * @returns A function that checks the user is an admin before calling the handler\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 305,
        "end": 339,
        "startLoc": {
          "line": 305,
          "column": 38,
          "position": 2030
        },
        "endLoc": {
          "line": 339,
          "column": 4,
          "position": 2224
        }
      },
      "secondFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 234,
        "end": 198,
        "startLoc": {
          "line": 234,
          "column": 45,
          "position": 1532
        },
        "endLoc": {
          "line": 198,
          "column": 4,
          "position": 1228
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ";\n      \n      // Simple role-based permission mapping\n      // Replace with your actual permission mapping logic\n      const rolePermissions: Record<string, string[]> = {\n        [UserRole.ADMIN]: ['*'], // Admin has all permissions\n        [UserRole.BUILDER]: ['profile:edit', 'builder:manage'],\n        [UserRole.CLIENT]: ['profile:view', 'booking:create'],\n      };\n      \n      // Check if any of the user's roles grant the required permission\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 381,
        "end": 392,
        "startLoc": {
          "line": 381,
          "column": 2,
          "position": 2481
        },
        "endLoc": {
          "line": 392,
          "column": 6,
          "position": 2568
        }
      },
      "secondFile": {
        "name": "lib/auth/express/server-auth.ts",
        "start": 176,
        "end": 187,
        "startLoc": {
          "line": 176,
          "column": 2,
          "position": 1233
        },
        "endLoc": {
          "line": 187,
          "column": 7,
          "position": 1320
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ",\n        path: req.nextUrl.pathname,\n        method: req.method,\n      });\n      \n      return NextResponse.json(\n        {\n          success: false,\n          message: 'Authorization error',\n          error: {\n            type: 'SERVER_ERROR',\n            detail: 'An error occurred while checking your permissions',\n          },\n        },\n        { status: 500 }\n      );\n    }\n  });\n}",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 427,
        "end": 445,
        "startLoc": {
          "line": 427,
          "column": 11,
          "position": 2837
        },
        "endLoc": {
          "line": 445,
          "column": 2,
          "position": 2941
        }
      },
      "secondFile": {
        "name": "lib/auth/express/api-auth.ts",
        "start": 173,
        "end": 191,
        "startLoc": {
          "line": 173,
          "column": 5,
          "position": 1121
        },
        "endLoc": {
          "line": 191,
          "column": 2,
          "position": 1225
        }
      }
    },
    {
      "format": "typescript",
      "lines": 41,
      "fragment": ";\n\n/**\n * Creates a Next.js middleware function that uses Clerk Express SDK\n * @returns Middleware function compatible with Next.js\n */\nexport function createClerkExpressMiddleware() {\n  return async function clerkExpressAdapter(req: NextRequest) {\n    // Initialize Express SDK middleware with Next.js adapter\n    try {\n      // Create Express-compatible request/response objects\n      const expressReq = adaptNextRequestToExpress(req);\n      const expressRes = createMockExpressResponse();\n      let nextCalled = false;\n\n      // Create Express-style next function\n      const next = () => {\n        nextCalled = true;\n      };\n\n      // Initialize Clerk Express middleware with default cookie settings\n      // FIXED: Removed custom cookie name and settings to use Clerk defaults\n      const middleware = clerkExpressMiddleware({\n        publishableKey: process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY,\n        secretKey: process.env.CLERK_SECRET_KEY,\n        signInUrl: '/sign-in',\n        // REMOVED custom cookie configuration\n        // REMOVED apiVersion to use default\n        // REMOVED apiKey to use secretKey only\n        // Set EU data residency if required\n        ...(process.env.CLERK_DATA_RESIDENCY === 'eu' && { frontendApi: process.env.NEXT_PUBLIC_CLERK_FRONTEND_API }),\n        debug: process.env.NODE_ENV === 'development',\n      });\n\n      // Apply middleware to the request\n      await middleware(expressReq, expressRes, next);\n\n      // Get auth state from request\n      const auth = getAuth(expressReq);\n\n      // Check if route is public",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/express/adapter.ts",
        "start": 13,
        "end": 53,
        "startLoc": {
          "line": 13,
          "column": 15,
          "position": 69
        },
        "endLoc": {
          "line": 53,
          "column": 28,
          "position": 324
        }
      },
      "secondFile": {
        "name": "libs/auth/src/lib/express/adapter.ts",
        "start": 42,
        "end": 82,
        "startLoc": {
          "line": 42,
          "column": 2,
          "position": 293
        },
        "endLoc": {
          "line": 82,
          "column": 39,
          "position": 548
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n          \n          // Skip if it's a reference to migration or cleanup\n          const isMigrationReference = \n            line.includes('migrate') || \n            line.includes('cleanup') || \n            line.includes('remove') || \n            line.includes('replace') ||\n            line.includes('documentation') ||\n            line.includes('archive') ||\n            line.includes('verification') ||\n            line.includes('CLERK_AUTHENTICATION_CLEANUP_LIST.md');\n          \n          // If we found a Clerk context, it's a valid use. If not, it's potentially a NextAuth reference",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/clerk/verify-auth-migration.ts",
        "start": 176,
        "end": 189,
        "startLoc": {
          "line": 176,
          "column": 2,
          "position": 1290
        },
        "endLoc": {
          "line": 189,
          "column": 96,
          "position": 1390
        }
      },
      "secondFile": {
        "name": "lib/auth/clerk/verify-auth-migration.ts",
        "start": 129,
        "end": 142,
        "startLoc": {
          "line": 129,
          "column": 7,
          "position": 878
        },
        "endLoc": {
          "line": 142,
          "column": 36,
          "position": 978
        }
      }
    },
    {
      "format": "javascript",
      "lines": 8,
      "fragment": ") {\n        for (const nextAuthDep of NEXTAUTH_DEPS) {\n          if (nextAuthDep.endsWith('*')) {\n            const prefix = nextAuthDep.replace('*', '');\n            if (dep.startsWith(prefix)) {\n              hasNextAuthDeps = true;\n              removedDeps.push(dep);\n              delete packageJson.devDependencies",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/clerk/remove-nextauth-deps.js",
        "start": 61,
        "end": 68,
        "startLoc": {
          "line": 61,
          "column": 16,
          "position": 402
        },
        "endLoc": {
          "line": 68,
          "column": 16,
          "position": 489
        }
      },
      "secondFile": {
        "name": "lib/auth/clerk/remove-nextauth-deps.js",
        "start": 41,
        "end": 48,
        "startLoc": {
          "line": 41,
          "column": 13,
          "position": 215
        },
        "endLoc": {
          "line": 48,
          "column": 13,
          "position": 302
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "<T>(\n  handler: (req: NextRequest, user: AuthUser) => Promise<T | NextResponse>,\n  roles: UserRole[],\n): (req: NextRequest) => Promise<T | NextResponse> {\n  return withAuth(async (req, user) => {\n    // Check if user has all of the required roles",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/clerk/api-auth.ts",
        "start": 188,
        "end": 193,
        "startLoc": {
          "line": 188,
          "column": 13,
          "position": 1233
        },
        "endLoc": {
          "line": 193,
          "column": 47,
          "position": 1318
        }
      },
      "secondFile": {
        "name": "lib/auth/clerk/api-auth.ts",
        "start": 154,
        "end": 159,
        "startLoc": {
          "line": 154,
          "column": 12,
          "position": 995
        },
        "endLoc": {
          "line": 159,
          "column": 47,
          "position": 1080
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ").map((slot) => (\n              <Button\n                key={slot.id}\n                variant=\"outline\"\n                className=\"justify-center\"\n                onClick={() => onSelect(slot)}\n              >\n                {format(parseISO(slot.startTime), 'h:mm a')}\n              </Button>\n            ))}\n          </div>\n        </div>\n      )}\n      \n      {/* Evening slots */",
      "tokens": 0,
      "firstFile": {
        "name": "components/scheduling/client/time-slot-selector.tsx",
        "start": 101,
        "end": 115,
        "startLoc": {
          "line": 101,
          "column": 10,
          "position": 887
        },
        "endLoc": {
          "line": 115,
          "column": 20,
          "position": 983
        }
      },
      "secondFile": {
        "name": "components/scheduling/client/time-slot-selector.tsx",
        "start": 82,
        "end": 96,
        "startLoc": {
          "line": 82,
          "column": 8,
          "position": 728
        },
        "endLoc": {
          "line": 96,
          "column": 22,
          "position": 824
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ").map((slot) => (\n              <Button\n                key={slot.id}\n                variant=\"outline\"\n                className=\"justify-center\"\n                onClick={() => onSelect(slot)}\n              >\n                {format(parseISO(slot.startTime), 'h:mm a')}\n              </Button>\n            ))}\n          </div>\n        </div>\n      )}\n    </",
      "tokens": 0,
      "firstFile": {
        "name": "components/scheduling/client/time-slot-selector.tsx",
        "start": 120,
        "end": 133,
        "startLoc": {
          "line": 120,
          "column": 8,
          "position": 1040
        },
        "endLoc": {
          "line": 133,
          "column": 3,
          "position": 1133
        }
      },
      "secondFile": {
        "name": "components/scheduling/client/time-slot-selector.tsx",
        "start": 82,
        "end": 96,
        "startLoc": {
          "line": 82,
          "column": 8,
          "position": 728
        },
        "endLoc": {
          "line": 96,
          "column": 2,
          "position": 823
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "{\n  url: string;\n  prefill?: {\n    name?: string;\n    email?: string;\n    timezone?: string;\n    customAnswers?: {\n      a1?: string; // Booking ID\n      pathway?: string; // Selected pathway\n      [key: string]: string | undefined;\n    };\n  };\n  utm?: {\n    utmSource?: string;\n    utmMedium?: string;\n    utmCampaign?: string;\n    utmContent?: string;\n    utmTerm?: string;\n  };\n  height",
      "tokens": 0,
      "firstFile": {
        "name": "components/scheduling/calendly/calendly-embed-optimized.tsx",
        "start": 8,
        "end": 27,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 61
        },
        "endLoc": {
          "line": 27,
          "column": 7,
          "position": 204
        }
      },
      "secondFile": {
        "name": "components/scheduling/calendly/calendly-embed.tsx",
        "start": 8,
        "end": 27,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 61
        },
        "endLoc": {
          "line": 27,
          "column": 10,
          "position": 204
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "startTime.getHours();\n      if (hour < 12) {\n        groups.morning.push(slot);\n      } else if (hour < 17) {\n        groups.afternoon.push(slot);\n      } else {\n        groups.evening.push(slot);\n      }\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "components/scheduling/calendly/calendly-calendar.tsx",
        "start": 135,
        "end": 143,
        "startLoc": {
          "line": 135,
          "column": 2,
          "position": 1220
        },
        "endLoc": {
          "line": 143,
          "column": 2,
          "position": 1301
        }
      },
      "secondFile": {
        "name": "components/scheduling/client/time-slot-selector.tsx",
        "start": 25,
        "end": 35,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 208
        },
        "endLoc": {
          "line": 35,
          "column": 7,
          "position": 293
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": ".map((slot, index) => (\n                      <Button\n                        key={index}\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => onSelectTimeSlot(slot)}\n                        className=\"justify-between\"\n                      >\n                        <span>{format(slot.startTime, 'h:mm a')}</span>\n                        {slot.inviteesRemaining < 5 && (\n                          <Badge variant=\"secondary\" className=\"ml-2\">\n                            {slot.inviteesRemaining} left\n                          </Badge>\n                        )}\n                      </Button>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {timeGroups.evening",
      "tokens": 0,
      "firstFile": {
        "name": "components/scheduling/calendly/calendly-calendar.tsx",
        "start": 248,
        "end": 268,
        "startLoc": {
          "line": 248,
          "column": 10,
          "position": 2156
        },
        "endLoc": {
          "line": 268,
          "column": 8,
          "position": 2311
        }
      },
      "secondFile": {
        "name": "components/scheduling/calendly/calendly-calendar.tsx",
        "start": 224,
        "end": 244,
        "startLoc": {
          "line": 224,
          "column": 8,
          "position": 1953
        },
        "endLoc": {
          "line": 244,
          "column": 10,
          "position": 2108
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ".map((slot, index) => (\n                      <Button\n                        key={index}\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => onSelectTimeSlot(slot)}\n                        className=\"justify-between\"\n                      >\n                        <span>{format(slot.startTime, 'h:mm a')}</span>\n                        {slot.inviteesRemaining < 5 && (\n                          <Badge variant=\"secondary\" className=\"ml-2\">\n                            {slot.inviteesRemaining} left\n                          </Badge>\n                        )}\n                      </Button>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </",
      "tokens": 0,
      "firstFile": {
        "name": "components/scheduling/calendly/calendly-calendar.tsx",
        "start": 272,
        "end": 291,
        "startLoc": {
          "line": 272,
          "column": 8,
          "position": 2359
        },
        "endLoc": {
          "line": 291,
          "column": 3,
          "position": 2510
        }
      },
      "secondFile": {
        "name": "components/scheduling/calendly/calendly-calendar.tsx",
        "start": 224,
        "end": 244,
        "startLoc": {
          "line": 224,
          "column": 8,
          "position": 1953
        },
        "endLoc": {
          "line": 244,
          "column": 2,
          "position": 2105
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": "]: false }));\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Card className=\"w-full\">\n        <CardContent className=\"p-6 flex justify-center\">\n          <div className=\"animate-pulse space-y-4 w-full\">\n            <div className=\"h-4 bg-muted rounded w-3/4\"></div>\n            <div className=\"h-10 bg-muted rounded w-full\"></div>\n            <div className=\"h-32 bg-muted rounded w-full\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"w-full\">\n      <CardContent className=\"p-6\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <div",
      "tokens": 0,
      "firstFile": {
        "name": "components/scheduling/builder/session-type-editor.tsx",
        "start": 143,
        "end": 165,
        "startLoc": {
          "line": 143,
          "column": 7,
          "position": 1303
        },
        "endLoc": {
          "line": 165,
          "column": 4,
          "position": 1473
        }
      },
      "secondFile": {
        "name": "components/scheduling/builder/weekly-schedule.tsx",
        "start": 120,
        "end": 142,
        "startLoc": {
          "line": 120,
          "column": 7,
          "position": 1201
        },
        "endLoc": {
          "line": 142,
          "column": 3,
          "position": 1371
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": ")}\n        initial={withAnimation ? { opacity: 0, y: 20 } : undefined}\n        animate={withAnimation ? { opacity: 1, y: 0 } : undefined}\n        transition={{ duration: 0.4 }}\n      >\n        <p className=\"text-sm font-medium text-muted-foreground\">{label}</p>\n        <p className=\"text-xl font-semibold\">\n          {prefix}{formattedValue}{suffix}\n        </p>\n      </Component>\n    );\n  }\n\n  // Default variant\n  return (\n    <Component\n      className={cn(\"flex flex-col items-center text-center\"",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketing/ui/marketing-stat.tsx",
        "start": 86,
        "end": 102,
        "startLoc": {
          "line": 86,
          "column": 11,
          "position": 728
        },
        "endLoc": {
          "line": 102,
          "column": 41,
          "position": 865
        }
      },
      "secondFile": {
        "name": "components/marketing/ui/marketing-stat.tsx",
        "start": 59,
        "end": 71,
        "startLoc": {
          "line": 59,
          "column": 9,
          "position": 408
        },
        "endLoc": {
          "line": 71,
          "column": 45,
          "position": 584
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": ", className)}\n      initial={withAnimation ? { opacity: 0, y: 20 } : undefined}\n      animate={withAnimation ? { opacity: 1, y: 0 } : undefined}\n      transition={{ duration: 0.4 }}\n    >\n      <h3 className=\"text-3xl md:text-5xl font-bold mb-2\">\n        {prefix}{formattedValue}{suffix}\n      </h3>\n      <p className=\"text-lg font-medium mb-1\">{label}</p>\n      {description && <p className=\"text-sm text-muted-foreground\">{description}</p>}\n      {trend && (\n        <div className={cn(\"flex items-center mt-2 text-sm font-medium\", trendStyles)}",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketing/ui/marketing-stat.tsx",
        "start": 102,
        "end": 113,
        "startLoc": {
          "line": 102,
          "column": 41,
          "position": 866
        },
        "endLoc": {
          "line": 113,
          "column": 2,
          "position": 1019
        }
      },
      "secondFile": {
        "name": "components/marketing/ui/marketing-stat.tsx",
        "start": 86,
        "end": 71,
        "startLoc": {
          "line": 86,
          "column": 16,
          "position": 726
        },
        "endLoc": {
          "line": 71,
          "column": 2,
          "position": 588
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "{trend && (\n        <div className={cn(\"flex items-center mt-2 text-sm font-medium\", trendStyles)}>\n          {trend.direction === \"up\" && \"↑\"}\n          {trend.direction === \"down\" && \"↓\"}\n          {trend.direction === \"neutral\" && \"→\"}\n          <span className=\"ml-1\">{formattedTrend}</span>\n        </div>\n      )}\n    </",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketing/ui/marketing-stat.tsx",
        "start": 112,
        "end": 120,
        "startLoc": {
          "line": 112,
          "column": 7,
          "position": 999
        },
        "endLoc": {
          "line": 120,
          "column": 3,
          "position": 1094
        }
      },
      "secondFile": {
        "name": "components/marketing/ui/marketing-stat.tsx",
        "start": 70,
        "end": 78,
        "startLoc": {
          "line": 70,
          "column": 9,
          "position": 568
        },
        "endLoc": {
          "line": 78,
          "column": 2,
          "position": 663
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n          </svg>\n        )}\n      </div>\n      <h3",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketing/ui/feature-card.tsx",
        "start": 108,
        "end": 113,
        "startLoc": {
          "line": 108,
          "column": 21,
          "position": 741
        },
        "endLoc": {
          "line": 113,
          "column": 3,
          "position": 814
        }
      },
      "secondFile": {
        "name": "components/marketing/ui/feature-card.tsx",
        "start": 74,
        "end": 79,
        "startLoc": {
          "line": 74,
          "column": 21,
          "position": 488
        },
        "endLoc": {
          "line": 79,
          "column": 4,
          "position": 561
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": ",\n  className,\n  ...props\n}: TestimonialCardProps) => (\n  <div\n    className={cn(\n      \"flex w-full cursor-pointer break-inside-avoid flex-col items-center justify-between gap-6 rounded-xl p-4\",\n      \"bg-accent\",\n      \"shadow-[0px_0px_0px_1px_rgba(0,0,0,0.04),0px_8px_12px_-4px_rgba(15,12,12,0.08),0px_1px_2px_0px_rgba(15,12,12,0.10)] dark:shadow-[0px_0px_0px_1px_rgba(250,250,250,0.1),0px_0px_0px_1px_#18181B,0px_8px_12px_-4px_rgba(15,12,12,0.3),0px_1px_2px_0px_rgba(15,12,12,0.3)]\",\n      className,\n    )}\n    {...props}\n  >\n    <div className=\"select-none leading-relaxed font-normal text-primary/90\">\n      {description}\n    </div>\n\n    <div className=\"flex w-full select-none items-center justify-start gap-3.5\">\n      <img src={img} alt={name} className=\"size-8 rounded-full\" />\n\n      <div>",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/ui/testimonial-scroll.tsx",
        "start": 19,
        "end": 39,
        "startLoc": {
          "line": 19,
          "column": 5,
          "position": 116
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 228
        }
      },
      "secondFile": {
        "name": "components/marketing/ui/testimonial-card.tsx",
        "start": 24,
        "end": 44,
        "startLoc": {
          "line": 24,
          "column": 11,
          "position": 165
        },
        "endLoc": {
          "line": 44,
          "column": 2,
          "position": 277
        }
      }
    },
    {
      "format": "tsx",
      "lines": 29,
      "fragment": ">\n      <div className=\"px-10\">\n        <div className=\"relative max-h-[750px] overflow-hidden\">\n          <div className=\"gap-0 md:columns-2 xl:columns-3\">\n            {Array(Math.ceil(testimonials.length / 3))\n              .fill(0)\n              .map((_, i) => (\n                <Marquee\n                  vertical\n                  key={i}\n                  className={cn({\n                    \"[--duration:60s]\": i === 1,\n                    \"[--duration:30s]\": i === 2,\n                    \"[--duration:70s]\": i === 3,\n                  })}\n                >\n                  {testimonials.slice(i * 3, (i + 1) * 3).map((card, idx) => (\n                    <TestimonialCard {...card} key={idx} />\n                  ))}\n                </Marquee>\n              ))}\n          </div>\n          <div className=\"pointer-events-none absolute inset-x-0 bottom-0 h-1/6 md:h-1/5 w-full bg-gradient-to-t from-background from-20%\"></div>\n          <div className=\"pointer-events-none absolute inset-x-0 top-0 h-1/6 md:h-1/5 w-full bg-gradient-to-b from-background from-20%\"></div>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/ui/testimonial-scroll.tsx",
        "start": 61,
        "end": 89,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 374
        },
        "endLoc": {
          "line": 89,
          "column": 2,
          "position": 621
        }
      },
      "secondFile": {
        "name": "components/marketing/ui/testimonial-card.tsx",
        "start": 80,
        "end": 108,
        "startLoc": {
          "line": 80,
          "column": 2,
          "position": 548
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 795
        }
      }
    },
    {
      "format": "javascript",
      "lines": 43,
      "fragment": "}>\n                {discussion.title}\n              </CardTitle>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardContent className={cn(\n          isCompact ? \"pb-3\" : \"pb-4\"\n        )}>\n          {!isCompact && (\n            <p className=\"text-muted-foreground text-sm mb-3 line-clamp-2\">\n              {discussion.excerpt}\n            </p>\n          )}\n          \n          <div className=\"flex flex-wrap gap-2 mt-2\">\n            {discussion.topics.map(topic => (\n              <Badge \n                key={topic.id} \n                variant=\"secondary\"\n                className={cn(\n                  \"text-xs\",\n                  topic.color && `bg-${topic.color}-100 text-${topic.color}-800`\n                )}\n              >\n                {topic.name}\n              </Badge>\n            ))}\n          </div>\n        </CardContent>\n\n        <CardFooter className={cn(\n          \"flex justify-between pt-0\",\n          isCompact ? \"text-xs\" : \"text-sm\"\n        )}>\n          <div className=\"flex items-center gap-2\">\n            <Avatar \n              src={discussion.author.avatarUrl} \n              alt={discussion.author.name}\n              className={cn(\n                isCompact ? \"h-5 w-5\" : \"h-6 w-6\"\n              )}",
      "tokens": 0,
      "firstFile": {
        "name": "components/community/ui/discussion-card.tsx",
        "start": 119,
        "end": 161,
        "startLoc": {
          "line": 119,
          "column": 2,
          "position": 691
        },
        "endLoc": {
          "line": 161,
          "column": 2,
          "position": 960
        }
      },
      "secondFile": {
        "name": "components/community/ui/server-discussion-card.tsx",
        "start": 91,
        "end": 134,
        "startLoc": {
          "line": 91,
          "column": 2,
          "position": 563
        },
        "endLoc": {
          "line": 134,
          "column": 2,
          "position": 837
        }
      }
    },
    {
      "format": "tsx",
      "lines": 33,
      "fragment": ";\n\n// Types and interfaces\ninterface DiscussionTopic {\n  id: string;\n  name: string;\n  color?: string;\n}\n\ninterface DiscussionAuthor {\n  id: string;\n  name: string;\n  avatarUrl?: string;\n  role: string;\n}\n\ninterface DiscussionData {\n  id: string;\n  title: string;\n  excerpt: string;\n  author: DiscussionAuthor;\n  replyCount: number;\n  upvotes: number;\n  lastActivityAt: string;\n  topics: DiscussionTopic[];\n  isAnswered?: boolean;\n  isPinned?: boolean;\n}\n\ninterface DiscussionCardProps {\n  discussion: DiscussionData;\n  className?: string;\n  onClick",
      "tokens": 0,
      "firstFile": {
        "name": "components/community/ui/discussion-card.tsx",
        "start": 20,
        "end": 52,
        "startLoc": {
          "line": 20,
          "column": 18,
          "position": 113
        },
        "endLoc": {
          "line": 52,
          "column": 8,
          "position": 292
        }
      },
      "secondFile": {
        "name": "components/community/ui/server-discussion-card.tsx",
        "start": 4,
        "end": 36,
        "startLoc": {
          "line": 4,
          "column": 14,
          "position": 45
        },
        "endLoc": {
          "line": 36,
          "column": 10,
          "position": 224
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "\n      >\n        <CardHeader className=\"pb-2\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1\">\n              <div className=\"flex gap-2 items-center mb-1\">\n                {discussion.isPinned && (\n                  <span className=\"text-xs font-medium text-amber-500\">\n                    📌 Pinned\n                  </span>\n                )}\n                {discussion.isAnswered && (\n                  <span className=\"text-xs font-medium text-emerald-500\">\n                    ✓ Answered\n                  </span>\n                )}\n              </div>\n              <CardTitle className={cn(\n                \"font-semibold text-primary\",\n                isCompact ? \"text-base\" : \"text-lg\"\n              )}>\n                {",
      "tokens": 0,
      "firstFile": {
        "name": "components/community/ui/discussion-card.tsx",
        "start": 99,
        "end": 120,
        "startLoc": {
          "line": 99,
          "column": 2,
          "position": 547
        },
        "endLoc": {
          "line": 120,
          "column": 2,
          "position": 695
        }
      },
      "secondFile": {
        "name": "components/community/ui/server-discussion-card.tsx",
        "start": 70,
        "end": 91,
        "startLoc": {
          "line": 70,
          "column": 2,
          "position": 402
        },
        "endLoc": {
          "line": 91,
          "column": 2,
          "position": 550
        }
      }
    },
    {
      "format": "tsx",
      "lines": 58,
      "fragment": "</CardTitle>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardContent className={cn(\n          isCompact ? \"pb-3\" : \"pb-4\"\n        )}>\n          {!isCompact && (\n            <p className=\"text-muted-foreground text-sm mb-3 line-clamp-2\">\n              {discussion.excerpt}\n            </p>\n          )}\n          \n          <div className=\"flex flex-wrap gap-2 mt-2\">\n            {discussion.topics.map(topic => (\n              <Badge \n                key={topic.id} \n                variant=\"secondary\"\n                className={cn(\n                  \"text-xs\",\n                  topic.color && `bg-${topic.color}-100 text-${topic.color}-800`\n                )}\n              >\n                {topic.name}\n              </Badge>\n            ))}\n          </div>\n        </CardContent>\n\n        <CardFooter className={cn(\n          \"flex justify-between pt-0\",\n          isCompact ? \"text-xs\" : \"text-sm\"\n        )}>\n          <div className=\"flex items-center gap-2\">\n            <Avatar \n              src={discussion.author.avatarUrl} \n              alt={discussion.author.name}\n              className={cn(\n                isCompact ? \"h-5 w-5\" : \"h-6 w-6\"\n              )}\n            />\n            <span className=\"text-muted-foreground\">\n              {discussion.author.name}\n            </span>\n          </div>\n          \n          <div className=\"flex items-center gap-3 text-muted-foreground\">\n            <div className=\"flex items-center gap-1\">\n              <span className=\"text-primary\">▲</span>\n              <span>{discussion.upvotes}</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <span>💬</span>\n              <span>{discussion.replyCount}</span>\n            </div>\n            <div>\n              {formatRelativeTime",
      "tokens": 0,
      "firstFile": {
        "name": "components/community/ui/discussion-card.tsx",
        "start": 121,
        "end": 178,
        "startLoc": {
          "line": 121,
          "column": 15,
          "position": 702
        },
        "endLoc": {
          "line": 178,
          "column": 19,
          "position": 1096
        }
      },
      "secondFile": {
        "name": "components/community/ui/server-discussion-card.tsx",
        "start": 94,
        "end": 151,
        "startLoc": {
          "line": 94,
          "column": 15,
          "position": 579
        },
        "endLoc": {
          "line": 151,
          "column": 25,
          "position": 973
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "\">\n          <div className=\"text-center mb-6\">\n            <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <svg \n                xmlns=\"http://www.w3.org/2000/svg\" \n                className=\"h-8 w-8 text-green-600\" \n                fill=\"none\" \n                viewBox=\"0 0 24 24\" \n                stroke=\"currentColor\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M5 13l4 4L19 7\" \n                />\n              </svg>\n            </div>\n            <h1 className=\"text-2xl font-bold text-green-700\">Booking",
      "tokens": 0,
      "firstFile": {
        "name": "app/booking/confirmation/page.tsx",
        "start": 101,
        "end": 119,
        "startLoc": {
          "line": 101,
          "column": 4,
          "position": 832
        },
        "endLoc": {
          "line": 119,
          "column": 8,
          "position": 943
        }
      },
      "secondFile": {
        "name": "app/booking/recovery/page.tsx",
        "start": 125,
        "end": 143,
        "startLoc": {
          "line": 125,
          "column": 40,
          "position": 962
        },
        "endLoc": {
          "line": 143,
          "column": 9,
          "position": 1073
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ">\n        <Card className=\"p-6\">\n          <div className=\"p-12 text-center\">\n            <p className=\"text-xl text-muted-foreground\">Timeline visualization is loading...</p>\n            <p className=\"mt-4 text-sm text-muted-foreground\">This feature is under active development</p>\n          </div>\n        </Card>\n      </",
      "tokens": 0,
      "firstFile": {
        "name": "app/(platform)/learning/page.tsx",
        "start": 56,
        "end": 63,
        "startLoc": {
          "line": 56,
          "column": 3,
          "position": 567
        },
        "endLoc": {
          "line": 63,
          "column": 3,
          "position": 649
        }
      },
      "secondFile": {
        "name": "app/(platform)/learning/timeline/page.tsx",
        "start": 57,
        "end": 65,
        "startLoc": {
          "line": 57,
          "column": 2,
          "position": 476
        },
        "endLoc": {
          "line": 65,
          "column": 2,
          "position": 559
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ");\n      \n      const user = await prisma.user.create({\n        data: {\n          id: testUser.id,\n          name: testUser.name,\n          email: testUser.email,\n          clerkId: testUser.clerkId || `user_${Math.random().toString(36).substring(2, 15)}`,\n          role: testUser.role,\n          emailVerified: testUser.verified ? new Date() : null\n        }\n      });\n      \n      createdEntities.users.push(testUser);\n      \n      // Track IDs by role for later use\n      if (user.role === 'BUILDER') {\n        createdEntities.builderIds.push(user.id);\n      } else if (user.role === 'CLIENT') {\n        createdEntities.clientIds.push(user.id);\n      } else if (user.role === 'ADMIN') {\n        createdEntities.adminIds.push(user.id);\n      }\n    }\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/seed/base-seed.ts",
        "start": 120,
        "end": 144,
        "startLoc": {
          "line": 120,
          "column": 8,
          "position": 897
        },
        "endLoc": {
          "line": 144,
          "column": 2,
          "position": 1140
        }
      },
      "secondFile": {
        "name": "__tests__/utils/seed/base-seed.ts",
        "start": 92,
        "end": 117,
        "startLoc": {
          "line": 92,
          "column": 2,
          "position": 593
        },
        "endLoc": {
          "line": 117,
          "column": 37,
          "position": 838
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n          bio: testProfile.bio,\n          title: testProfile.title,\n          skills: testProfile.skills,\n          availability: testProfile.availability,\n          hourlyRate: testProfile.hourlyRate,\n          socialLinks: testProfile.socialLinks as any\n        }\n      });\n      \n      createdEntities.profiles.push(testProfile);\n    }\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/seed/base-seed.ts",
        "start": 195,
        "end": 207,
        "startLoc": {
          "line": 195,
          "column": 3,
          "position": 1562
        },
        "endLoc": {
          "line": 207,
          "column": 2,
          "position": 1646
        }
      },
      "secondFile": {
        "name": "__tests__/utils/seed/base-seed.ts",
        "start": 174,
        "end": 187,
        "startLoc": {
          "line": 174,
          "column": 7,
          "position": 1373
        },
        "endLoc": {
          "line": 187,
          "column": 40,
          "position": 1459
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "await prisma.$executeRaw`ROLLBACK`;\n    \n    return result;\n  } catch (error) {\n    // Ensure rollback on error\n    try {\n      await prisma.$executeRaw`ROLLBACK`;\n    } catch (rollbackError) {\n      console.error('Failed to rollback transaction:', rollbackError);\n    }\n    \n    throw error;\n  } finally {\n    await prisma.$disconnect();\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/database/transaction.ts",
        "start": 62,
        "end": 77,
        "startLoc": {
          "line": 62,
          "column": 5,
          "position": 329
        },
        "endLoc": {
          "line": 77,
          "column": 2,
          "position": 427
        }
      },
      "secondFile": {
        "name": "__tests__/utils/database/transaction.ts",
        "start": 24,
        "end": 39,
        "startLoc": {
          "line": 24,
          "column": 5,
          "position": 114
        },
        "endLoc": {
          "line": 39,
          "column": 2,
          "position": 211
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      secret: false,\n      type: 'StandardEventType',\n      created_at: '2023-01-01T00:00:00Z',\n      updated_at: '2023-01-01T00:00:00Z',\n      profile: {\n        type: 'User',\n        name: 'Test Builder',\n        owner: mockCalendlyUser.resource.uri\n      },\n      kind: 'solo',\n      internal_note: null,\n      custom_questions: [\n        {\n          name: 'Specific technical areas you want to discuss?'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/mocks/scheduling/mock-calendly-data.ts",
        "start": 90,
        "end": 104,
        "startLoc": {
          "line": 90,
          "column": 10,
          "position": 507
        },
        "endLoc": {
          "line": 104,
          "column": 48,
          "position": 598
        }
      },
      "secondFile": {
        "name": "__tests__/mocks/scheduling/mock-calendly-data.ts",
        "start": 56,
        "end": 70,
        "startLoc": {
          "line": 56,
          "column": 10,
          "position": 290
        },
        "endLoc": {
          "line": 70,
          "column": 45,
          "position": 381
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "params }) => {\n    const { profileId } = params;\n    const profileIndex = mockProfiles.findIndex(p => p.id === profileId);\n\n    if (profileIndex === -1) {\n      return new HttpResponse(null, { status: 404 });\n    }\n\n    // In a real implementation we would add the project here",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/mocks/profile/profile-handlers.ts",
        "start": 34,
        "end": 42,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 326
        },
        "endLoc": {
          "line": 42,
          "column": 58,
          "position": 415
        }
      },
      "secondFile": {
        "name": "__tests__/mocks/profile/profile-handlers.ts",
        "start": 18,
        "end": 26,
        "startLoc": {
          "line": 18,
          "column": 2,
          "position": 174
        },
        "endLoc": {
          "line": 26,
          "column": 6,
          "position": 263
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": ";\n    \n    const webhookPayload = createMockWebhookPayload('invitee.created', eventId, inviteeId, {\n      payload: {\n        invitee: {\n          tracking: {\n            utm_source: 'buildappswith',\n            utm_medium: 'scheduling',\n            utm_campaign: 'booking',\n            utm_content: 'session_type_id=session-1&client_id=client-1'\n          }\n        },\n        questions_and_answers: [\n          {\n            question: 'session_type_id',\n            answer: 'session-1'\n          },\n          {\n            question: 'client_id',\n            answer: 'client-1'\n          }\n        ]\n      }\n    });\n    \n    // Generate valid signature",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/integration/webhooks/calendly-webhook.test.ts",
        "start": 43,
        "end": 68,
        "startLoc": {
          "line": 43,
          "column": 2,
          "position": 370
        },
        "endLoc": {
          "line": 68,
          "column": 28,
          "position": 505
        }
      },
      "secondFile": {
        "name": "__tests__/unit/lib/scheduling/calendly/service.test.ts",
        "start": 193,
        "end": 218,
        "startLoc": {
          "line": 193,
          "column": 18,
          "position": 1641
        },
        "endLoc": {
          "line": 218,
          "column": 51,
          "position": 1774
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ");\n    \n    // Send request to webhook endpoint\n    const response = await testApiHandler(handleWebhook, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Calendly-Webhook-Signature': signature\n      },\n      body: webhookPayload\n    });\n    \n    // Verify response\n    expect(response.status).toBe(200);\n    \n    const data = await response.json();\n    expect(data).toMatchObject({\n      success: true,\n      message: expect.stringContaining('processed successfully'),\n      event: 'invitee.canceled'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/integration/webhooks/calendly-webhook.test.ts",
        "start": 162,
        "end": 181,
        "startLoc": {
          "line": 162,
          "column": 20,
          "position": 1230
        },
        "endLoc": {
          "line": 181,
          "column": 19,
          "position": 1365
        }
      },
      "secondFile": {
        "name": "__tests__/integration/webhooks/calendly-webhook.test.ts",
        "start": 80,
        "end": 99,
        "startLoc": {
          "line": 80,
          "column": 5,
          "position": 599
        },
        "endLoc": {
          "line": 99,
          "column": 18,
          "position": 734
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "})\n      });\n      \n      const data = await response.json();\n      \n      // Verify response\n      expect(response.status).toBe(200);\n      expect(data.success).toBe(true);\n      expect(data.bookingId).toBeDefined();\n      expect(data.state).toBeDefined",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/integration/booking-payment/calendly-stripe-flow.test.ts",
        "start": 258,
        "end": 267,
        "startLoc": {
          "line": 258,
          "column": 9,
          "position": 2145
        },
        "endLoc": {
          "line": 267,
          "column": 12,
          "position": 2225
        }
      },
      "secondFile": {
        "name": "__tests__/integration/booking-payment/calendly-stripe-flow.test.ts",
        "start": 107,
        "end": 116,
        "startLoc": {
          "line": 107,
          "column": 9,
          "position": 868
        },
        "endLoc": {
          "line": 116,
          "column": 5,
          "position": 948
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "const mockBooking = {\n      id: 'booking-123',\n      builderId: mockBuilder.id,\n      clientId: 'client-123',\n      sessionTypeId: 'session-1',\n      title: 'Initial Consultation',\n      description: 'A brief intro call to discuss your project needs',\n      startTime: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n      endTime: new Date(Date.now() + 24 * 60 * 60 * 1000 + 30 * 60 * 1000).toISOString(),\n      status: 'PENDING',\n      paymentStatus: 'UNPAID'\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/integration/booking-payment/calendly-booking-flow.test.tsx",
        "start": 159,
        "end": 170,
        "startLoc": {
          "line": 159,
          "column": 5,
          "position": 1368
        },
        "endLoc": {
          "line": 170,
          "column": 2,
          "position": 1518
        }
      },
      "secondFile": {
        "name": "__tests__/integration/booking-payment/calendly-booking-flow.test.tsx",
        "start": 107,
        "end": 117,
        "startLoc": {
          "line": 107,
          "column": 5,
          "position": 924
        },
        "endLoc": {
          "line": 117,
          "column": 2,
          "position": 1072
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "// Setup unauthenticated state\n      (useAuth as any).mockReturnValue({\n        isSignedIn: false,\n        isLoaded: true\n      });\n      \n      render(\n        <IntegratedBooking\n          builderId=\"test-builder-id\"\n          sessionTypes={[]}\n          buttonText=\"Book Now\"\n        />\n      );\n      \n      // Find and click the booking button\n      const bookButton = screen.getByText('Book Now');\n      fireEvent.click(bookButton);\n      \n      // Verify the URL format matches what we expect the sign-in page to handle",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/integration/auth-marketplace/booking-integration.test.tsx",
        "start": 123,
        "end": 141,
        "startLoc": {
          "line": 123,
          "column": 7,
          "position": 881
        },
        "endLoc": {
          "line": 141,
          "column": 75,
          "position": 981
        }
      },
      "secondFile": {
        "name": "__tests__/integration/auth-marketplace/booking-integration.test.tsx",
        "start": 61,
        "end": 79,
        "startLoc": {
          "line": 61,
          "column": 7,
          "position": 463
        },
        "endLoc": {
          "line": 79,
          "column": 62,
          "position": 563
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n      application: null,\n      application_fee_amount: null,\n      automatic_payment_methods: null,\n      canceled_at: null,\n      cancellation_reason: null,\n      capture_method: 'automatic',\n      client_secret: `pi_test_secret_${Date.now()}`,\n      confirmation_method: 'automatic',\n      created: Math.floor(Date.now() / 1000) - 300,\n      currency: 'usd',\n      customer: `cus_test_${Date.now()}`,\n      description: 'Booking payment',\n      invoice: null,\n      last_payment_error: {",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/utils/webhook-simulators.ts",
        "start": 505,
        "end": 519,
        "startLoc": {
          "line": 505,
          "column": 2,
          "position": 3203
        },
        "endLoc": {
          "line": 519,
          "column": 2,
          "position": 3333
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/utils/webhook-simulators.ts",
        "start": 433,
        "end": 447,
        "startLoc": {
          "line": 433,
          "column": 6,
          "position": 2683
        },
        "endLoc": {
          "line": 447,
          "column": 5,
          "position": 2813
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": ",\n      livemode: false,\n      metadata: {\n        bookingId: customData.bookingId || `booking_test_${Date.now()}`\n      },\n      next_action: null,\n      on_behalf_of: null,\n      payment_method: `pm_test_${Date.now()}`,\n      payment_method_options: {\n        card: {\n          installments: null,\n          mandate_options: null,\n          network: null,\n          request_three_d_secure: 'automatic'\n        }\n      },\n      payment_method_types: ['card'],\n      processing: null,\n      receipt_email: 'test@example.com',\n      review: null,\n      setup_future_usage: null,\n      shipping: null,\n      source: null,\n      statement_descriptor: null,\n      statement_descriptor_suffix: null,\n      status: 'requires_payment_method'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/utils/webhook-simulators.ts",
        "start": 536,
        "end": 561,
        "startLoc": {
          "line": 536,
          "column": 5,
          "position": 3446
        },
        "endLoc": {
          "line": 561,
          "column": 26,
          "position": 3629
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/utils/webhook-simulators.ts",
        "start": 448,
        "end": 473,
        "startLoc": {
          "line": 448,
          "column": 2,
          "position": 2829
        },
        "endLoc": {
          "line": 473,
          "column": 12,
          "position": 3012
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\n    \n    // Execute test with transaction context\n    const result = await callback(prisma);\n    \n    // Always rollback after test\n    await prisma.$executeRaw`ROLLBACK`;\n    \n    return result;\n  } catch (error) {\n    // Ensure rollback on error\n    try {\n      await prisma.$executeRaw`ROLLBACK`;\n    } catch (rollbackError) {\n      console.error('Failed to rollback transaction:', rollbackError);\n    }\n    \n    throw error;\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/utils/database-isolation.ts",
        "start": 161,
        "end": 180,
        "startLoc": {
          "line": 161,
          "column": 47,
          "position": 979
        },
        "endLoc": {
          "line": 180,
          "column": 2,
          "position": 1088
        }
      },
      "secondFile": {
        "name": "__tests__/utils/database/transaction.ts",
        "start": 18,
        "end": 36,
        "startLoc": {
          "line": 18,
          "column": 8,
          "position": 88
        },
        "endLoc": {
          "line": 36,
          "column": 8,
          "position": 194
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "const expertiseFilter = page.getByTestId('expertise-filter')\n      .or(page.getByText(/expertise|skills|specialties/i).locator('..'));\n    \n    await expertiseFilter.getByText(/react/i).click();\n    \n    // Apply filters if needed\n    const applyButton = page.getByRole('button', { name: /apply|update|filter/i });\n    if (await applyButton.isVisible()) {\n      await applyButton.click();\n    }\n    \n    // Wait for results\n    await AsyncUtils.waitForNetworkIdle(page);\n    \n    // Find and click clear all button",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/marketplace/search-filter.test.ts",
        "start": 217,
        "end": 231,
        "startLoc": {
          "line": 217,
          "column": 5,
          "position": 1876
        },
        "endLoc": {
          "line": 231,
          "column": 35,
          "position": 2001
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/marketplace/search-filter.test.ts",
        "start": 176,
        "end": 190,
        "startLoc": {
          "line": 176,
          "column": 5,
          "position": 1536
        },
        "endLoc": {
          "line": 190,
          "column": 30,
          "position": 1661
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "});\n    await AsyncUtils.waitForPageLoad(page);\n    \n    // Verify essential elements still visible\n    await expect(page.getByRole('heading').filter({ hasText: /established builder/i })).toBeVisible();\n    await expect(page.getByRole('button', { name: /book|schedule|session/i })).toBeVisible();\n    \n    // Verify sections stack vertically on mobile",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/marketplace/builder-profile.test.ts",
        "start": 121,
        "end": 128,
        "startLoc": {
          "line": 121,
          "column": 2,
          "position": 1066
        },
        "endLoc": {
          "line": 128,
          "column": 46,
          "position": 1147
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/marketplace/builder-profile.test.ts",
        "start": 113,
        "end": 120,
        "startLoc": {
          "line": 113,
          "column": 2,
          "position": 963
        },
        "endLoc": {
          "line": 120,
          "column": 20,
          "position": 1044
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", async ({ page }) => {\n    // Navigate through booking process to payment\n    await page.goto('/book/established-builder');\n    \n    // Select first session type\n    await page.getByTestId('session-type-card').first().click();\n    await page.getByRole('button', { name: /continue|next|select date/i }).click();\n    \n    // Select first available date\n    const availableDay = page.locator('.calendar-day:not(.calendar-day-disabled)').first();\n    await AsyncUtils.ensureElementInView(availableDay);\n    await availableDay.click();\n    \n    // Select first available time\n    await page.getByTestId('time-slot').first().click();\n    await page.getByRole('button', { name: /continue|next|booking details/i }).click();\n    \n    // Fill booking details\n    await page.getByLabel(/project description|tell us about your project/i).fill('This is a test booking for declined payment testing.'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/booking/payment-integration.test.ts",
        "start": 57,
        "end": 75,
        "startLoc": {
          "line": 57,
          "column": 40,
          "position": 522
        },
        "endLoc": {
          "line": 75,
          "column": 55,
          "position": 712
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/booking/payment-integration.test.ts",
        "start": 8,
        "end": 26,
        "startLoc": {
          "line": 8,
          "column": 41,
          "position": 66
        },
        "endLoc": {
          "line": 26,
          "column": 58,
          "position": 256
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n    await cardFrame.locator('[placeholder*=\"MM / YY\"]').fill('12/25');\n    await cardFrame.locator('[placeholder*=\"CVC\"]').fill('123');\n    await cardFrame.locator('[placeholder*=\"ZIP\"]').fill('12345');\n    \n    // Submit payment\n    await page.getByRole('button', { name: /pay|submit|confirm/i }).click();\n    \n    // Verify error message appears",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/booking/payment-integration.test.ts",
        "start": 87,
        "end": 95,
        "startLoc": {
          "line": 87,
          "column": 19,
          "position": 807
        },
        "endLoc": {
          "line": 95,
          "column": 32,
          "position": 891
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/booking/payment-integration.test.ts",
        "start": 38,
        "end": 46,
        "startLoc": {
          "line": 38,
          "column": 19,
          "position": 351
        },
        "endLoc": {
          "line": 46,
          "column": 38,
          "position": 435
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", async ({ page }) => {\n    // Navigate through booking process to payment\n    await page.goto('/book/established-builder');\n    \n    // Select first session type\n    await page.getByTestId('session-type-card').first().click();\n    await page.getByRole('button', { name: /continue|next|select date/i }).click();\n    \n    // Select first available date\n    const availableDay = page.locator('.calendar-day:not(.calendar-day-disabled)').first();\n    await AsyncUtils.ensureElementInView(availableDay);\n    await availableDay.click();\n    \n    // Select first available time\n    await page.getByTestId('time-slot').first().click();\n    await page.getByRole('button', { name: /continue|next|booking details/i }).click();\n    \n    // Fill booking details\n    await page.getByLabel(/project description|tell us about your project/i).fill('This is a test booking for insufficient funds testing.'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/booking/payment-integration.test.ts",
        "start": 102,
        "end": 120,
        "startLoc": {
          "line": 102,
          "column": 45,
          "position": 940
        },
        "endLoc": {
          "line": 120,
          "column": 57,
          "position": 1130
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/booking/payment-integration.test.ts",
        "start": 8,
        "end": 26,
        "startLoc": {
          "line": 8,
          "column": 41,
          "position": 66
        },
        "endLoc": {
          "line": 26,
          "column": 58,
          "position": 256
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n    await cardFrame.locator('[placeholder*=\"MM / YY\"]').fill('12/25');\n    await cardFrame.locator('[placeholder*=\"CVC\"]').fill('123');\n    await cardFrame.locator('[placeholder*=\"ZIP\"]').fill('12345');\n    \n    // Submit payment\n    await page.getByRole('button', { name: /pay|submit|confirm/i }).click();\n    \n    // Verify error message appears\n    await expect(page.getByText(/insufficient funds|not enough funds|payment failed/i",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/booking/payment-integration.test.ts",
        "start": 132,
        "end": 141,
        "startLoc": {
          "line": 132,
          "column": 19,
          "position": 1225
        },
        "endLoc": {
          "line": 141,
          "column": 54,
          "position": 1320
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/booking/payment-integration.test.ts",
        "start": 38,
        "end": 96,
        "startLoc": {
          "line": 38,
          "column": 19,
          "position": 351
        },
        "endLoc": {
          "line": 96,
          "column": 45,
          "position": 902
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ", async ({ page }) => {\n    // Navigate through booking process to payment\n    await page.goto('/book/established-builder');\n    \n    // Select first session type\n    await page.getByTestId('session-type-card').first().click();\n    await page.getByRole('button', { name: /continue|next|select date/i }).click();\n    \n    // Select first available date\n    const availableDay = page.locator('.calendar-day:not(.calendar-day-disabled)').first();\n    await AsyncUtils.ensureElementInView(availableDay);\n    await availableDay.click();\n    \n    // Select first available time\n    await page.getByTestId('time-slot').first().click();\n    await page.getByRole('button', { name: /continue|next|booking details/i }).click();\n    \n    // Fill booking details\n    await page.getByLabel(/project description|tell us about your project/i).fill('This is a test booking for payment cancellation testing.'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/booking/payment-integration.test.ts",
        "start": 147,
        "end": 165,
        "startLoc": {
          "line": 147,
          "column": 59,
          "position": 1358
        },
        "endLoc": {
          "line": 165,
          "column": 59,
          "position": 1548
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/booking/payment-integration.test.ts",
        "start": 8,
        "end": 26,
        "startLoc": {
          "line": 8,
          "column": 41,
          "position": 66
        },
        "endLoc": {
          "line": 26,
          "column": 58,
          "position": 256
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "const cardFrame = page.frameLocator('iframe[name*=\"card\"]').first();\n    \n    // Fill card details with Stripe test card\n    await cardFrame.locator('[placeholder*=\"Card number\"]').fill('4242424242424242');\n    await cardFrame.locator('[placeholder*=\"MM / YY\"]').fill('12/25');\n    await cardFrame.locator('[placeholder*=\"CVC\"]').fill('123');\n    await cardFrame.locator('[placeholder*=\"ZIP\"]').fill('12345');\n    \n    // Submit payment\n    await page.getByRole('button', { name: /pay|submit|confirm/i }).click();\n    \n    // Wait for redirect back to our site\n    await page.waitForURL(/.*\\/booking\\/confirmation.*/);\n    \n    // Verify booking confirmation\n    await expect(page.getByText(/booking confirmed|thank you for your booking/i)).toBeVisible();\n    await expect(page.getByText(/booking reference|confirmation number/i)).toBeVisible();\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/booking/booking-flow.test.ts",
        "start": 70,
        "end": 87,
        "startLoc": {
          "line": 70,
          "column": 5,
          "position": 569
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 744
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/booking/payment-integration.test.ts",
        "start": 35,
        "end": 53,
        "startLoc": {
          "line": 35,
          "column": 5,
          "position": 315
        },
        "endLoc": {
          "line": 53,
          "column": 43,
          "position": 492
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "await page.getByRole('button', { name: /continue|next|select date/i }).click();\n    \n    const availableDay = page.locator('.calendar-day:not(.calendar-day-disabled)').first();\n    await availableDay.click();\n    \n    await page.getByTestId('time-slot').first().click();\n    await page.getByRole('button', { name: /continue|next|booking details/i }).click();\n    \n    // Submit form without filling required fields",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/booking/booking-flow.test.ts",
        "start": 135,
        "end": 143,
        "startLoc": {
          "line": 135,
          "column": 5,
          "position": 1193
        },
        "endLoc": {
          "line": 143,
          "column": 47,
          "position": 1297
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/booking/payment-integration.test.ts",
        "start": 206,
        "end": 211,
        "startLoc": {
          "line": 206,
          "column": 5,
          "position": 1865
        },
        "endLoc": {
          "line": 211,
          "column": 6,
          "position": 1963
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "await page.goto('/book/established-builder');\n    await page.getByTestId('session-type-card').first().click();\n    await page.getByRole('button', { name: /continue|next|select date/i }).click();\n    \n    const availableDay = page.locator('.calendar-day:not(.calendar-day-disabled)').first();\n    await availableDay.click();\n    \n    await page.getByTestId('time-slot').first().click();\n    \n    // Click the cancel button",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/e2e/booking/booking-flow.test.ts",
        "start": 168,
        "end": 177,
        "startLoc": {
          "line": 168,
          "column": 5,
          "position": 1516
        },
        "endLoc": {
          "line": 177,
          "column": 27,
          "position": 1625
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/booking/booking-flow.test.ts",
        "start": 133,
        "end": 210,
        "startLoc": {
          "line": 133,
          "column": 5,
          "position": 1163
        },
        "endLoc": {
          "line": 210,
          "column": 6,
          "position": 1938
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ", () => {\n    // Mock window.addEventListener to trigger the error handler\n    const originalAddEventListener = window.addEventListener;\n    window.addEventListener = vi.fn((event, handler) => {\n      if (event === 'error') {\n        // Trigger the error handler immediately\n        handler({\n          error: new Error('Test error'),\n          message: 'Test error message',\n          preventDefault",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/components/error-boundaries/global-error-boundary.test.tsx",
        "start": 96,
        "end": 105,
        "startLoc": {
          "line": 96,
          "column": 50,
          "position": 742
        },
        "endLoc": {
          "line": 105,
          "column": 15,
          "position": 829
        }
      },
      "secondFile": {
        "name": "__tests__/components/error-boundaries/global-error-boundary.test.tsx",
        "start": 47,
        "end": 56,
        "startLoc": {
          "line": 47,
          "column": 40,
          "position": 362
        },
        "endLoc": {
          "line": 56,
          "column": 9,
          "position": 449
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ",\n          preventDefault: vi.fn(),\n        });\n      }\n      return originalAddEventListener(event, handler);\n    });\n    \n    render(\n      <GlobalErrorBoundary>\n        <div>Test Content</div>\n      </GlobalErrorBoundary>\n    );\n    \n    // Check error UI is rendered\n    expect(screen.getByText('Something went wrong')).toBeInTheDocument();\n    \n    // Check logger and Sentry were called",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/components/error-boundaries/global-error-boundary.test.tsx",
        "start": 135,
        "end": 151,
        "startLoc": {
          "line": 135,
          "column": 2,
          "position": 1072
        },
        "endLoc": {
          "line": 151,
          "column": 39,
          "position": 1165
        }
      },
      "secondFile": {
        "name": "__tests__/components/error-boundaries/global-error-boundary.test.tsx",
        "start": 58,
        "end": 73,
        "startLoc": {
          "line": 58,
          "column": 3,
          "position": 467
        },
        "endLoc": {
          "line": 73,
          "column": 7,
          "position": 558
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ", () => {\n    // Mock window.addEventListener to trigger the error handler\n    const originalAddEventListener = window.addEventListener;\n    window.addEventListener = vi.fn((event, handler) => {\n      if (event === 'error') {\n        // Trigger the error handler immediately\n        handler({\n          error: new Error('Test error'),\n          message: 'Test error message',\n          preventDefault: vi.fn(),\n        });\n      }\n      return originalAddEventListener(event, handler);\n    });\n    \n    render",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/components/error-boundaries/global-error-boundary.test.tsx",
        "start": 163,
        "end": 178,
        "startLoc": {
          "line": 163,
          "column": 61,
          "position": 1250
        },
        "endLoc": {
          "line": 178,
          "column": 7,
          "position": 1375
        }
      },
      "secondFile": {
        "name": "__tests__/components/error-boundaries/global-error-boundary.test.tsx",
        "start": 47,
        "end": 111,
        "startLoc": {
          "line": 47,
          "column": 40,
          "position": 362
        },
        "endLoc": {
          "line": 111,
          "column": 6,
          "position": 867
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ", () => {\n    // Mock window.addEventListener to trigger the error handler\n    const originalAddEventListener = window.addEventListener;\n    window.addEventListener = vi.fn((event, handler) => {\n      if (event === 'error') {\n        // Trigger the error handler immediately\n        handler({\n          error: new Error('Test error'),\n          message: 'Test error message',\n          preventDefault: vi.fn(),\n        });\n      }\n      return originalAddEventListener(event, handler);\n    });\n    \n    // Mock window.location.reload",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/components/error-boundaries/global-error-boundary.test.tsx",
        "start": 193,
        "end": 208,
        "startLoc": {
          "line": 193,
          "column": 49,
          "position": 1462
        },
        "endLoc": {
          "line": 208,
          "column": 31,
          "position": 1587
        }
      },
      "secondFile": {
        "name": "__tests__/components/error-boundaries/global-error-boundary.test.tsx",
        "start": 47,
        "end": 111,
        "startLoc": {
          "line": 47,
          "column": 40,
          "position": 362
        },
        "endLoc": {
          "line": 111,
          "column": 6,
          "position": 867
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ";\n\n// Mock Sentry\nvi.mock('@sentry/nextjs', () => ({\n  captureException: vi.fn(() => 'mock-event-id'),\n  showReportDialog: vi.fn(),\n  withScope: vi.fn((callback) => {\n    const mockScope = {\n      setTag: vi.fn(),\n      setExtra: vi.fn(),\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/components/error-boundaries/feature-error-boundary.test.tsx",
        "start": 9,
        "end": 19,
        "startLoc": {
          "line": 9,
          "column": 15,
          "position": 83
        },
        "endLoc": {
          "line": 19,
          "column": 2,
          "position": 179
        }
      },
      "secondFile": {
        "name": "__tests__/integration/error-handling/error-boundary-sentry.test.tsx",
        "start": 10,
        "end": 20,
        "startLoc": {
          "line": 10,
          "column": 15,
          "position": 105
        },
        "endLoc": {
          "line": 20,
          "column": 11,
          "position": 201
        }
      }
    },
    {
      "format": "javascript",
      "lines": 79,
      "fragment": "}>Trigger Error</button>\n            <span>No Error</span>\n          </div>\n        )}\n      </ApiErrorBoundary>\n    );\n    \n    // Trigger error\n    fireEvent.click(screen.getByText('Trigger Error'));\n    \n    // Check custom fallback is rendered\n    expect(screen.getByTestId('custom-fallback')).toBeInTheDocument();\n    expect(screen.getByText('Custom Error: API error')).toBeInTheDocument();\n    \n    // Reset from custom fallback\n    fireEvent.click(screen.getByText('Custom Reset'));\n    \n    // Check we're back to normal state\n    expect(screen.getByText('No Error')).toBeInTheDocument();\n  });\n  \n  it('renders default error UI when no fallback is provided and an error occurs', () => {\n    render(\n      <ApiErrorBoundary apiName=\"UserData\">\n        {({ setError }) => (\n          <div>\n            <button onClick={() => setError(new Error('API error'))}>Trigger Error</button>\n            <span>No Error</span>\n          </div>\n        )}\n      </ApiErrorBoundary>\n    );\n    \n    // Trigger error\n    fireEvent.click(screen.getByText('Trigger Error'));\n    \n    // Check default error UI is rendered\n    expect(screen.getByText('Problem loading data')).toBeInTheDocument();\n    expect(screen.getByText(/We encountered an error while fetching data from UserData/)).toBeInTheDocument();\n    \n    // Check buttons are rendered\n    expect(screen.getByText('Retry')).toBeInTheDocument();\n    expect(screen.getByText('Report Issue')).toBeInTheDocument();\n    \n    // Check error details are shown in development mode\n    // This assumes NODE_ENV !== 'production'\n    expect(screen.getByText('Error: API error')).toBeInTheDocument();\n  });\n  \n  it('shows Sentry report dialog when feedback button is clicked', () => {\n    render(\n      <ApiErrorBoundary apiName=\"UserData\">\n        {({ setError }) => (\n          <div>\n            <button onClick={() => setError(new Error('API error'))}>Trigger Error</button>\n            <span>No Error</span>\n          </div>\n        )}\n      </ApiErrorBoundary>\n    );\n    \n    // Trigger error\n    fireEvent.click(screen.getByText('Trigger Error'));\n    \n    // Click the feedback button\n    fireEvent.click(screen.getByText('Report Issue'));\n    \n    // Check Sentry.showReportDialog was called\n    expect(Sentry.showReportDialog).toHaveBeenCalledWith({\n      eventId: 'mock-event-id',\n    });\n  });\n  \n  it('adds API tags to Sentry scope', () => {\n    render(\n      <ApiErrorBoundary apiName=\"UserData\">\n        {({ setError }) => (\n          <div>\n            <button onClick={() => setError(new Error('API error'))}",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/components/error-boundaries/api-error-boundary.test.tsx",
        "start": 171,
        "end": 249,
        "startLoc": {
          "line": 171,
          "column": 2,
          "position": 1488
        },
        "endLoc": {
          "line": 249,
          "column": 2,
          "position": 2107
        }
      },
      "secondFile": {
        "name": "__tests__/components/error-boundaries/api-error-boundary.test.tsx",
        "start": 167,
        "end": 225,
        "startLoc": {
          "line": 167,
          "column": 15,
          "position": 1444
        },
        "endLoc": {
          "line": 225,
          "column": 2,
          "position": 1927
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": ";\n\n// Mock Sentry\nvi.mock('@sentry/nextjs', () => ({\n  captureException: vi.fn(() => 'mock-event-id'),\n  showReportDialog: vi.fn(),\n  withScope: vi.fn((callback) => {\n    const mockScope = {\n      setTag: vi.fn(),\n      setExtra: vi.fn(),\n    };\n    callback(mockScope);\n    return 'mock-event-id';\n  }),\n}));\n\n// Mock logger\nvi.mock('@/lib/logger', () => ({\n  logger: {\n    error: vi.fn(),\n  },\n}));\n\ndescribe",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/components/error-boundaries/api-error-boundary.test.tsx",
        "start": 10,
        "end": 33,
        "startLoc": {
          "line": 10,
          "column": 8,
          "position": 102
        },
        "endLoc": {
          "line": 33,
          "column": 9,
          "position": 269
        }
      },
      "secondFile": {
        "name": "__tests__/integration/error-handling/error-boundary-sentry.test.tsx",
        "start": 10,
        "end": 32,
        "startLoc": {
          "line": 10,
          "column": 15,
          "position": 105
        },
        "endLoc": {
          "line": 32,
          "column": 40,
          "position": 250
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ">\n        {({ setError }) => (\n          <div>\n            <button onClick={() => setError(new Error('API error'))}>Trigger Error</button>\n            <span>No Error</span>\n          </div>\n        )}\n      </ApiErrorBoundary>\n    );\n    \n    // Trigger error\n    fireEvent.click(screen.getByText('Trigger Error'));\n    \n    // Check default error UI is rendered",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/components/error-boundaries/api-error-boundary.test.tsx",
        "start": 194,
        "end": 207,
        "startLoc": {
          "line": 194,
          "column": 2,
          "position": 1655
        },
        "endLoc": {
          "line": 207,
          "column": 38,
          "position": 1757
        }
      },
      "secondFile": {
        "name": "__tests__/components/error-boundaries/api-error-boundary.test.tsx",
        "start": 168,
        "end": 181,
        "startLoc": {
          "line": 168,
          "column": 7,
          "position": 1446
        },
        "endLoc": {
          "line": 181,
          "column": 37,
          "position": 1548
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ", () => {\n    render(\n      <ApiErrorBoundary apiName=\"UserData\">\n        {({ setError }) => (\n          <div>\n            <button onClick={() => setError(new Error('API error'))}>Trigger Error</button>\n            <span>No Error</span>\n          </div>\n        )}\n      </ApiErrorBoundary>\n    );\n    \n    // Trigger error\n    fireEvent.click(screen.getByText('Trigger Error'));\n    \n    // Click the feedback button",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/components/error-boundaries/api-error-boundary.test.tsx",
        "start": 220,
        "end": 235,
        "startLoc": {
          "line": 220,
          "column": 61,
          "position": 1863
        },
        "endLoc": {
          "line": 235,
          "column": 29,
          "position": 1987
        }
      },
      "secondFile": {
        "name": "__tests__/components/error-boundaries/api-error-boundary.test.tsx",
        "start": 192,
        "end": 181,
        "startLoc": {
          "line": 192,
          "column": 76,
          "position": 1633
        },
        "endLoc": {
          "line": 181,
          "column": 37,
          "position": 1548
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "fireEvent.click(screen.getByText('Trigger Error'));\n    \n    // Get the scope callback\n    const scopeCallback = Sentry.withScope.mock.calls[0][0];\n    const mockScope = {\n      setTag: vi.fn(),\n    };\n    \n    // Call the callback\n    scopeCallback(mockScope);\n    \n    // Check API tags were set",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/components/error-boundaries/api-error-boundary.test.tsx",
        "start": 256,
        "end": 267,
        "startLoc": {
          "line": 256,
          "column": 5,
          "position": 2140
        },
        "endLoc": {
          "line": 267,
          "column": 27,
          "position": 2219
        }
      },
      "secondFile": {
        "name": "__tests__/integration/error-handling/error-boundary-sentry.test.tsx",
        "start": 156,
        "end": 167,
        "startLoc": {
          "line": 156,
          "column": 7,
          "position": 1198
        },
        "endLoc": {
          "line": 167,
          "column": 48,
          "position": 1277
        }
      }
    },
    {
      "format": "typescript",
      "lines": 35,
      "fragment": "vi.mock('@/lib/logger', () => ({\n  logger: {\n    info: vi.fn(),\n    debug: vi.fn(),\n    warn: vi.fn(),\n    error: vi.fn(),\n    child: vi.fn().mockReturnValue({\n      info: vi.fn(),\n      debug: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn()\n    })\n  },\n  // For backward compatibility\n  enhancedLogger: {\n    info: vi.fn(),\n    debug: vi.fn(),\n    warn: vi.fn(),\n    error: vi.fn(),\n    child: vi.fn().mockReturnValue({\n      info: vi.fn(),\n      debug: vi.fn(),\n      warn: vi.fn(),\n      error: vi.fn()\n    })\n  },\n  createDomainLogger: vi.fn().mockReturnValue({\n    info: vi.fn(),\n    debug: vi.fn(),\n    warn: vi.fn(),\n    error: vi.fn()\n  })\n}));\n\nvi",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/api/webhooks/webhook-handlers.test.ts",
        "start": 7,
        "end": 41,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 66
        },
        "endLoc": {
          "line": 41,
          "column": 3,
          "position": 381
        }
      },
      "secondFile": {
        "name": "__tests__/unit/scheduling/state-machine/state-machine.test.ts",
        "start": 79,
        "end": 113,
        "startLoc": {
          "line": 79,
          "column": 1,
          "position": 562
        },
        "endLoc": {
          "line": 113,
          "column": 9,
          "position": 877
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "}\n      };\n      \n      const payloadString = JSON.stringify(payload);\n      const signature = generateCalendlySignature(payloadString, calendlyWebhookSecret);\n      \n      const response = await fetch('/api/webhooks/calendly', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'calendly-webhook-signature': signature\n        },\n        body: payloadString\n      });\n      \n      // Should return 200 to prevent Calendly from retrying",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/api/webhooks/webhook-handlers.test.ts",
        "start": 198,
        "end": 213,
        "startLoc": {
          "line": 198,
          "column": 9,
          "position": 1580
        },
        "endLoc": {
          "line": 213,
          "column": 55,
          "position": 1681
        }
      },
      "secondFile": {
        "name": "__tests__/api/webhooks/webhook-handlers.test.ts",
        "start": 144,
        "end": 159,
        "startLoc": {
          "line": 144,
          "column": 9,
          "position": 1129
        },
        "endLoc": {
          "line": 159,
          "column": 6,
          "position": 1230
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ": 'invalid-signature'\n        },\n        body: JSON.stringify(payload)\n      });\n      \n      expect(response.status).toBe(401);\n      const data = await response.json();\n      expect(data.error).toBeDefined();\n    });\n    \n    it('should handle unprocessed webhook events'",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/api/webhooks/webhook-handlers.test.ts",
        "start": 289,
        "end": 299,
        "startLoc": {
          "line": 289,
          "column": 19,
          "position": 2246
        },
        "endLoc": {
          "line": 299,
          "column": 43,
          "position": 2325
        }
      },
      "secondFile": {
        "name": "__tests__/api/webhooks/webhook-handlers.test.ts",
        "start": 180,
        "end": 190,
        "startLoc": {
          "line": 180,
          "column": 29,
          "position": 1421
        },
        "endLoc": {
          "line": 190,
          "column": 46,
          "position": 1500
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ")\n      \n      expect(result).toHaveLength(2)\n      expect(result[0].id).toBe('session-1')\n      expect(result[1].id).toBe('session-2')\n      expect(prisma.sessionType.findMany).toHaveBeenCalledWith({\n        where: { builderId: mockProfileId },\n        orderBy: { durationMinutes: 'asc' }\n      })\n    })\n    \n    it('should return an empty array if user has no builder profile'",
      "tokens": 0,
      "firstFile": {
        "name": "tests/profile/profile-actions.test.ts",
        "start": 190,
        "end": 201,
        "startLoc": {
          "line": 190,
          "column": 2,
          "position": 1522
        },
        "endLoc": {
          "line": 201,
          "column": 62,
          "position": 1623
        }
      },
      "secondFile": {
        "name": "tests/profile/profile-actions.test.ts",
        "start": 174,
        "end": 185,
        "startLoc": {
          "line": 174,
          "column": 14,
          "position": 1340
        },
        "endLoc": {
          "line": 185,
          "column": 82,
          "position": 1441
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "},\n        returnUrl: 'https://example.com/confirmation'\n      };\n\n      // Act\n      const result = await createCheckoutSession(request);\n\n      // Assert\n      expect(result.success).toBe(true);\n      expect(result.data).toBeDefined();\n      expect(result.data?.sessionId).toBe",
      "tokens": 0,
      "firstFile": {
        "name": "tests/calendly/calendly-stripe-integration.test.ts",
        "start": 280,
        "end": 290,
        "startLoc": {
          "line": 280,
          "column": 9,
          "position": 1951
        },
        "endLoc": {
          "line": 290,
          "column": 5,
          "position": 2025
        }
      },
      "secondFile": {
        "name": "tests/stripe/stripe-payment.test.ts",
        "start": 121,
        "end": 131,
        "startLoc": {
          "line": 121,
          "column": 9,
          "position": 854
        },
        "endLoc": {
          "line": 131,
          "column": 12,
          "position": 928
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "calendlyEventUri: 'https://api.calendly.com/events/cal_evt_123',\n          calendlyInviteeUri: 'https://api.calendly.com/invitees/inv_123'\n        },\n        returnUrl: 'https://example.com/confirmation'\n      };\n\n      // Act\n      const result = await createCheckoutSession(request);\n\n      // Assert\n      expect(result.success).toBe(true);\n      expect(result.data).toBeDefined();\n      expect(result.data?.sessionId).toBe('cs_test_calendly123');\n      \n      // Verify booking was created",
      "tokens": 0,
      "firstFile": {
        "name": "tests/calendly/calendly-stripe-integration.test.ts",
        "start": 326,
        "end": 340,
        "startLoc": {
          "line": 326,
          "column": 11,
          "position": 2298
        },
        "endLoc": {
          "line": 340,
          "column": 30,
          "position": 2394
        }
      },
      "secondFile": {
        "name": "tests/calendly/calendly-stripe-integration.test.ts",
        "start": 278,
        "end": 291,
        "startLoc": {
          "line": 278,
          "column": 11,
          "position": 1938
        },
        "endLoc": {
          "line": 291,
          "column": 7,
          "position": 2032
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n          startTime: '2025-05-01T10:00:00Z',\n          endTime: '2025-05-01T11:00:00Z',\n          calendlyEventId: 'cal_evt_123'\n        },\n        returnUrl: 'https://example.com/confirmation'\n      };\n\n      // Act\n      const result = await createCheckoutSession(request);\n\n      // Assert\n      expect(result.success).toBe(false);\n      expect(result.error?.type).toBe('database_error'",
      "tokens": 0,
      "firstFile": {
        "name": "tests/calendly/calendly-stripe-integration.test.ts",
        "start": 591,
        "end": 604,
        "startLoc": {
          "line": 591,
          "column": 9,
          "position": 4323
        },
        "endLoc": {
          "line": 604,
          "column": 17,
          "position": 4409
        }
      },
      "secondFile": {
        "name": "tests/calendly/calendly-stripe-integration.test.ts",
        "start": 372,
        "end": 385,
        "startLoc": {
          "line": 372,
          "column": 23,
          "position": 2638
        },
        "endLoc": {
          "line": 385,
          "column": 12,
          "position": 2724
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ")).toContainText('Liam Jons');\n    \n    // Verify session types are visible\n    await expect(page.locator('[data-testid=\"session-type-card\"]').first()).toBeVisible();\n    \n    // Verify booking button is visible\n    await expect(page.locator('[data-testid=\"booking-button\"]')).toBeVisible();\n  });\n  \n  test('Authentication required for booking', async ({ page }) => {\n    // Navigate to a builder profile\n    await page.goto(`",
      "tokens": 0,
      "firstFile": {
        "name": "tests/auth/auth-flow.test.ts",
        "start": 35,
        "end": 46,
        "startLoc": {
          "line": 35,
          "column": 5,
          "position": 231
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 327
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/auth/auth-flow.test.ts",
        "start": 34,
        "end": 45,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 238
        },
        "endLoc": {
          "line": 45,
          "column": 21,
          "position": 334
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ")).toContainText('Liam Jons');\n    \n    // Click book button\n    await page.locator('[data-testid=\"booking-button\"]').click();\n    \n    // Verify redirect to login\n    await expect(page).toHaveURL(/\\/login/);\n    \n    // Verify return URL is included\n    const url = page.url();\n    expect(url).toContain('returnUrl');\n    expect(url).toContain('book');\n  });\n  \n  test('Protected dashboard redirects to login', async ({ page }) => {\n    // Try to access protected dashboard\n    await page.goto(`",
      "tokens": 0,
      "firstFile": {
        "name": "tests/auth/auth-flow.test.ts",
        "start": 49,
        "end": 65,
        "startLoc": {
          "line": 49,
          "column": 5,
          "position": 350
        },
        "endLoc": {
          "line": 65,
          "column": 2,
          "position": 478
        }
      },
      "secondFile": {
        "name": "__tests__/e2e/auth/auth-flow.test.ts",
        "start": 48,
        "end": 64,
        "startLoc": {
          "line": 48,
          "column": 2,
          "position": 363
        },
        "endLoc": {
          "line": 64,
          "column": 13,
          "position": 491
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "// Navigate to a builder profile\n    await page.goto(`${BASE_URL}/profile/liam-jons`);\n    \n    // Verify profile loaded correctly\n    await expect(page.locator('h1')).toContainText('Liam Jons');\n    \n    // Click book button\n    await page.locator('[data-testid=\"booking-button\"]').click();\n    \n    // Verify redirect to login\n    await expect(page).toHaveURL(/\\/login/);\n    \n    // Fill in login form",
      "tokens": 0,
      "firstFile": {
        "name": "tests/auth/auth-flow.test.ts",
        "start": 81,
        "end": 93,
        "startLoc": {
          "line": 81,
          "column": 5,
          "position": 601
        },
        "endLoc": {
          "line": 93,
          "column": 22,
          "position": 684
        }
      },
      "secondFile": {
        "name": "tests/auth/auth-flow.test.ts",
        "start": 45,
        "end": 57,
        "startLoc": {
          "line": 45,
          "column": 5,
          "position": 318
        },
        "endLoc": {
          "line": 57,
          "column": 33,
          "position": 401
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "z.object({\n  id: z.string().optional(),\n  builderId: z.string(),\n  sessionTypeId: z.string(),\n  startTime: z.string(),\n  endTime: z.string(),\n  clientId: z.string().optional(),\n  clientTimezone: z.string().optional(),\n  // Calendly specific fields",
      "tokens": 0,
      "firstFile": {
        "name": "lib/stripe/schemas.ts",
        "start": 13,
        "end": 21,
        "startLoc": {
          "line": 13,
          "column": 2,
          "position": 27
        },
        "endLoc": {
          "line": 21,
          "column": 28,
          "position": 123
        }
      },
      "secondFile": {
        "name": "app/api/stripe/checkout/route.ts",
        "start": 24,
        "end": 32,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 119
        },
        "endLoc": {
          "line": 32,
          "column": 32,
          "position": 215
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ";\n  error?: {\n    type: string;\n    code?: string;\n    detail?: string;\n  };\n}> {\n  try {\n    // Check authentication\n    const { userId } = auth()\n    \n    if (!userId) {\n      return {\n        success: false,\n        message: 'Not authenticated',\n        error: {\n          type: 'authentication_error',\n          detail: 'User must be authenticated to check session status'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/stripe/actions.ts",
        "start": 719,
        "end": 736,
        "startLoc": {
          "line": 719,
          "column": 2,
          "position": 4683
        },
        "endLoc": {
          "line": 736,
          "column": 53,
          "position": 4795
        }
      },
      "secondFile": {
        "name": "lib/stripe/actions.ts",
        "start": 38,
        "end": 55,
        "startLoc": {
          "line": 38,
          "column": 24,
          "position": 188
        },
        "endLoc": {
          "line": 55,
          "column": 58,
          "position": 300
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": ": string,\n  metadata: Partial<ErrorMetadata> = {}\n): string {\n  // Merge with default metadata\n  const errorMetadata: ErrorMetadata = {\n    ...defaultMetadata,\n    ...metadata,\n  } as ErrorMetadata;\n\n  return Sentry.withScope((scope) => {\n    // Set error metadata as tags\n    scope.setTag('error.severity', errorMetadata.severity);\n    scope.setTag('error.category', errorMetadata.category);\n    scope.setTag('error.source', errorMetadata.source);\n    scope.setTag('error.component', errorMetadata.component);\n    scope.setTag('error.userImpact', errorMetadata.userImpact);\n    scope.setTag('error.affectedFeature', errorMetadata.affectedFeature);\n    scope.setTag('error.isRecoverable', String(errorMetadata.isRecoverable));\n    scope.setTag('error.retryable', String(errorMetadata.retryable));\n\n    // Set error metadata as context for more detailed info\n    scope.setContext('errorMetadata', errorMetadata);\n\n    // Map severity for proper Sentry categorization\n    scope.setLevel(mapToSentrySeverity(errorMetadata.severity));\n\n    // Capture the message",
      "tokens": 0,
      "firstFile": {
        "name": "lib/sentry/error-classification.ts",
        "start": 163,
        "end": 189,
        "startLoc": {
          "line": 163,
          "column": 8,
          "position": 874
        },
        "endLoc": {
          "line": 189,
          "column": 23,
          "position": 1106
        }
      },
      "secondFile": {
        "name": "lib/sentry/error-classification.ts",
        "start": 111,
        "end": 137,
        "startLoc": {
          "line": 111,
          "column": 2,
          "position": 513
        },
        "endLoc": {
          "line": 137,
          "column": 54,
          "position": 745
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "= z.object({\n  id: z.string().optional(),\n  title: z.string().min(1),\n  description: z.string().min(1),\n  imageUrl: z.string().url().optional(),\n  technologies",
      "tokens": 0,
      "firstFile": {
        "name": "lib/profile/schemas.ts",
        "start": 53,
        "end": 58,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 609
        },
        "endLoc": {
          "line": 58,
          "column": 13,
          "position": 684
        }
      },
      "secondFile": {
        "name": "lib/profile/schemas.ts",
        "start": 40,
        "end": 45,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 411
        },
        "endLoc": {
          "line": 45,
          "column": 5,
          "position": 486
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      return { success: false, error: error.message || 'Failed to fetch profile' };\n    }\n\n    const data = await response.json();\n    return { success: true, data };\n  } catch (error) {\n    return { \n      success: false, \n      error: error instanceof Error ? error.message : 'An unexpected error occurred' \n    };\n  }\n}\n\n/**\n * Get a builder profile by Clerk user ID\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/profile/api.ts",
        "start": 48,
        "end": 72,
        "startLoc": {
          "line": 48,
          "column": 5,
          "position": 304
        },
        "endLoc": {
          "line": 72,
          "column": 4,
          "position": 485
        }
      },
      "secondFile": {
        "name": "lib/profile/api.ts",
        "start": 21,
        "end": 45,
        "startLoc": {
          "line": 21,
          "column": 3,
          "position": 80
        },
        "endLoc": {
          "line": 45,
          "column": 4,
          "position": 261
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": "}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      return { success: false, error: error.message || 'Failed to fetch profile' };\n    }\n\n    const data = await response.json();\n    return { success: true, data };\n  } catch (error) {\n    return { \n      success: false, \n      error: error instanceof Error ? error.message : 'An unexpected error occurred' \n    };\n  }\n}\n\n/**\n * Get all builder profiles with optional filtering\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/profile/api.ts",
        "start": 75,
        "end": 99,
        "startLoc": {
          "line": 75,
          "column": 12,
          "position": 528
        },
        "endLoc": {
          "line": 99,
          "column": 4,
          "position": 709
        }
      },
      "secondFile": {
        "name": "lib/profile/api.ts",
        "start": 21,
        "end": 45,
        "startLoc": {
          "line": 21,
          "column": 3,
          "position": 80
        },
        "endLoc": {
          "line": 45,
          "column": 4,
          "position": 261
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(profileData),\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      return { success: false, error: error.message || 'Failed to update profile'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/profile/api.ts",
        "start": 184,
        "end": 193,
        "startLoc": {
          "line": 184,
          "column": 8,
          "position": 1460
        },
        "endLoc": {
          "line": 193,
          "column": 27,
          "position": 1545
        }
      },
      "secondFile": {
        "name": "lib/profile/api.ts",
        "start": 153,
        "end": 162,
        "startLoc": {
          "line": 153,
          "column": 7,
          "position": 1214
        },
        "endLoc": {
          "line": 162,
          "column": 27,
          "position": 1299
        }
      }
    },
    {
      "format": "typescript",
      "lines": 37,
      "fragment": "}\n    })\n    \n    // Revalidate profile path\n    revalidatePath(`/profile/${updatedProfile.slug || user.id}`)\n    \n    return {\n      userId: user.id,\n      clerkId: user.clerkId || undefined,\n      email: user.email,\n      name: user.name || undefined,\n      profile: {\n        id: updatedProfile.id,\n        bio: updatedProfile.bio || undefined,\n        headline: updatedProfile.headline || undefined,\n        slug: updatedProfile.slug || undefined,\n        tagline: updatedProfile.tagline || undefined,\n        displayName: updatedProfile.displayName || undefined,\n        validationTier: updatedProfile.validationTier,\n        domains: updatedProfile.domains,\n        badges: updatedProfile.badges,\n        completedProjects: updatedProfile.completedProjects,\n        responseRate: updatedProfile.responseRate || undefined,\n        hourlyRate: updatedProfile.hourlyRate?.toNumber() || undefined,\n        availableForHire: updatedProfile.availableForHire,\n        adhd_focus: updatedProfile.adhd_focus || false,\n        expertiseAreas: updatedProfile.expertiseAreas as Record<string, any> || {},\n        socialLinks: updatedProfile.socialLinks as Record<string, string> || {},\n        portfolioItems: updatedProfile.portfolioItems as any[] || [],\n        featured: updatedProfile.featured,\n        searchable: updatedProfile.searchable,\n        availability: updatedProfile.availability,\n        topSkills: updatedProfile.topSkills\n      }\n    }\n  } catch (error) {\n    logger.error('Error in updateExpertiseAreas'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/profile/actions.ts",
        "start": 272,
        "end": 308,
        "startLoc": {
          "line": 272,
          "column": 7,
          "position": 2611
        },
        "endLoc": {
          "line": 308,
          "column": 32,
          "position": 2983
        }
      },
      "secondFile": {
        "name": "lib/profile/actions.ts",
        "start": 201,
        "end": 237,
        "startLoc": {
          "line": 201,
          "column": 7,
          "position": 1987
        },
        "endLoc": {
          "line": 237,
          "column": 32,
          "position": 2359
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "title: data.title,\n          description: data.description,\n          durationMinutes: data.durationMinutes,\n          price: data.price,\n          currency: data.currency,\n          isActive: data.isActive,\n          color: data.color,\n          maxParticipants: data.maxParticipants\n        }\n      })\n    }\n    \n    // Revalidate path",
      "tokens": 0,
      "firstFile": {
        "name": "lib/profile/actions.ts",
        "start": 430,
        "end": 442,
        "startLoc": {
          "line": 430,
          "column": 11,
          "position": 3928
        },
        "endLoc": {
          "line": 442,
          "column": 19,
          "position": 4011
        }
      },
      "secondFile": {
        "name": "lib/profile/actions.ts",
        "start": 415,
        "end": 425,
        "startLoc": {
          "line": 415,
          "column": 11,
          "position": 3808
        },
        "endLoc": {
          "line": 425,
          "column": 5,
          "position": 3888
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n      title: sessionType.title,\n      description: sessionType.description,\n      durationMinutes: sessionType.durationMinutes,\n      price: sessionType.price.toNumber(),\n      currency: sessionType.currency,\n      isActive: sessionType.isActive,\n      color: sessionType.color || undefined,\n      maxParticipants: sessionType.maxParticipants || undefined\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "lib/profile/actions.ts",
        "start": 446,
        "end": 455,
        "startLoc": {
          "line": 446,
          "column": 3,
          "position": 4045
        },
        "endLoc": {
          "line": 455,
          "column": 2,
          "position": 4131
        }
      },
      "secondFile": {
        "name": "lib/scheduling/real-data/scheduling-service-ext.ts",
        "start": 38,
        "end": 46,
        "startLoc": {
          "line": 38,
          "column": 10,
          "position": 187
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 271
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "];\n  requiredProperties.forEach(prop => {\n    if (!(prop in config)) {\n      errors.push({\n        path: `${basePath}.${prop}`,\n        message: `Required property '${prop}' is missing`\n      });\n    }\n  });\n  \n  // Validate CSRF configuration",
      "tokens": 0,
      "firstFile": {
        "name": "lib/middleware/validation.ts",
        "start": 152,
        "end": 162,
        "startLoc": {
          "line": 152,
          "column": 18,
          "position": 1007
        },
        "endLoc": {
          "line": 162,
          "column": 31,
          "position": 1085
        }
      },
      "secondFile": {
        "name": "lib/middleware/validation.ts",
        "start": 81,
        "end": 91,
        "startLoc": {
          "line": 81,
          "column": 23,
          "position": 457
        },
        "endLoc": {
          "line": 91,
          "column": 50,
          "position": 535
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": ";\n\n/**\n * Fetch builders from the API with pagination and filtering\n */\nexport async function fetchBuilders(\n  page: number = 1, \n  limit: number = 9,\n  filters?: MarketplaceFilters\n): Promise<BuildersResponse> {\n  try {\n    // Build query parameters\n    const params = new URLSearchParams();\n    params.append('page', page.toString());\n    params.append('limit', limit.toString());\n    \n    if (filters?.searchQuery) {\n      params.append('search', filters.searchQuery);\n    }\n    \n    if (filters?.validationTiers && filters.validationTiers.length > 0) {\n      params.append('validationTiers', filters.validationTiers.join(','));\n    }\n    \n    if (filters?.skills && filters.skills.length > 0) {\n      params.append('skills', filters.skills.join(','));\n    }\n    \n    if (filters?.availability && filters.availability.length > 0) {\n      params.append('availability', filters.availability.join(','));\n    }\n    \n    if (filters?.adhd_focus",
      "tokens": 0,
      "firstFile": {
        "name": "lib/marketplace/api.ts",
        "start": 8,
        "end": 40,
        "startLoc": {
          "line": 8,
          "column": 10,
          "position": 36
        },
        "endLoc": {
          "line": 40,
          "column": 11,
          "position": 328
        }
      },
      "secondFile": {
        "name": "lib/marketplace/data-service.ts",
        "start": 7,
        "end": 39,
        "startLoc": {
          "line": 7,
          "column": 10,
          "position": 40
        },
        "endLoc": {
          "line": 39,
          "column": 7,
          "position": 332
        }
      }
    },
    {
      "format": "typescript",
      "lines": 43,
      "fragment": ");\n    }\n    \n    // Fetch data from API\n    const response = await fetch(`/api/marketplace/builders?${params.toString()}`);\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch builders: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching builders:\", error);\n    throw error;\n  }\n}\n\n/**\n * Fetch a single builder by ID\n */\nexport async function fetchBuilderById(builderId: string): Promise<BuilderProfileData | null> {\n  try {\n    const response = await fetch(`/api/marketplace/builders/${builderId}`);\n    \n    if (response.status === 404) {\n      return null;\n    }\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch builder: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error(`Error fetching builder ${builderId}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Fetch featured builders\n */\nexport async function fetchFeaturedBuilders(limit: number = 3): Promise<BuilderProfileListing",
      "tokens": 0,
      "firstFile": {
        "name": "lib/marketplace/api.ts",
        "start": 57,
        "end": 99,
        "startLoc": {
          "line": 57,
          "column": 2,
          "position": 500
        },
        "endLoc": {
          "line": 99,
          "column": 22,
          "position": 805
        }
      },
      "secondFile": {
        "name": "lib/marketplace/data-service.ts",
        "start": 40,
        "end": 82,
        "startLoc": {
          "line": 40,
          "column": 7,
          "position": 348
        },
        "endLoc": {
          "line": 82,
          "column": 19,
          "position": 653
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "${limit}`);\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch featured builders: ${response.status}`);\n    }\n    \n    const result = await response.json();\n    return result.data;\n  } catch (error) {\n    console.error(\"Error fetching featured builders:\", error);\n    throw error;\n  }\n}\n\n/**\n * Fetch available marketplace filter options\n */\nexport async function fetchMarketplaceFilterOptions(): Promise<MarketplaceFilterOptions> {\n  try {\n    const response = await fetch('/api/marketplace/filters');\n    \n    if (!response.ok) {\n      throw new Error(`Failed to fetch filter options: ${response.status}`);\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error(\"Error fetching marketplace filters:\", error);\n    // Return empty filters as fallback\n    return { skills: [] };\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "lib/marketplace/api.ts",
        "start": 101,
        "end": 132,
        "startLoc": {
          "line": 101,
          "column": 48,
          "position": 829
        },
        "endLoc": {
          "line": 132,
          "column": 2,
          "position": 1062
        }
      },
      "secondFile": {
        "name": "lib/marketplace/data-service.ts",
        "start": 84,
        "end": 115,
        "startLoc": {
          "line": 84,
          "column": 34,
          "position": 677
        },
        "endLoc": {
          "line": 115,
          "column": 2,
          "position": 910
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "export interface AnalyticsSummary {\n  profileViews: number;\n  profileViewsChange: number;\n  searchAppearances: number;\n  searchAppearancesChange: number;\n  bookingRequests: number;\n  bookingRequestsChange: number;\n  conversionRate: number;\n  conversionRateChange: number;\n}\n\nexport interface AnalyticsTimeseriesPoint {\n  date: string;\n  value: number;\n}\n\nexport interface AnalyticsTimeseries {\n  profileViews: AnalyticsTimeseriesPoint[];\n  searchAppearances: AnalyticsTimeseriesPoint[];\n  bookingRequests: AnalyticsTimeseriesPoint[];\n}\n\nexport",
      "tokens": 0,
      "firstFile": {
        "name": "lib/marketplace/api.ts",
        "start": 137,
        "end": 159,
        "startLoc": {
          "line": 137,
          "column": 1,
          "position": 1067
        },
        "endLoc": {
          "line": 159,
          "column": 7,
          "position": 1197
        }
      },
      "secondFile": {
        "name": "lib/marketplace/data/analytics-service.ts",
        "start": 15,
        "end": 43,
        "startLoc": {
          "line": 15,
          "column": 1,
          "position": 59
        },
        "endLoc": {
          "line": 43,
          "column": 4,
          "position": 189
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "export interface RumConfig {\n  enabled: boolean;\n  applicationId: string;\n  clientToken: string;\n  site: string;\n  service: string;\n  env: DatadogEnvironment;\n  version: string;\n  sessionSampleRate: number;\n  sessionReplaySampleRate: number;\n  trackInteractions: boolean;\n  trackResources: boolean;\n  trackLongTasks: boolean;\n  defaultPrivacyLevel: 'allow' | 'mask' | 'mask-user-input' | 'forbid';\n  actionNameAttribute: string;\n}\n\n/**\n * Get the RUM configuration for the current environment\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/rum-config.ts",
        "start": 12,
        "end": 31,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 22
        },
        "endLoc": {
          "line": 31,
          "column": 4,
          "position": 143
        }
      },
      "secondFile": {
        "name": "lib/datadog/interfaces/rum.ts",
        "start": 14,
        "end": 33,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 19
        },
        "endLoc": {
          "line": 33,
          "column": 4,
          "position": 140
        }
      }
    },
    {
      "format": "typescript",
      "lines": 39,
      "fragment": ",\n    service: config.service,\n    env: config.env,\n    version: config.version,\n    sessionSampleRate: config.rumSampleRate,\n    sessionReplaySampleRate: config.rumSessionReplaySampleRate,\n    trackInteractions: true,\n    trackResources: true,\n    trackLongTasks: true,\n    defaultPrivacyLevel: 'mask-user-input',\n    actionNameAttribute: 'data-dd-action-name',\n  };\n}\n\n/**\n * Validates that all required environment variables are set for RUM\n */\nexport function validateRumEnvironmentVariables(): boolean {\n  const missing: string[] = [];\n  \n  if (!process.env.NEXT_PUBLIC_DATADOG_RUM_APPLICATION_ID) {\n    missing.push('NEXT_PUBLIC_DATADOG_RUM_APPLICATION_ID');\n  }\n  \n  if (!process.env.NEXT_PUBLIC_DATADOG_RUM_CLIENT_TOKEN) {\n    missing.push('NEXT_PUBLIC_DATADOG_RUM_CLIENT_TOKEN');\n  }\n  \n  if (missing.length > 0) {\n    console.warn(`Missing required environment variables for Datadog RUM: ${missing.join(', ')}`);\n    return false;\n  }\n  \n  return true;\n}\n\n/**\n * User information to associate with RUM sessions\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/rum-config.ts",
        "start": 39,
        "end": 77,
        "startLoc": {
          "line": 39,
          "column": 15,
          "position": 229
        },
        "endLoc": {
          "line": 77,
          "column": 4,
          "position": 460
        }
      },
      "secondFile": {
        "name": "lib/datadog/config/rum-config.ts",
        "start": 25,
        "end": 63,
        "startLoc": {
          "line": 25,
          "column": 5,
          "position": 146
        },
        "endLoc": {
          "line": 63,
          "column": 4,
          "position": 377
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "}\n\n/**\n * Sanitizes user information for RUM to ensure privacy compliance\n */\nexport function sanitizeRumUserInfo(userInfo: RumUserInfo): RumUserInfo {\n  return {\n    id: userInfo.id, // Required\n    name: userInfo.name,\n    email: userInfo.email,\n    role: userInfo.role,\n    // Add only specific allowed custom properties\n    ...(userInfo.plan ? { plan: userInfo.plan } : {}),\n    ...(userInfo.accountType ? { accountType: userInfo.accountType } : {}),\n  };\n}",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/rum-config.ts",
        "start": 84,
        "end": 99,
        "startLoc": {
          "line": 84,
          "column": 1,
          "position": 515
        },
        "endLoc": {
          "line": 99,
          "column": 2,
          "position": 641
        }
      },
      "secondFile": {
        "name": "lib/datadog/config/rum-config.ts",
        "start": 59,
        "end": 74,
        "startLoc": {
          "line": 59,
          "column": 1,
          "position": 374
        },
        "endLoc": {
          "line": 74,
          "column": 2,
          "position": 500
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ".env} environment`);\n      } catch (error) {\n        console.error(\"Failed to initialize Datadog RUM:\", error);\n      }\n    }).catch(err => {\n      console.warn('Failed to import Datadog browser RUM:', err);\n    });\n    \n    return true;\n  } catch (error) {\n    console.error('Failed to initialize Datadog RUM:', error);\n    return false;\n  }\n}\n\n/**\n * Sets the current user for RUM tracking\n * \n * @param user User information or null to clear user\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/init.ts",
        "start": 100,
        "end": 119,
        "startLoc": {
          "line": 100,
          "column": 13,
          "position": 515
        },
        "endLoc": {
          "line": 119,
          "column": 4,
          "position": 620
        }
      },
      "secondFile": {
        "name": "lib/datadog/client/rum.client.ts",
        "start": 65,
        "end": 78,
        "startLoc": {
          "line": 65,
          "column": 7,
          "position": 392
        },
        "endLoc": {
          "line": 78,
          "column": 2,
          "position": 496
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "!rumInitialized) return;\n  \n  try {\n    if (datadogRum) {\n      if (user) {\n        datadogRum.setUser(user);\n      } else {\n        datadogRum.removeUser();\n      }\n    }\n  } catch (error) {\n    console.error('Failed to set RUM user:', error);\n  }\n}\n\n/**\n * Sets global context information for RUM\n * \n * @param context Context object to set\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/init.ts",
        "start": 127,
        "end": 146,
        "startLoc": {
          "line": 127,
          "column": 2,
          "position": 697
        },
        "endLoc": {
          "line": 146,
          "column": 4,
          "position": 788
        }
      },
      "secondFile": {
        "name": "lib/datadog/client/rum.client.ts",
        "start": 84,
        "end": 97,
        "startLoc": {
          "line": 84,
          "column": 2,
          "position": 524
        },
        "endLoc": {
          "line": 97,
          "column": 2,
          "position": 614
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n        beforeSend: (log: any) => {\n          // Filter sensitive data\n          if (log.http?.url) {\n            // Redact potentially sensitive URL parameters\n            log.http.url = log.http.url.replace(/([?&](password|token|key|secret|auth)=)[^&]+/gi, '$1[REDACTED]');\n          }\n          return log;\n        },\n      });\n\n      // Mark as initialized\n      logsInitialized = true;\n      console.log(`Datadog logs initialized for ${config.env} environment`);\n    })",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/init.ts",
        "start": 206,
        "end": 220,
        "startLoc": {
          "line": 206,
          "column": 14,
          "position": 1150
        },
        "endLoc": {
          "line": 220,
          "column": 2,
          "position": 1258
        }
      },
      "secondFile": {
        "name": "lib/datadog/client/logs.client.ts",
        "start": 49,
        "end": 63,
        "startLoc": {
          "line": 49,
          "column": 11,
          "position": 278
        },
        "endLoc": {
          "line": 63,
          "column": 6,
          "position": 387
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "// Configure Next.js integration\n    tracer.use('next', { \n      hooks: true, \n      router: true, \n      server: true \n    });\n\n    // Configure HTTP integration\n    tracer.use('http', { \n      client: true, \n      server: true \n    });\n\n    // Configure Prisma integration\n    tracer.use('prisma', { \n      service: `${config",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/init.ts",
        "start": 342,
        "end": 357,
        "startLoc": {
          "line": 342,
          "column": 5,
          "position": 1943
        },
        "endLoc": {
          "line": 357,
          "column": 7,
          "position": 2040
        }
      },
      "secondFile": {
        "name": "lib/datadog/tracer.ts",
        "start": 69,
        "end": 84,
        "startLoc": {
          "line": 69,
          "column": 5,
          "position": 429
        },
        "endLoc": {
          "line": 84,
          "column": 17,
          "position": 526
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ") return null;\n\n    // Extract the trace context from headers\n    const context = tracer.extract('http_headers', headers);\n    if (!context) return null;\n\n    // Create a new span as a child of the extracted context\n    const span = tracer.startSpan(spanName, {\n      childOf: context,\n      tags: {\n        service: config.service,\n        version: config.version,\n        env: config.env,\n      },\n    });\n\n    return span;\n  } catch (error) {\n    console.error('Failed to extract trace context from headers:', error);\n    return null;\n  }\n}\n\n/**\n * Serializes trace context to a JSON string for client storage\n * @param context The trace context to serialize\n * @returns Serialized context as string\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/context-propagation.ts",
        "start": 97,
        "end": 124,
        "startLoc": {
          "line": 97,
          "column": 7,
          "position": 480
        },
        "endLoc": {
          "line": 124,
          "column": 4,
          "position": 633
        }
      },
      "secondFile": {
        "name": "lib/datadog/server/trace-context.server.ts",
        "start": 46,
        "end": 67,
        "startLoc": {
          "line": 46,
          "column": 8,
          "position": 294
        },
        "endLoc": {
          "line": 67,
          "column": 2,
          "position": 446
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "deserializeTraceContext(serializedContext: string): TraceContext | null {\n  try {\n    if (!serializedContext) return null;\n    return JSON.parse(serializedContext) as TraceContext;\n  } catch (error) {\n    console.error('Failed to deserialize trace context:', error);\n    return null;\n  }\n}",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/context-propagation.ts",
        "start": 135,
        "end": 143,
        "startLoc": {
          "line": 135,
          "column": 2,
          "position": 689
        },
        "endLoc": {
          "line": 143,
          "column": 2,
          "position": 771
        }
      },
      "secondFile": {
        "name": "lib/datadog/server/trace-context.server.ts",
        "start": 80,
        "end": 88,
        "startLoc": {
          "line": 80,
          "column": 3,
          "position": 503
        },
        "endLoc": {
          "line": 88,
          "column": 2,
          "position": 586
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "export interface DatadogConfig {\n  service: string;\n  version: string;\n  env: DatadogEnvironment;\n  site: string;\n  enabled: boolean;\n  sampleRate: number;\n  logSampleRate: number;\n  rumSampleRate: number;\n  rumSessionReplaySampleRate: number;\n  profiling: boolean;\n  debugging: boolean;\n  criticalTransactions: string[];\n}\n\nconst",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/config.ts",
        "start": 28,
        "end": 43,
        "startLoc": {
          "line": 28,
          "column": 1,
          "position": 104
        },
        "endLoc": {
          "line": 43,
          "column": 6,
          "position": 201
        }
      },
      "secondFile": {
        "name": "lib/datadog/config/base-config.ts",
        "start": 37,
        "end": 54,
        "startLoc": {
          "line": 37,
          "column": 1,
          "position": 112
        },
        "endLoc": {
          "line": 54,
          "column": 4,
          "position": 209
        }
      }
    },
    {
      "format": "typescript",
      "lines": 92,
      "fragment": "// Critical transactions to always trace (100% sampling)\n  criticalTransactions: [\n    'auth.signup',\n    'auth.login',\n    'auth.verify',\n    'auth.refresh',\n    'auth.protected',\n    'auth.role',\n    'auth.permission',\n    'payment.process',\n    'booking.create',\n    'marketplace.search',\n  ],\n\n  // Environment-specific configurations\n  environments: {\n    [DatadogEnvironment.DEVELOPMENT]: {\n      enabled: process.env.DATADOG_ENABLE_DEV === 'true',\n      sampleRate: 1.0,\n      logSampleRate: 1.0,\n      rumSampleRate: 1.0,\n      rumSessionReplaySampleRate: 1.0,\n      profiling: true,\n      debugging: true,\n    },\n    [DatadogEnvironment.TESTING]: {\n      enabled: process.env.DATADOG_ENABLE_TEST === 'true',\n      sampleRate: 1.0,\n      logSampleRate: 1.0,\n      rumSampleRate: 1.0,\n      rumSessionReplaySampleRate: 0.0, // Disable replay in test\n      profiling: false,\n      debugging: true,\n    },\n    [DatadogEnvironment.STAGING]: {\n      enabled: true,\n      sampleRate: 0.5,\n      logSampleRate: 0.5,\n      rumSampleRate: 0.5,\n      rumSessionReplaySampleRate: 0.3,\n      profiling: true,\n      debugging: true,\n    },\n    [DatadogEnvironment.PRODUCTION]: {\n      enabled: true,\n      sampleRate: 0.1,\n      logSampleRate: 0.2,\n      rumSampleRate: 0.1,\n      rumSessionReplaySampleRate: 0.05,\n      profiling: true,\n      debugging: false,\n    },\n  },\n};\n\n/**\n * Gets the current environment based on NODE_ENV\n */\nexport function getCurrentEnvironment(): DatadogEnvironment {\n  // Use NEXT_PUBLIC env var for client-side compatibility\n  const env = process.env.NEXT_PUBLIC_NODE_ENV || process.env.NODE_ENV;\n  return (env as DatadogEnvironment) || DatadogEnvironment.DEVELOPMENT;\n}\n\n/**\n * Gets the environment-specific configuration\n */\nexport function getEnvironmentConfig(): EnvironmentConfig {\n  const env = getCurrentEnvironment();\n  return datadogConfigBase.environments[env] || datadogConfigBase.environments[DatadogEnvironment.DEVELOPMENT];\n}\n\n/**\n * Returns the complete Datadog configuration\n */\nexport function getDatadogConfig(): DatadogConfig {\n  const envConfig = getEnvironmentConfig();\n  const env = getCurrentEnvironment();\n  \n  return {\n    service: datadogConfigBase.service,\n    version: datadogConfigBase.version,\n    env,\n    site: datadogConfigBase.site,\n    criticalTransactions: datadogConfigBase.criticalTransactions,\n    ...envConfig,\n  };\n}\n\n/**\n * Determines if the specified transaction is critical and should always be traced\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/config.ts",
        "start": 48,
        "end": 139,
        "startLoc": {
          "line": 48,
          "column": 3,
          "position": 248
        },
        "endLoc": {
          "line": 139,
          "column": 4,
          "position": 799
        }
      },
      "secondFile": {
        "name": "lib/datadog/config/base-config.ts",
        "start": 60,
        "end": 152,
        "startLoc": {
          "line": 60,
          "column": 3,
          "position": 263
        },
        "endLoc": {
          "line": 152,
          "column": 4,
          "position": 814
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n}\n\n/**\n * Determines if the specified transaction is critical and should always be traced\n */\nexport function isCriticalTransaction(transactionName: string): boolean {\n  return datadogConfigBase.criticalTransactions.includes(transactionName);\n}\n\n/**\n * Gets the appropriate sample rate for a transaction\n * - Critical transactions are always sampled (1.0)\n * - Non-critical transactions use the environment's sample rate\n */\nexport function getTransactionSampleRate(transactionName: string): number {\n  if (isCriticalTransaction(transactionName)) {\n    return 1.0;\n  }\n  return getEnvironmentConfig().sampleRate;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "lib/datadog/config.ts",
        "start": 134,
        "end": 154,
        "startLoc": {
          "line": 134,
          "column": 2,
          "position": 794
        },
        "endLoc": {
          "line": 154,
          "column": 2,
          "position": 884
        }
      },
      "secondFile": {
        "name": "lib/datadog/config/base-config.ts",
        "start": 158,
        "end": 178,
        "startLoc": {
          "line": 158,
          "column": 5,
          "position": 868
        },
        "endLoc": {
          "line": 178,
          "column": 2,
          "position": 958
        }
      }
    },
    {
      "format": "typescript",
      "lines": 56,
      "fragment": "/**\n * Authentication Types\n * \n * This file defines the common types used throughout the authentication system.\n * \n * Version: 1.0.0\n */\n\n/**\n * User roles in the system\n */\nexport enum UserRole {\n  ADMIN = 'ADMIN',\n  BUILDER = 'BUILDER',\n  CLIENT = 'CLIENT',\n}\n\n/**\n * Extended user data with application-specific fields\n */\nexport interface AuthUser {\n  id: string;\n  name: string;\n  email: string;\n  imageUrl: string;\n  roles: UserRole[];\n  verified: boolean;\n  completedOnboarding?: boolean;\n  stripeCustomerId?: string;\n  builderProfile?: {\n    id: string;\n    slug: string;\n    validationTier: number;\n  };\n  clientProfile?: {\n    id: string;\n  };\n}\n\n/**\n * Authentication error types\n */\nexport enum AuthErrorType {\n  AUTHENTICATION_ERROR = 'AUTHENTICATION_ERROR',\n  AUTHORIZATION_ERROR = 'AUTHORIZATION_ERROR',\n  CONFIGURATION_ERROR = 'CONFIGURATION_ERROR',\n  VALIDATION_ERROR = 'VALIDATION_ERROR',\n  RATE_LIMIT_ERROR = 'RATE_LIMIT_ERROR',\n  SERVER_ERROR = 'SERVER_ERROR',\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\n}\n\n/**\n * Standardized authentication error\n */\nexport interface",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/types.ts",
        "start": 1,
        "end": 56,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 56,
          "column": 10,
          "position": 236
        }
      },
      "secondFile": {
        "name": "libs/auth/src/lib/types.ts",
        "start": 1,
        "end": 56,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 56,
          "column": 6,
          "position": 236
        }
      }
    },
    {
      "format": "typescript",
      "lines": 42,
      "fragment": "}\n\n/**\n * Standardized API response for authentication operations\n */\nexport interface AuthResponse<T = any> {\n  success: boolean;\n  message: string;\n  data?: T;\n  error?: AuthError;\n}\n\n/**\n * Authentication options for sign-in and sign-out\n */\nexport interface AuthOptions {\n  callbackUrl?: string;\n  redirectUrl?: string;\n}\n\n/**\n * Authentication middleware options\n */\nexport interface AuthMiddlewareOptions {\n  requireAuth?: boolean;\n  requireRoles?: UserRole[];\n}\n\n/**\n * Authentication context type for providers\n */\nexport interface AuthContextType {\n  user: AuthUser | null;\n  isLoaded: boolean;\n  isSignedIn: boolean;\n  roles: UserRole[];\n  hasRole: (role: UserRole) => boolean;\n  isAdmin: boolean;\n  isBuilder: boolean;\n  isClient: boolean;\n  signOut: (options?: AuthOptions) => Promise<void>;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/types.ts",
        "start": 61,
        "end": 102,
        "startLoc": {
          "line": 61,
          "column": 1,
          "position": 272
        },
        "endLoc": {
          "line": 102,
          "column": 2,
          "position": 486
        }
      },
      "secondFile": {
        "name": "libs/auth/src/lib/types.ts",
        "start": 65,
        "end": 106,
        "startLoc": {
          "line": 65,
          "column": 1,
          "position": 302
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 516
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ": async (userId: string, role: UserRole) => {\n    const user = await db.user.findUnique({\n      where: { id: userId },\n      select: { roles: true }\n    });\n    \n    if (!user) throw new Error('User not found');\n    \n    // Filter out the role to remove",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/data-access.ts",
        "start": 148,
        "end": 156,
        "startLoc": {
          "line": 148,
          "column": 11,
          "position": 871
        },
        "endLoc": {
          "line": 156,
          "column": 33,
          "position": 964
        }
      },
      "secondFile": {
        "name": "lib/auth/data-access.ts",
        "start": 121,
        "end": 129,
        "startLoc": {
          "line": 121,
          "column": 8,
          "position": 663
        },
        "endLoc": {
          "line": 129,
          "column": 49,
          "position": 756
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "[\n    \"/\",\n    \"/login\",\n    \"/signup\",\n    \"/signin\",\n    \"/sign-in\",\n    \"/sign-in/(.*)\",\n    \"/sign-up\",\n    \"/sign-up/(.*)\",\n    \"/sso-callback\",\n    \"/verify\",\n    \"/api/auth/(.+)\",\n    \"/api/webhook/(.+)\",\n    \"/api/marketplace/builders\",\n    \"/api/marketplace/featured\",\n    \"/api/marketplace/filters\",\n    \"/api/timeline/(.+)\",\n    \"/toolkit\",\n    \"/how-it-works\",\n    \"/weekly-sessions\",\n    \"/about\",\n    \"/contact\",\n    \"/privacy\",\n    \"/terms\",\n    \"/liam\",\n    \"/builder-profile/(.+)\",\n    \"/auth-test\",\n  ],",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/clerk-reference.ts",
        "start": 5,
        "end": 32,
        "startLoc": {
          "line": 5,
          "column": 2,
          "position": 28
        },
        "endLoc": {
          "line": 32,
          "column": 2,
          "position": 136
        }
      },
      "secondFile": {
        "name": "lib/auth/express/middleware.ts",
        "start": 19,
        "end": 46,
        "startLoc": {
          "line": 19,
          "column": 2,
          "position": 72
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 179
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "export const publicRoutes = [\n  \"/\",\n  \"/login\",\n  \"/signup\",\n  \"/signin\",\n  \"/sign-in\",\n  \"/sign-in/(.*)\",\n  \"/sign-up\",\n  \"/sign-up/(.*)\",\n  \"/sso-callback\",\n  \"/verify\",\n  \"/api/auth/(.+)\",\n  \"/api/webhook/(.+)\",\n  \"/api/marketplace/builders\",\n  \"/api/marketplace/featured\",\n  \"/api/marketplace/filters\",\n  \"/api/timeline/(.+)\",\n  \"/toolkit\",\n  \"/how-it-works\",\n  \"/weekly-sessions\",\n  \"/about\",\n  \"/contact\",\n  \"/privacy\",\n  \"/terms\",\n  \"/liam\",\n  \"/builder-profile/(.+)\",\n  \"/auth-test\",\n];\n\n/**\n * Routes that should be ignored by the middleware\n */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/clerk-middleware.ts",
        "start": 7,
        "end": 38,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 32
        },
        "endLoc": {
          "line": 38,
          "column": 4,
          "position": 150
        }
      },
      "secondFile": {
        "name": "lib/auth/express/middleware.ts",
        "start": 19,
        "end": 51,
        "startLoc": {
          "line": 19,
          "column": 1,
          "position": 64
        },
        "endLoc": {
          "line": 51,
          "column": 4,
          "position": 182
        }
      }
    },
    {
      "format": "typescript",
      "lines": 47,
      "fragment": "import { authMiddleware } from \"@clerk/nextjs\";\n\n// Use Clerk's recommended matcher pattern\nexport default authMiddleware({\n  publicRoutes: [\n    \"/\",\n    \"/login\",\n    \"/signup\",\n    \"/signin\",\n    \"/sign-in\",\n    \"/sign-in/(.*)\",\n    \"/sign-up\",\n    \"/sign-up/(.*)\",\n    \"/sso-callback\",\n    \"/verify\",\n    \"/api/auth/(.+)\",\n    \"/api/webhook/(.+)\",\n    \"/api/marketplace/builders\",\n    \"/api/marketplace/featured\",\n    \"/api/marketplace/filters\",\n    \"/api/timeline/(.+)\",\n    \"/toolkit\",\n    \"/how-it-works\",\n    \"/weekly-sessions\",\n    \"/about\",\n    \"/contact\",\n    \"/privacy\",\n    \"/terms\",\n    \"/liam\",\n    \"/builder-profile/(.+)\",\n    \"/auth-test\",\n  ],\n});\n\n// Configure the middleware for proper patterns\nexport const config = {\n  matcher: [\n    /*\n     * Match all request paths except for the ones starting with:\n     * - _next/static (static files)\n     * - _next/image (image optimization files)\n     * - favicon.ico (favicon file)\n     * - public folder\n     */\n    \"/((?!_next/static|_next/image|favicon.ico).*)\",\n  ],\n};",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/clerk-fix.ts",
        "start": 1,
        "end": 47,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 173
        }
      },
      "secondFile": {
        "name": "lib/auth/clerk-reference.ts",
        "start": 1,
        "end": 47,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 47,
          "column": 2,
          "position": 173
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ";\n    \n    // Update the user in the database\n    await db.user.update({\n      where: { id: userId },\n      data: { roles: newRoles }\n    });\n    \n    // Also update the roles in Clerk's metadata\n    if (user.clerkId) {\n      await clerkClient.users.updateUser(user.clerkId, {\n        publicMetadata: { roles: newRoles }\n      });\n    }\n    \n    // Log the role change",
      "tokens": 0,
      "firstFile": {
        "name": "lib/auth/actions.ts",
        "start": 195,
        "end": 210,
        "startLoc": {
          "line": 195,
          "column": 2,
          "position": 1395
        },
        "endLoc": {
          "line": 210,
          "column": 23,
          "position": 1501
        }
      },
      "secondFile": {
        "name": "lib/auth/actions.ts",
        "start": 104,
        "end": 119,
        "startLoc": {
          "line": 104,
          "column": 2,
          "position": 766
        },
        "endLoc": {
          "line": 119,
          "column": 42,
          "position": 872
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n        error: {\n          type: AdminErrorType.RETRIEVAL,\n          detail: `Server responded with ${response.status}`,\n        },\n      };\n    }\n\n    const data = await response.json();\n\n    if (!data.success) {\n      return {\n        success: false,\n        message: data.message || \"Failed to retrieve system settings\"",
      "tokens": 0,
      "firstFile": {
        "name": "lib/admin/api.ts",
        "start": 70,
        "end": 83,
        "startLoc": {
          "line": 70,
          "column": 37,
          "position": 433
        },
        "endLoc": {
          "line": 83,
          "column": 37,
          "position": 526
        }
      },
      "secondFile": {
        "name": "lib/admin/api.ts",
        "start": 19,
        "end": 32,
        "startLoc": {
          "line": 19,
          "column": 39,
          "position": 98
        },
        "endLoc": {
          "line": 32,
          "column": 39,
          "position": 191
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n        error: {\n          type: AdminErrorType.RETRIEVAL,\n          detail: `Server responded with ${response.status}`,\n        },\n      };\n    }\n\n    const data = await response.json();\n\n    if (!data.success) {\n      return {\n        success: false,\n        message: data.message || \"Failed to retrieve verification queue\"",
      "tokens": 0,
      "firstFile": {
        "name": "lib/admin/api.ts",
        "start": 194,
        "end": 207,
        "startLoc": {
          "line": 194,
          "column": 40,
          "position": 1295
        },
        "endLoc": {
          "line": 207,
          "column": 40,
          "position": 1388
        }
      },
      "secondFile": {
        "name": "lib/admin/api.ts",
        "start": 19,
        "end": 32,
        "startLoc": {
          "line": 19,
          "column": 39,
          "position": 98
        },
        "endLoc": {
          "line": 32,
          "column": 39,
          "position": 191
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n        error: {\n          type: AdminErrorType.UPDATE,\n          detail: `Server responded with ${response.status}`,\n        },\n      };\n    }\n\n    const data = await response.json();\n\n    if (!data.success) {\n      return {\n        success: false,\n        message: data.message || \"Failed to update builder verification status\"",
      "tokens": 0,
      "firstFile": {
        "name": "lib/admin/api.ts",
        "start": 256,
        "end": 269,
        "startLoc": {
          "line": 256,
          "column": 47,
          "position": 1690
        },
        "endLoc": {
          "line": 269,
          "column": 47,
          "position": 1783
        }
      },
      "secondFile": {
        "name": "lib/admin/api.ts",
        "start": 130,
        "end": 143,
        "startLoc": {
          "line": 130,
          "column": 35,
          "position": 820
        },
        "endLoc": {
          "line": 143,
          "column": 35,
          "position": 913
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n        error: {\n          type: AdminErrorType.UPDATE,\n          detail: `Server responded with ${response.status}`,\n        },\n      };\n    }\n\n    const data = await response.json();\n\n    if (!data.success) {\n      return {\n        success: false,\n        message: data.message || \"Failed to manage user role\"",
      "tokens": 0,
      "firstFile": {
        "name": "lib/admin/api.ts",
        "start": 391,
        "end": 404,
        "startLoc": {
          "line": 391,
          "column": 29,
          "position": 2546
        },
        "endLoc": {
          "line": 404,
          "column": 29,
          "position": 2639
        }
      },
      "secondFile": {
        "name": "lib/admin/api.ts",
        "start": 130,
        "end": 143,
        "startLoc": {
          "line": 130,
          "column": 35,
          "position": 820
        },
        "endLoc": {
          "line": 143,
          "column": 35,
          "position": 913
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "} \n      });\n      return false;\n    }\n    \n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      \n      // Call API to transition the booking state\n      const response = await fetch(`/api/scheduling/bookings/${state.bookingId}/transition`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          event: BookingEventEnum.SCHEDULE_EVENT",
      "tokens": 0,
      "firstFile": {
        "name": "hooks/scheduling/use-booking-flow.ts",
        "start": 163,
        "end": 178,
        "startLoc": {
          "line": 163,
          "column": 2,
          "position": 1232
        },
        "endLoc": {
          "line": 178,
          "column": 15,
          "position": 1342
        }
      },
      "secondFile": {
        "name": "hooks/scheduling/use-booking-flow.ts",
        "start": 97,
        "end": 112,
        "startLoc": {
          "line": 97,
          "column": 2,
          "position": 714
        },
        "endLoc": {
          "line": 112,
          "column": 29,
          "position": 824
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "?: string) => {\n    if (!state.bookingId) {\n      dispatch({ \n        type: 'SET_ERROR', \n        payload: { message: 'Missing booking ID' } \n      });\n      return false;\n    }\n    \n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      \n      // Call API to transition the booking state\n      const response = await fetch(`/api/scheduling/bookings/${state.bookingId}/transition`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          event: BookingEventEnum.REQUEST_CANCELLATION",
      "tokens": 0,
      "firstFile": {
        "name": "hooks/scheduling/use-booking-flow.ts",
        "start": 432,
        "end": 451,
        "startLoc": {
          "line": 432,
          "column": 7,
          "position": 3197
        },
        "endLoc": {
          "line": 451,
          "column": 21,
          "position": 3354
        }
      },
      "secondFile": {
        "name": "hooks/scheduling/use-booking-flow.ts",
        "start": 158,
        "end": 112,
        "startLoc": {
          "line": 158,
          "column": 8,
          "position": 1183
        },
        "endLoc": {
          "line": 112,
          "column": 29,
          "position": 824
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "((options) => {\n      return async (req) => ({ redirect: true });\n    });\n    \n    const handler = approach1({ publicRoutes: ['/'] });\n    expect(typeof handler).toBe('function');\n  });\n  \n  it('should work with Approach 2'",
      "tokens": 0,
      "firstFile": {
        "name": "docs/middleware-mock-investigation/typed-mock-test.ts",
        "start": 38,
        "end": 46,
        "startLoc": {
          "line": 38,
          "column": 23,
          "position": 325
        },
        "endLoc": {
          "line": 46,
          "column": 30,
          "position": 410
        }
      },
      "secondFile": {
        "name": "docs/middleware-mock-investigation/typed-mock-test.ts",
        "start": 29,
        "end": 37,
        "startLoc": {
          "line": 29,
          "column": 19,
          "position": 226
        },
        "endLoc": {
          "line": 37,
          "column": 59,
          "position": 311
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "((options) => {\n      return async (req) => ({ redirect: true });\n    });\n    \n    const handler = approach2({ publicRoutes: ['/'] });\n    expect(typeof handler).toBe('function');\n  });\n  \n  it('should work with Approach 3'",
      "tokens": 0,
      "firstFile": {
        "name": "docs/middleware-mock-investigation/typed-mock-test.ts",
        "start": 56,
        "end": 64,
        "startLoc": {
          "line": 56,
          "column": 23,
          "position": 523
        },
        "endLoc": {
          "line": 64,
          "column": 30,
          "position": 608
        }
      },
      "secondFile": {
        "name": "docs/middleware-mock-investigation/typed-mock-test.ts",
        "start": 47,
        "end": 55,
        "startLoc": {
          "line": 47,
          "column": 19,
          "position": 424
        },
        "endLoc": {
          "line": 55,
          "column": 59,
          "position": 509
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "((options) => {\n      return async (req) => ({ redirect: true });\n    });\n    \n    const handler = approach3({ publicRoutes: ['/'] });\n    expect(typeof handler).toBe('function');\n  });\n}",
      "tokens": 0,
      "firstFile": {
        "name": "docs/middleware-mock-investigation/typed-mock-test.ts",
        "start": 74,
        "end": 81,
        "startLoc": {
          "line": 74,
          "column": 23,
          "position": 721
        },
        "endLoc": {
          "line": 81,
          "column": 2,
          "position": 801
        }
      },
      "secondFile": {
        "name": "docs/middleware-mock-investigation/typed-mock-test.ts",
        "start": 65,
        "end": 73,
        "startLoc": {
          "line": 65,
          "column": 19,
          "position": 622
        },
        "endLoc": {
          "line": 73,
          "column": 3,
          "position": 705
        }
      }
    },
    {
      "format": "typescript",
      "lines": 50,
      "fragment": "// Auth state types\nexport type MockAuthState = {\n  userId: string | null;\n  isPublicRoute: boolean;\n};\n\n/**\n * Create a mock request with consistent headers and structure\n * @param pathname URL pathname\n * @param method HTTP method\n * @param headers Additional headers\n * @returns Mocked NextRequest instance\n */\nexport function createMockRequest(\n  pathname = '/',\n  method = 'GET',\n  headers: Record<string, string> = {}\n): NextRequest {\n  const url = new URL(pathname, 'http://localhost');\n  const req = new Request(url, { method });\n  const nextReq = new NextRequest(req);\n  \n  // Add headers\n  Object.entries(headers).forEach(([key, value]) => {\n    nextReq.headers.set(key, value);\n  });\n  \n  return nextReq;\n}\n\n/**\n * Create a mock auth state for testing\n * @param userId User ID or null for unauthenticated\n * @param isPublicRoute Whether the route is public\n * @returns Mock auth state object\n */\nexport function createMockAuthState(\n  userId: string | null = null,\n  isPublicRoute: boolean = false\n): MockAuthState {\n  return { userId, isPublicRoute };\n}\n\n/**\n * Configure a mock authMiddleware function for specific auth states\n * This function properly handles type safety for the mock method chaining\n * \n * @param mockFn The mock function to configure\n * @param authState Authentication state to mock\n */",
      "tokens": 0,
      "firstFile": {
        "name": "docs/middleware-mock-investigation/improved-test-utils.ts",
        "start": 9,
        "end": 58,
        "startLoc": {
          "line": 9,
          "column": 1,
          "position": 38
        },
        "endLoc": {
          "line": 58,
          "column": 4,
          "position": 291
        }
      },
      "secondFile": {
        "name": "lib/middleware/test-utils.ts",
        "start": 36,
        "end": 83,
        "startLoc": {
          "line": 36,
          "column": 1,
          "position": 161
        },
        "endLoc": {
          "line": 83,
          "column": 4,
          "position": 414
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": "/**\n * Configure a mock authMiddleware function for specific auth states\n * This function properly handles type safety for the mock method chaining\n * \n * @param mockFn The mock function to configure\n * @param authState Authentication state to mock\n */\nexport function configureMockAuth<Args extends any[], Return>(\n  mockFn: MockInstance<Args, Return>,\n  authState: MockAuthState\n): void {\n  mockFn.mockImplementationOnce((options: any) => {\n    return async (req: NextRequest) => {\n      return options.afterAuth(\n        authState,\n        req,\n        { nextUrl: req.nextUrl }\n      );\n    };\n  });\n}\n\n/**\n * Mock NextResponse.json with proper status handling\n * @param body Response body\n * @param options Response options\n * @returns Mocked JSON response with status property\n */",
      "tokens": 0,
      "firstFile": {
        "name": "docs/middleware-mock-investigation/improved-test-utils.ts",
        "start": 52,
        "end": 79,
        "startLoc": {
          "line": 52,
          "column": 1,
          "position": 291
        },
        "endLoc": {
          "line": 79,
          "column": 4,
          "position": 414
        }
      },
      "secondFile": {
        "name": "lib/middleware/test-utils.ts",
        "start": 14,
        "end": 36,
        "startLoc": {
          "line": 14,
          "column": 1,
          "position": 38
        },
        "endLoc": {
          "line": 36,
          "column": 20,
          "position": 161
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "=> {\n    return async (req: NextRequest) => {\n      return options.afterAuth(\n        authState,\n        req,\n        { nextUrl: req.nextUrl }\n      );\n    };\n  });\n}\n\n/**\n * Mock NextResponse.json with proper status handling\n * @param body Response body\n * @param options Response options\n * @returns Mocked JSON response with status property\n */\nexport function mockJsonResponse(\n  body: Record<string, any>,\n  options: { status?: number } = {}\n):",
      "tokens": 0,
      "firstFile": {
        "name": "docs/middleware-mock-investigation/improved-test-utils.ts",
        "start": 63,
        "end": 83,
        "startLoc": {
          "line": 63,
          "column": 2,
          "position": 350
        },
        "endLoc": {
          "line": 83,
          "column": 2,
          "position": 456
        }
      },
      "secondFile": {
        "name": "lib/middleware/test-utils.ts",
        "start": 85,
        "end": 105,
        "startLoc": {
          "line": 85,
          "column": 2,
          "position": 439
        },
        "endLoc": {
          "line": 105,
          "column": 2,
          "position": 546
        }
      }
    },
    {
      "format": "typescript",
      "lines": 77,
      "fragment": "{\n  const status = options.status || 200;\n  const headers = new Headers();\n  \n  const response = {\n    status,\n    statusText: getStatusText(status),\n    headers,\n    json: async () => body,\n    text: async () => JSON.stringify(body),\n    clone: () => ({ ...response }),\n  } as unknown as NextResponse;\n  \n  return response;\n}\n\n/**\n * Get status text for HTTP status code\n * @param status HTTP status code\n * @returns Status text\n */\nfunction getStatusText(status: number): string {\n  const statusMap: Record<number, string> = {\n    200: 'OK',\n    201: 'Created',\n    204: 'No Content',\n    301: 'Moved Permanently',\n    302: 'Found',\n    307: 'Temporary Redirect',\n    308: 'Permanent Redirect',\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    409: 'Conflict',\n    422: 'Unprocessable Entity',\n    429: 'Too Many Requests',\n    500: 'Internal Server Error',\n    503: 'Service Unavailable'\n  };\n  \n  return statusMap[status] || 'Unknown';\n}\n\n/**\n * Create a consistent mock for the redirectToSignIn function\n * @returns Mocked implementation function\n */\nexport function mockRedirectToSignIn() {\n  return vi.fn(() => {\n    const response = NextResponse.redirect(new URL('/sign-in', 'http://localhost'));\n    // Ensure the status is 307 for Next.js 15.3.1 compatibility\n    Object.defineProperty(response, 'status', { value: 307 });\n    return response;\n  });\n}\n\n/**\n * Set up common middleware mocks used across multiple test files\n * @returns Object containing mocked dependencies\n */\nexport function setupMiddlewareMocks() {\n  // Mock CSRF protection\n  const csrfMock = vi.fn().mockResolvedValue(null);\n  \n  // Mock rate limiting\n  const rateLimitMock = vi.fn().mockImplementation(() => {\n    return async () => NextResponse.next();\n  });\n  \n  // Return all mocks for use in tests\n  return {\n    csrfProtection: csrfMock,\n    rateLimit: rateLimitMock,\n  };\n}",
      "tokens": 0,
      "firstFile": {
        "name": "docs/middleware-mock-investigation/improved-test-utils.ts",
        "start": 83,
        "end": 159,
        "startLoc": {
          "line": 83,
          "column": 2,
          "position": 460
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 970
        }
      },
      "secondFile": {
        "name": "lib/middleware/test-utils.ts",
        "start": 105,
        "end": 181,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 546
        },
        "endLoc": {
          "line": 181,
          "column": 2,
          "position": 1056
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "} from 'vitest';\nimport { NextRequest, NextResponse } from 'next/server';\n\n/**\n * Default unauthorized state used when no specific state is provided\n */\nconst DEFAULT_AUTH_STATE = {\n  userId: null,\n  isPublicRoute: false\n};\n\n// Type definitions matching Clerk's API\ntype AuthMiddlewareOptions = {\n  publicRoutes?: (string | RegExp)[];\n  ignoredRoutes?: (string | RegExp)[];\n  afterAuth: (\n    auth: { userId: string | null; isPublicRoute: boolean },\n    req: NextRequest,\n    evt: { nextUrl: URL }\n  ) => NextResponse | Promise<NextResponse> | null | undefined | void;\n};\n\ntype AuthMiddlewareFunction = (\n  options: AuthMiddlewareOptions\n) => (\n  req: NextRequest\n) => Promise<NextResponse | null | undefined | void>;\n\ntype RedirectToSignInFunction = (\n  options?: { returnBackUrl?: string }\n) => NextResponse;\n\n// Create properly typed mock functions using MockInstance",
      "tokens": 0,
      "firstFile": {
        "name": "docs/middleware-mock-investigation/improved-solution.ts",
        "start": 6,
        "end": 38,
        "startLoc": {
          "line": 6,
          "column": 2,
          "position": 14
        },
        "endLoc": {
          "line": 38,
          "column": 59,
          "position": 268
        }
      },
      "secondFile": {
        "name": "docs/middleware-mock-investigation/nextjs-mock-solution.ts",
        "start": 10,
        "end": 42,
        "startLoc": {
          "line": 10,
          "column": 2,
          "position": 10
        },
        "endLoc": {
          "line": 42,
          "column": 40,
          "position": 264
        }
      }
    },
    {
      "format": "typescript",
      "lines": 48,
      "fragment": ";\n\nexport const SignedIn = vi.fn();\nexport const SignedOut = vi.fn();\nexport const useAuth = vi.fn();\nexport const useUser = vi.fn();\nexport const ClerkProvider = vi.fn();\n\n// Set the default implementation for authMiddleware\nauthMiddleware.mockImplementation((options: AuthMiddlewareOptions) => {\n  return async (req: NextRequest) => {\n    // Default implementation - should be overridden in specific tests\n    // Get auth state from headers for backward compatibility with existing tests\n    const userId = req.headers.get('x-auth-user-id');\n    const isPublicRouteHeader = req.headers.get('x-is-public-route');\n    const isPublicRoute = isPublicRouteHeader === 'true' || \n      (options.publicRoutes && Array.isArray(options.publicRoutes) && \n        options.publicRoutes.some((route: string | RegExp) => {\n          if (typeof route === 'string') {\n            return req.nextUrl.pathname.startsWith(route);\n          }\n          return route.test(req.nextUrl.pathname);\n        }));\n    \n    // Build auth state from headers or use default\n    const authState = userId || isPublicRouteHeader\n      ? { userId, isPublicRoute }\n      : DEFAULT_AUTH_STATE;\n    \n    // Call the afterAuth handler with the auth state\n    return options.afterAuth(\n      authState,\n      req,\n      { nextUrl: req.nextUrl }\n    );\n  };\n});\n\n// Set the default implementation for redirectToSignIn\nredirectToSignIn.mockImplementation((options) => {\n  const redirectUrl = new URL('/sign-in', options?.returnBackUrl || 'http://localhost');\n  const response = NextResponse.redirect(redirectUrl);\n  \n  // Ensure the status is 307 for Next.js 15.3.1 compatibility\n  Object.defineProperty(response, 'status', { value: 307 });\n  \n  return response;\n});",
      "tokens": 0,
      "firstFile": {
        "name": "docs/middleware-mock-investigation/improved-solution.ts",
        "start": 47,
        "end": 94,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 368
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 805
        }
      },
      "secondFile": {
        "name": "docs/middleware-mock-investigation/nextjs-mock-solution.ts",
        "start": 44,
        "end": 90,
        "startLoc": {
          "line": 44,
          "column": 3,
          "position": 328
        },
        "endLoc": {
          "line": 90,
          "column": 2,
          "position": 764
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ", async () => {\n    const config = createMockConfig();\n    \n    // Configure auth middleware with unauthorized state\n    const unauthorizedState = createMockAuthState(null, false);\n    typedAuthMiddleware.mockImplementationOnce((options: any) => {\n      return async (req: NextRequest) => {\n        return options.afterAuth(unauthorizedState, req, { nextUrl: req.nextUrl });\n      };\n    });\n    \n    // Create mock redirect response",
      "tokens": 0,
      "firstFile": {
        "name": "docs/middleware-mock-investigation/factory-test-solution.ts",
        "start": 118,
        "end": 129,
        "startLoc": {
          "line": 118,
          "column": 58,
          "position": 933
        },
        "endLoc": {
          "line": 129,
          "column": 33,
          "position": 1047
        }
      },
      "secondFile": {
        "name": "docs/middleware-mock-investigation/factory-test-solution.ts",
        "start": 90,
        "end": 101,
        "startLoc": {
          "line": 90,
          "column": 54,
          "position": 648
        },
        "endLoc": {
          "line": 101,
          "column": 6,
          "position": 762
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ".map((session) => (\n        <Card key={session.id} className=\"overflow-hidden\">\n          <CardContent className=\"p-0\">\n            <div className=\"flex items-center p-6\">\n              <div className=\"flex-grow\">\n                <h4 className=\"font-medium text-base\">{session.title}</h4>\n                <p className=\"text-muted-foreground text-sm mt-1\">{session.description}</p>\n                \n                <div className=\"flex mt-3\">\n                  <div className=\"flex items-center text-sm text-muted-foreground\">\n                    <Clock className=\"h-4 w-4 mr-1\" />\n                    {session.duration",
      "tokens": 0,
      "firstFile": {
        "name": "components/scheduling/session-type-list.tsx",
        "start": 42,
        "end": 53,
        "startLoc": {
          "line": 42,
          "column": 9,
          "position": 288
        },
        "endLoc": {
          "line": 53,
          "column": 9,
          "position": 429
        }
      },
      "secondFile": {
        "name": "components/scheduling/calendly/calendly-session-type-list.tsx",
        "start": 136,
        "end": 147,
        "startLoc": {
          "line": 136,
          "column": 13,
          "position": 1060
        },
        "endLoc": {
          "line": 147,
          "column": 16,
          "position": 1201
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "{\n        baseTheme: theme === \"dark\" ? dark : undefined,\n        elements: {\n          formButtonPrimary:\n            \"bg-primary hover:bg-primary/90 text-primary-foreground\",\n          card: \"bg-background border border-border shadow-sm\",\n          formButtonReset: \"text-muted-foreground hover:text-foreground\",\n          footerActionLink: \"text-primary hover:text-primary/90\",\n          headerTitle: \"text-foreground\",\n          headerSubtitle: \"text-muted-foreground\",\n          socialButtonsBlockButton:\n            \"border border-border hover:bg-muted text-foreground\",\n          formFieldLabel: \"text-foreground\",\n          formFieldInput:\n            \"bg-background border border-input text-foreground rounded-md\",\n          identityPreview: \"bg-muted-foreground/20\",\n          dividerLine: \"bg-border\",\n          dividerText: \"text-muted-foreground\",\n        },\n      }}",
      "tokens": 0,
      "firstFile": {
        "name": "components/providers/enhanced-clerk-provider.tsx",
        "start": 105,
        "end": 124,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 812
        },
        "endLoc": {
          "line": 124,
          "column": 2,
          "position": 932
        }
      },
      "secondFile": {
        "name": "app/(auth)/sign-up/[[...sign-up]]/page.tsx",
        "start": 31,
        "end": 50,
        "startLoc": {
          "line": 31,
          "column": 2,
          "position": 238
        },
        "endLoc": {
          "line": 50,
          "column": 2,
          "position": 358
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "} />\n          </motion.div>\n        ))}\n        \n        {/* Add project card for owners */}\n        {isOwner && (\n          <motion.div\n            initial={shouldReduceMotion ? { opacity: 0 } : { opacity: 0, y: 20 }}\n            animate={shouldReduceMotion ? { opacity: 1 } : { opacity: 1, y: 0 }}\n            transition={{ \n              duration: 0.4, \n              delay: shouldReduceMotion ? 0 : displayProjects",
      "tokens": 0,
      "firstFile": {
        "name": "components/profile/portfolio-showcase.tsx",
        "start": 92,
        "end": 103,
        "startLoc": {
          "line": 92,
          "column": 8,
          "position": 757
        },
        "endLoc": {
          "line": 103,
          "column": 17,
          "position": 867
        }
      },
      "secondFile": {
        "name": "components/profile/portfolio-showcase.tsx",
        "start": 83,
        "end": 88,
        "startLoc": {
          "line": 83,
          "column": 3,
          "position": 655
        },
        "endLoc": {
          "line": 88,
          "column": 8,
          "position": 734
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ")}>View All Projects</Button>\n        </div>\n      ) : gridView ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {filteredProjects.map((project, index) => (\n            <motion.div\n              key={project.id}\n              initial={shouldReduceMotion ? { opacity: 0 } : { opacity: 0, y: 20 }}\n              animate={shouldReduceMotion ? { opacity: 1 } : { opacity: 1, y: 0 }}\n              transition={{ \n                duration",
      "tokens": 0,
      "firstFile": {
        "name": "components/profile/portfolio-gallery.tsx",
        "start": 127,
        "end": 137,
        "startLoc": {
          "line": 127,
          "column": 5,
          "position": 961
        },
        "endLoc": {
          "line": 137,
          "column": 25,
          "position": 1093
        }
      },
      "secondFile": {
        "name": "components/profile/portfolio-showcase.tsx",
        "start": 79,
        "end": 87,
        "startLoc": {
          "line": 79,
          "column": 11,
          "position": 613
        },
        "endLoc": {
          "line": 87,
          "column": 23,
          "position": 721
        }
      }
    },
    {
      "format": "javascript",
      "lines": 33,
      "fragment": "}\n              />\n            </motion.div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"space-y-6\">\n          {filteredProjects.map((project, index) => (\n            <motion.div\n              key={project.id}\n              initial={shouldReduceMotion ? { opacity: 0 } : { opacity: 0, y: 20 }}\n              animate={shouldReduceMotion ? { opacity: 1 } : { opacity: 1, y: 0 }}\n              transition={{ \n                duration: 0.4, \n                delay: shouldReduceMotion ? 0 : index * 0.1,\n                ease: \"easeOut\" \n              }}\n            >\n              <ProjectListItem \n                project={project}\n                validationTier={validationTier}\n                onClick={() => setSelectedProject(project)}\n                isOwner={isOwner}\n                onEdit={onEdit ? () => onEdit(project.id) : undefined}\n                onDelete={onDelete ? () => onDelete(project.id) : undefined}\n              />\n            </motion.div>\n          ))}\n        </div>\n      )}\n      \n      {/* Project Detail Dialog */}\n      <Dialog open={!",
      "tokens": 0,
      "firstFile": {
        "name": "components/profile/portfolio-gallery.tsx",
        "start": 148,
        "end": 180,
        "startLoc": {
          "line": 148,
          "column": 11,
          "position": 1199
        },
        "endLoc": {
          "line": 180,
          "column": 2,
          "position": 1472
        }
      },
      "secondFile": {
        "name": "components/profile/portfolio-showcase.tsx",
        "start": 79,
        "end": 157,
        "startLoc": {
          "line": 79,
          "column": 2,
          "position": 614
        },
        "endLoc": {
          "line": 157,
          "column": 8,
          "position": 1260
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "</>\n        ) : (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-muted\">\n            <span className=\"text-lg font-medium\">{project.title}</span>\n          </div>\n        )}\n      </div>\n      \n      <CardHeader className=\"pb-2\">\n        <CardTitle className=\"line-clamp-1\">{project.title}</CardTitle>\n        <CardDescription className=\"line-clamp-2\">{project.description}</CardDescription>\n      </CardHeader>\n      \n      <CardContent className=\"flex-grow\">\n        {/* Featured Outcome */",
      "tokens": 0,
      "firstFile": {
        "name": "components/profile/portfolio-gallery.tsx",
        "start": 362,
        "end": 376,
        "startLoc": {
          "line": 362,
          "column": 11,
          "position": 2846
        },
        "endLoc": {
          "line": 376,
          "column": 23,
          "position": 2972
        }
      },
      "secondFile": {
        "name": "components/profile/portfolio-showcase.tsx",
        "start": 155,
        "end": 169,
        "startLoc": {
          "line": 155,
          "column": 11,
          "position": 1253
        },
        "endLoc": {
          "line": 169,
          "column": 15,
          "position": 1379
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "].bulletPoints.map((point, i) => (\n                          <li key={i} className=\"flex items-start gap-2\">\n                            <CheckIcon className=\"h-5 w-5 text-green-500 mt-0.5 flex-shrink-0\" />\n                            <span>{point}</span>\n                          </li>\n                        ))}\n                      </ul>\n                      \n                      {profile.expertiseAreas[SpecializationArea.AI_LITERACY",
      "tokens": 0,
      "firstFile": {
        "name": "components/profile/builder-profile.tsx",
        "start": 546,
        "end": 554,
        "startLoc": {
          "line": 546,
          "column": 12,
          "position": 4140
        },
        "endLoc": {
          "line": 554,
          "column": 12,
          "position": 4222
        }
      },
      "secondFile": {
        "name": "components/profile/builder-profile.tsx",
        "start": 508,
        "end": 516,
        "startLoc": {
          "line": 508,
          "column": 18,
          "position": 3755
        },
        "endLoc": {
          "line": 516,
          "column": 18,
          "position": 3837
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "].bulletPoints.map((point, i) => (\n                          <li key={i} className=\"flex items-start gap-2\">\n                            <CheckIcon className=\"h-5 w-5 text-green-500 mt-0.5 flex-shrink-0\" />\n                            <span>{point}</span>\n                          </li>\n                        ))}\n                      </ul>\n                      \n                      {profile.expertiseAreas[SpecializationArea.BUILDING_WITH_AI",
      "tokens": 0,
      "firstFile": {
        "name": "components/profile/builder-profile.tsx",
        "start": 584,
        "end": 592,
        "startLoc": {
          "line": 584,
          "column": 17,
          "position": 4525
        },
        "endLoc": {
          "line": 592,
          "column": 17,
          "position": 4607
        }
      },
      "secondFile": {
        "name": "components/profile/builder-profile.tsx",
        "start": 508,
        "end": 516,
        "startLoc": {
          "line": 508,
          "column": 18,
          "position": 3755
        },
        "endLoc": {
          "line": 516,
          "column": 18,
          "position": 3837
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "].bulletPoints.map((point, i) => (\n                          <li key={i} className=\"flex items-start gap-2\">\n                            <CheckIcon className=\"h-5 w-5 text-green-500 mt-0.5 flex-shrink-0\" />\n                            <span>{point}</span>\n                          </li>\n                        ))}\n                      </ul>\n                      \n                      {profile.expertiseAreas[SpecializationArea.BUSINESS_VALUE",
      "tokens": 0,
      "firstFile": {
        "name": "components/profile/builder-profile.tsx",
        "start": 622,
        "end": 630,
        "startLoc": {
          "line": 622,
          "column": 15,
          "position": 4910
        },
        "endLoc": {
          "line": 630,
          "column": 15,
          "position": 4992
        }
      },
      "secondFile": {
        "name": "components/profile/builder-profile.tsx",
        "start": 508,
        "end": 516,
        "startLoc": {
          "line": 508,
          "column": 18,
          "position": 3755
        },
        "endLoc": {
          "line": 516,
          "column": 18,
          "position": 3837
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "</DialogDescription>\n          </DialogHeader>\n          \n          <DialogFooter className=\"flex space-x-2 pt-4\">\n            <Button variant=\"outline\" onClick={() => setShowAuthDialog(false)}>\n              Cancel\n            </Button>\n            <Button onClick={handleSignIn}>\n              Sign In\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "components/profile/builder-profile-client-wrapper.tsx",
        "start": 102,
        "end": 117,
        "startLoc": {
          "line": 102,
          "column": 13,
          "position": 738
        },
        "endLoc": {
          "line": 117,
          "column": 2,
          "position": 838
        }
      },
      "secondFile": {
        "name": "components/profile/ui/session-booking-card.tsx",
        "start": 184,
        "end": 199,
        "startLoc": {
          "line": 184,
          "column": 13,
          "position": 1594
        },
        "endLoc": {
          "line": 199,
          "column": 2,
          "position": 1694
        }
      }
    },
    {
      "format": "javascript",
      "lines": 10,
      "fragment": ".id}\n            initial={shouldReduceMotion ? { opacity: 0 } : { opacity: 0, y: 20 }}\n            animate={shouldReduceMotion ? { opacity: 1 } : { opacity: 1, y: 0 }}\n            transition={{ \n              duration: 0.4, \n              delay: shouldReduceMotion ? 0 : index * 0.1,\n              ease: \"easeOut\" \n            }}\n          >\n            <AppCard app={app",
      "tokens": 0,
      "firstFile": {
        "name": "components/profile/app-showcase.tsx",
        "start": 87,
        "end": 96,
        "startLoc": {
          "line": 87,
          "column": 4,
          "position": 655
        },
        "endLoc": {
          "line": 96,
          "column": 4,
          "position": 758
        }
      },
      "secondFile": {
        "name": "components/profile/portfolio-showcase.tsx",
        "start": 83,
        "end": 92,
        "startLoc": {
          "line": 83,
          "column": 8,
          "position": 653
        },
        "endLoc": {
          "line": 92,
          "column": 8,
          "position": 756
        }
      }
    },
    {
      "format": "javascript",
      "lines": 12,
      "fragment": "} />\n          </motion.div>\n        ))}\n        \n        {/* Add app card for owners */}\n        {isOwner && onAddApp && (\n          <motion.div\n            initial={shouldReduceMotion ? { opacity: 0 } : { opacity: 0, y: 20 }}\n            animate={shouldReduceMotion ? { opacity: 1 } : { opacity: 1, y: 0 }}\n            transition={{ \n              duration: 0.4, \n              delay: shouldReduceMotion ? 0 : displayApps",
      "tokens": 0,
      "firstFile": {
        "name": "components/profile/app-showcase.tsx",
        "start": 96,
        "end": 107,
        "startLoc": {
          "line": 96,
          "column": 4,
          "position": 759
        },
        "endLoc": {
          "line": 107,
          "column": 13,
          "position": 873
        }
      },
      "secondFile": {
        "name": "components/profile/portfolio-showcase.tsx",
        "start": 83,
        "end": 88,
        "startLoc": {
          "line": 83,
          "column": 3,
          "position": 655
        },
        "endLoc": {
          "line": 88,
          "column": 8,
          "position": 734
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "&& (\n          <motion.div\n            initial={shouldReduceMotion ? { opacity: 0 } : { opacity: 0, y: 20 }}\n            animate={shouldReduceMotion ? { opacity: 1 } : { opacity: 1, y: 0 }}\n            transition={{ \n              duration: 0.4, \n              delay: shouldReduceMotion ? 0 : displayApps.length * 0.1,\n              ease: \"easeOut\" \n            }}\n          >\n            <Card className=\"h-full border border-dashed flex flex-col justify-center items-center p-8 hover:border-primary/50 transition-colors duration-200 cursor-pointer\" onClick={onAddApp}>\n              <div className=\"rounded-full bg-primary/10 p-4 mb-4\">\n                <PlusIcon className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-medium\">Add New App",
      "tokens": 0,
      "firstFile": {
        "name": "components/profile/app-showcase.tsx",
        "start": 101,
        "end": 115,
        "startLoc": {
          "line": 101,
          "column": 2,
          "position": 788
        },
        "endLoc": {
          "line": 115,
          "column": 4,
          "position": 949
        }
      },
      "secondFile": {
        "name": "components/profile/portfolio-showcase.tsx",
        "start": 97,
        "end": 111,
        "startLoc": {
          "line": 97,
          "column": 2,
          "position": 782
        },
        "endLoc": {
          "line": 111,
          "column": 8,
          "position": 943
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ".imageUrl ? (\n          <>\n            <div className={cn(\n              \"absolute inset-0 bg-muted/80 backdrop-blur-sm transition-opacity duration-300\",\n              imageLoaded ? \"opacity-0\" : \"opacity-100\"\n            )} />\n            <Image\n              src={app.imageUrl}\n              alt={app.title}\n              fill\n              className=\"object-cover\"\n              onLoad={() => setImageLoaded(true)}\n            />\n          </>\n        ) : (\n          <div className=\"absolute inset-0 flex items-center justify-center bg-muted\">\n            <span className=\"text-lg font-bold",
      "tokens": 0,
      "firstFile": {
        "name": "components/profile/app-showcase.tsx",
        "start": 162,
        "end": 178,
        "startLoc": {
          "line": 162,
          "column": 4,
          "position": 1257
        },
        "endLoc": {
          "line": 178,
          "column": 18,
          "position": 1368
        }
      },
      "secondFile": {
        "name": "components/profile/portfolio-showcase.tsx",
        "start": 142,
        "end": 158,
        "startLoc": {
          "line": 142,
          "column": 8,
          "position": 1171
        },
        "endLoc": {
          "line": 158,
          "column": 20,
          "position": 1282
        }
      }
    },
    {
      "format": "javascript",
      "lines": 39,
      "fragment": "? \"rotate-180\" : \"\")} />\n              </button>\n              <AnimatePresence>\n                {aboutDropdownOpen && (\n                  <motion.div\n                    initial={shouldReduceMotion ? { opacity: 1, y: 0 } : { opacity: 0, y: -10 }}\n                    animate={shouldReduceMotion ? { opacity: 1, y: 0 } : { opacity: 1, y: 0 }}\n                    exit={shouldReduceMotion ? { opacity: 0, y: 0 } : { opacity: 0, y: -10 }}\n                    transition={{ duration: 0.15 }}\n                    className=\"absolute left-0 mt-1 w-64 rounded-md bg-white dark:bg-slate-900 border border-slate-200 dark:border-slate-700 shadow-lg overflow-hidden z-50\"\n                  >\n                    <div className=\"py-1\">\n                      {navigationItems.aboutItems.map((item) => (\n                        <Link\n                          key={item.id}\n                          href={item.href}\n                          className={cn(\n                            \"block px-4 py-2 text-sm hover:bg-slate-100 dark:hover:bg-slate-800\",\n                            pathname === item.href ? \"bg-slate-100 dark:bg-slate-800\" : \"\"\n                          )}\n                        >\n                          <div className=\"font-medium\">{item.label}</div>\n                          <div className=\"text-xs text-slate-500 dark:text-slate-400\">{item.description}</div>\n                        </Link>\n                      ))}\n                    </div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </div>\n          </nav>\n\n          {/* ViewingPreferences and Auth buttons grouped together */}\n          <div className=\"ml-auto flex h-full items-center gap-2\">\n            {/* ViewingPreferences integrated directly into header */}\n            <ViewingPreferences className=\"hidden md:block\" />\n            \n            {isAuthenticated ? (\n              <div ref={userDropdownRef",
      "tokens": 0,
      "firstFile": {
        "name": "components/platform/platform-header.tsx",
        "start": 346,
        "end": 384,
        "startLoc": {
          "line": 346,
          "column": 20,
          "position": 2638
        },
        "endLoc": {
          "line": 384,
          "column": 16,
          "position": 3000
        }
      },
      "secondFile": {
        "name": "components/platform/platform-header.tsx",
        "start": 276,
        "end": 310,
        "startLoc": {
          "line": 276,
          "column": 20,
          "position": 2097
        },
        "endLoc": {
          "line": 310,
          "column": 3,
          "position": 2422
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": "? \"rotate-180\" : \"\")} />\n                </button>\n                <AnimatePresence>\n                  {userDropdownOpen && (\n                    <motion.div\n                      initial={shouldReduceMotion ? { opacity: 1, y: 0 } : { opacity: 0, y: -10 }}\n                      animate={shouldReduceMotion ? { opacity: 1, y: 0 } : { opacity: 1, y: 0 }}\n                      exit={shouldReduceMotion ? { opacity: 0, y: 0 } : { opacity: 0, y: -10 }}\n                      transition={{ duration: 0.15 }}\n                      className=\"absolute right-0 mt-1 w-64 rounded-md bg-white dark:bg-slate-900 border border-slate-200 dark:border-slate-700 shadow-lg overflow-hidden z-50\"\n                    >\n                      <div className=\"px-4 py-3 border-b border-slate-200 dark:border-slate-700\">\n                        <p className=\"text-sm font-medium\">{user?.name || \"User\"}</p>\n                        <p className=\"text-xs text-slate-500 dark:text-slate-400 truncate\">{user?.email}</p>\n                      </div>\n                      <div className=\"py-1\">\n                        {userMenuItems.map((item) => (\n                          <Link\n                            key={item.id}\n                            href={item.href}\n                            className={cn(\n                              ",
      "tokens": 0,
      "firstFile": {
        "name": "components/platform/platform-header.tsx",
        "start": 401,
        "end": 422,
        "startLoc": {
          "line": 401,
          "column": 19,
          "position": 3154
        },
        "endLoc": {
          "line": 422,
          "column": 31,
          "position": 3425
        }
      },
      "secondFile": {
        "name": "components/platform/platform-header.tsx",
        "start": 276,
        "end": 293,
        "startLoc": {
          "line": 276,
          "column": 20,
          "position": 2097
        },
        "endLoc": {
          "line": 293,
          "column": 29,
          "position": 2310
        }
      }
    },
    {
      "format": "javascript",
      "lines": 42,
      "fragment": "}\n                  className=\"border-b border-slate-200 dark:border-slate-700 last:border-none\"\n                >\n                  <div className=\"p-4\">\n                    <ViewingPreferences variant=\"minimal\" />\n                  </div>\n                </motion.li>\n              </motion.ul>\n            </div>\n            \n            {/* I would like to... Section */}\n            <div className=\"mb-6\">\n              <h2 className=\"text-sm font-semibold uppercase tracking-wider text-slate-500 dark:text-slate-400 mb-2 px-2\">I would like to...</h2>\n              <motion.ul\n                className={`flex flex-col ease-in rounded-lg overflow-hidden bg-slate-100/50 dark:bg-slate-800/50`}\n                variants={containerVariants}\n                initial=\"initial\"\n                animate={hamburgerMenuIsOpen ? \"open\" : \"exit\"}\n              >\n                {navigationItems.roleBasedItems.map((item) => (\n                  <motion.li\n                    variants={mobileLinkVar}\n                    key={item.id}\n                    className=\"border-b border-slate-200 dark:border-slate-700 last:border-none\"\n                  >\n                    <Link\n                      className={`hover:bg-slate-200 dark:hover:bg-slate-700 flex w-full flex-col p-4 transition-colors ${pathname === item.href ? \"bg-slate-200 dark:bg-slate-700\" : \"\"}`}\n                      href={item.href}\n                    >\n                      <span className=\"font-medium\">{item.label}</span>\n                      <span className=\"text-xs mt-1 text-slate-500 dark:text-slate-400\">{item.description}</span>\n                    </Link>\n                  </motion.li>\n                ))}\n              </motion.ul>\n            </div>\n            \n            {/* About Section */}\n            <div>\n              <h2 className=\"text-sm font-semibold uppercase tracking-wider text-slate-500 dark:text-slate-400 mb-2 px-2\">About</h2>\n              <motion.ul\n                className={`flex flex-col ease-in rounded-lg overflow-hidden bg-slate-100/50 dark:bg-slate-800/50`",
      "tokens": 0,
      "firstFile": {
        "name": "components/platform/platform-header.tsx",
        "start": 600,
        "end": 641,
        "startLoc": {
          "line": 600,
          "column": 14,
          "position": 4669
        },
        "endLoc": {
          "line": 641,
          "column": 88,
          "position": 4973
        }
      },
      "secondFile": {
        "name": "components/platform/platform-header.tsx",
        "start": 502,
        "end": 542,
        "startLoc": {
          "line": 502,
          "column": 2,
          "position": 3948
        },
        "endLoc": {
          "line": 542,
          "column": 14,
          "position": 4295
        }
      }
    },
    {
      "format": "javascript",
      "lines": 42,
      "fragment": "}\n                    >\n                      <span className=\"font-medium\">{item.label}</span>\n                      <span className=\"text-xs mt-1 text-slate-500 dark:text-slate-400\">{item.description}</span>\n                    </Link>\n                  </motion.li>\n                ))}\n              </motion.ul>\n            </div>\n            \n            {/* About Section */}\n            <div>\n              <h2 className=\"text-sm font-semibold uppercase tracking-wider text-slate-500 dark:text-slate-400 mb-2 px-2\">About</h2>\n              <motion.ul\n                className={`flex flex-col ease-in rounded-lg overflow-hidden bg-slate-100/50 dark:bg-slate-800/50`}\n                variants={containerVariants}\n                initial=\"initial\"\n                animate={hamburgerMenuIsOpen ? \"open\" : \"exit\"}\n              >\n                {navigationItems.aboutItems.map((item) => (\n                  <motion.li\n                    variants={mobileLinkVar}\n                    key={item.id}\n                    className=\"border-b border-slate-200 dark:border-slate-700 last:border-none\"\n                  >\n                    <Link\n                      className={`hover:bg-slate-200 dark:hover:bg-slate-700 flex w-full flex-col p-4 transition-colors ${pathname === item.href ? \"bg-slate-200 dark:bg-slate-700\" : \"\"}`}\n                      href={item.href}\n                    >\n                      <span className=\"font-medium\">{item.label}</span>\n                      <span className=\"text-xs mt-1 text-slate-500 dark:text-slate-400\">{item.description}</span>\n                    </Link>\n                  </motion.li>\n                ))}\n              </motion.ul>\n            </div>\n            \n            {/* Login/Signup buttons for non-authenticated users */}\n            {!isAuthenticated && (\n              <div className=\"mt-6 flex flex-col space-y-4\">\n                <Link\n                  className={cn",
      "tokens": 0,
      "firstFile": {
        "name": "components/platform/platform-header.tsx",
        "start": 627,
        "end": 668,
        "startLoc": {
          "line": 627,
          "column": 5,
          "position": 4872
        },
        "endLoc": {
          "line": 668,
          "column": 3,
          "position": 5177
        }
      },
      "secondFile": {
        "name": "components/platform/platform-header.tsx",
        "start": 502,
        "end": 542,
        "startLoc": {
          "line": 502,
          "column": 2,
          "position": 3948
        },
        "endLoc": {
          "line": 542,
          "column": 14,
          "position": 4295
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ".map((item) => (\n                        <Link\n                          key={item.id}\n                          href={item.href}\n                          className={cn(\n                            \"block px-4 py-2 text-sm hover:bg-slate-100 dark:hover:bg-slate-800\",\n                            pathname === item.href ? \"bg-slate-100 dark:bg-slate-800\" : \"\"\n                          )}\n                        >\n                          <div className=\"font-medium\">{item.label}</div>\n                          <div className=\"text-xs text-slate-500 dark:text-slate-400\">{item.description}</div>\n                        </Link>\n                      ))}\n                    </div>\n                  </motion.div>\n                )}\n              </AnimatePresence>\n            </div>\n          </",
      "tokens": 0,
      "firstFile": {
        "name": "components/platform/platform-header.tsx",
        "start": 358,
        "end": 376,
        "startLoc": {
          "line": 358,
          "column": 11,
          "position": 2815
        },
        "endLoc": {
          "line": 376,
          "column": 3,
          "position": 2945
        }
      },
      "secondFile": {
        "name": "components/platform/platform-header.tsx",
        "start": 288,
        "end": 307,
        "startLoc": {
          "line": 288,
          "column": 15,
          "position": 2274
        },
        "endLoc": {
          "line": 307,
          "column": 2,
          "position": 2405
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ".map((item) => (\n                  <motion.li\n                    variants={mobileLinkVar}\n                    key={item.id}\n                    className=\"border-b border-slate-200 dark:border-slate-700 last:border-none\"\n                  >\n                    <Link\n                      className={`hover:bg-slate-200 dark:hover:bg-slate-700 flex w-full flex-col p-4 transition-colors ${pathname === item.href ? \"bg-slate-200 dark:bg-slate-700\" : \"\"}`}\n                      href={item.href}\n                    >\n                      <span className=\"font-medium\">{item.label}</span>\n                      <span className=\"text-xs mt-1 text-slate-500 dark:text-slate-400\">{item.description}</span>\n                    </Link>\n                  </motion.li>\n                ))}\n              </motion.ul>\n            </div>\n            \n            {/* Login/Signup buttons for non-authenticated users */",
      "tokens": 0,
      "firstFile": {
        "name": "components/platform/platform-header.tsx",
        "start": 646,
        "end": 664,
        "startLoc": {
          "line": 646,
          "column": 11,
          "position": 5008
        },
        "endLoc": {
          "line": 664,
          "column": 55,
          "position": 5147
        }
      },
      "secondFile": {
        "name": "components/platform/platform-header.tsx",
        "start": 619,
        "end": 637,
        "startLoc": {
          "line": 619,
          "column": 15,
          "position": 4804
        },
        "endLoc": {
          "line": 637,
          "column": 20,
          "position": 4943
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "[size]} rounded-full border border-muted overflow-hidden bg-muted`,\n      className\n    )}>\n      {hasValidImageSrc ? (\n        // Image with fallback rendering\n        <Image\n          src={src as string}\n          alt={alt}\n          fill\n          className=\"object-cover\"\n          onError={(e) => {\n            // On error, hide the image element\n            const imgElement = e.currentTarget as HTMLImageElement;\n            imgElement.style.display = 'none';\n            ",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketplace/fixed-builder-image.tsx",
        "start": 44,
        "end": 58,
        "startLoc": {
          "line": 44,
          "column": 8,
          "position": 286
        },
        "endLoc": {
          "line": 58,
          "column": 13,
          "position": 366
        }
      },
      "secondFile": {
        "name": "components/marketplace/components/builder-image/builder-image.tsx",
        "start": 46,
        "end": 60,
        "startLoc": {
          "line": 46,
          "column": 12,
          "position": 239
        },
        "endLoc": {
          "line": 60,
          "column": 11,
          "position": 319
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "{Array.from({ length: count }).map((_, index) => (\n        <div \n          key={index}\n          className=\"rounded-lg border bg-card text-card-foreground shadow-sm animate-pulse\"\n        >\n          <div className=\"h-48 bg-muted rounded-t-lg\" />\n          <div className=\"p-6 space-y-4\">\n            <div className=\"h-4 bg-muted rounded w-3/4\" />\n            <div className=\"h-3 bg-muted rounded w-1/2\" />\n            <div className=\"h-3 bg-muted rounded w-5/6\" />\n          </div>\n        </div>\n      ))}\n    </",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketplace/builder-list-client.tsx",
        "start": 61,
        "end": 74,
        "startLoc": {
          "line": 61,
          "column": 7,
          "position": 385
        },
        "endLoc": {
          "line": 74,
          "column": 3,
          "position": 506
        }
      },
      "secondFile": {
        "name": "components/marketplace/builder-list.tsx",
        "start": 72,
        "end": 85,
        "startLoc": {
          "line": 72,
          "column": 7,
          "position": 417
        },
        "endLoc": {
          "line": 85,
          "column": 2,
          "position": 538
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "}</span>\n                        <button className=\"ml-2 text-secondary-foreground/70 hover:text-secondary-foreground\">\n                          <X className=\"h-3 w-3\" />\n                        </button>\n                      </div>\n                    ))}\n                    <button className=\"flex items-center rounded-full border border-dashed px-3 py-1 text-sm text-muted-foreground hover:border-primary hover:text-primary\">\n                      <Plus className=\"mr-1 h-3 w-3\" />\n                      Add Domain",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketplace/builder-dashboard.tsx",
        "start": 465,
        "end": 473,
        "startLoc": {
          "line": 465,
          "column": 7,
          "position": 3641
        },
        "endLoc": {
          "line": 473,
          "column": 7,
          "position": 3710
        }
      },
      "secondFile": {
        "name": "components/marketplace/builder-dashboard.tsx",
        "start": 429,
        "end": 437,
        "startLoc": {
          "line": 429,
          "column": 6,
          "position": 3305
        },
        "endLoc": {
          "line": 437,
          "column": 6,
          "position": 3374
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "// Determine the validation tier string\n  const getTierString = (tier: number): 'basic' | 'verified' | 'expert' => {\n    switch (tier) {\n      case 3:\n        return 'expert';\n      case 2:\n        return 'verified';\n      case 1:\n      default:\n        return 'basic';\n    }\n  };\n\n  // Format hourly rate with currency symbol\n  const formatHourlyRate = (rate?: number) => {\n    if (!rate) return null;\n    return `$${rate.toFixed(0)}/hr`;\n  };\n\n  // Get tier string for display\n  const tierString = getTierString(builder.validationTier);\n\n  return (\n    <div",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketplace/builder-card.tsx",
        "start": 27,
        "end": 50,
        "startLoc": {
          "line": 27,
          "column": 3,
          "position": 198
        },
        "endLoc": {
          "line": 50,
          "column": 4,
          "position": 367
        }
      },
      "secondFile": {
        "name": "components/marketplace/components/builder-card/builder-card.tsx",
        "start": 30,
        "end": 53,
        "startLoc": {
          "line": 30,
          "column": 3,
          "position": 180
        },
        "endLoc": {
          "line": 53,
          "column": 25,
          "position": 349
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "</div>\n            <p className=\"text-sm text-muted-foreground\">\n              {builder.headline || builder.tagline || formatHourlyRate(builder.hourlyRate)}\n            </p>\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"flex-grow\">\n        <p className=\"text-sm line-clamp-3 mb-3\">\n          {builder.bio || \"This builder hasn't added a bio yet.\"}\n        </p>\n        \n        {/* Skills */}\n        <div className=\"flex flex-wrap gap-1.5 mt-2\">\n          {(builder.topSkills?.length > 0 ? builder.topSkills : builder.skills)\n            ?.slice(0, 5).map((skill: string)",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketplace/builder-card.tsx",
        "start": 91,
        "end": 106,
        "startLoc": {
          "line": 91,
          "column": 13,
          "position": 703
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 861
        }
      },
      "secondFile": {
        "name": "components/marketplace/components/builder-card/builder-card.tsx",
        "start": 69,
        "end": 84,
        "startLoc": {
          "line": 69,
          "column": 15,
          "position": 479
        },
        "endLoc": {
          "line": 84,
          "column": 2,
          "position": 637
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ">\n              {skill}\n            </span>\n          ))}\n          {(builder.skills?.length || 0) > 5 && (\n            <span className=\"px-2 py-0.5 bg-muted text-xs rounded-full\">\n              +{(builder.skills?.length || 0) - 5} more\n            </span>\n          )}\n        </div>\n\n        {/* Availability indicator */}\n        {builder.availability && (\n          <div className=\"mt-3 flex items-center\">\n            <span \n              ",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketplace/builder-card.tsx",
        "start": 110,
        "end": 125,
        "startLoc": {
          "line": 110,
          "column": 13,
          "position": 883
        },
        "endLoc": {
          "line": 125,
          "column": 15,
          "position": 1001
        }
      },
      "secondFile": {
        "name": "components/marketplace/components/builder-card/builder-card.tsx",
        "start": 88,
        "end": 103,
        "startLoc": {
          "line": 88,
          "column": 15,
          "position": 672
        },
        "endLoc": {
          "line": 103,
          "column": 17,
          "position": 790
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "icon || (\n          <svg className=\"w-8 h-8 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n          </svg>\n        )}\n      </div>\n      <h3 className=\"text-xl font-semibold mb-2\">\n        {index",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketing/feature-showcase.tsx",
        "start": 71,
        "end": 78,
        "startLoc": {
          "line": 71,
          "column": 2,
          "position": 634
        },
        "endLoc": {
          "line": 78,
          "column": 6,
          "position": 732
        }
      },
      "secondFile": {
        "name": "components/marketing/ui/feature-card.tsx",
        "start": 107,
        "end": 114,
        "startLoc": {
          "line": 107,
          "column": 2,
          "position": 727
        },
        "endLoc": {
          "line": 114,
          "column": 13,
          "position": 825
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "return (\n    <section id={id} className={cn(\"container px-4 sm:px-10 py-20\", className)}>\n      <div className=\"text-center mb-12\">\n        <h2 className=\"text-3xl md:text-4xl font-medium tracking-tighter mb-4\">{title}</h2>\n        <p className=\"text-muted-foreground font-medium max-w-2xl mx-auto\">{subtitle}</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mx-auto\">\n        {features.map((feature, index) => {",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketing/feature-showcase.tsx",
        "start": 161,
        "end": 169,
        "startLoc": {
          "line": 161,
          "column": 3,
          "position": 1386
        },
        "endLoc": {
          "line": 169,
          "column": 2,
          "position": 1489
        }
      },
      "secondFile": {
        "name": "components/marketing/feature-showcase.tsx",
        "start": 139,
        "end": 147,
        "startLoc": {
          "line": 139,
          "column": 5,
          "position": 1217
        },
        "endLoc": {
          "line": 147,
          "column": 2,
          "position": 1320
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "<div className=\"border-x mx-5 md:mx-10 relative max-w-7xl w-full\">\n          <div className=\"absolute top-0 -left-4 md:-left-14 h-full w-4 md:w-14 text-primary/5 bg-[size:10px_10px] [background-image:repeating-linear-gradient(315deg,currentColor_0_1px,#0000_0_50%)]\"></div>\n          <div className=\"absolute top-0 -right-4 md:-right-14 h-full w-4 md:w-14 text-primary/5 bg-[size:10px_10px] [background-image:repeating-linear-gradient(315deg,currentColor_0_1px,#0000_0_50%)]\"></div>\n\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-medium tracking-tighter mb-4 text-balance\">\n              {title}\n            </h2>\n            <p className=\"text-muted-foreground text-center text-balance font-medium max-w-2xl mx-auto\">\n              {subtitle}\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 overflow-hidden\">\n            {features.map((feature,",
      "tokens": 0,
      "firstFile": {
        "name": "components/marketing/feature-grid.tsx",
        "start": 45,
        "end": 59,
        "startLoc": {
          "line": 45,
          "column": 9,
          "position": 313
        },
        "endLoc": {
          "line": 59,
          "column": 2,
          "position": 430
        }
      },
      "secondFile": {
        "name": "components/marketing/feature-showcase.tsx",
        "start": 95,
        "end": 109,
        "startLoc": {
          "line": 95,
          "column": 9,
          "position": 881
        },
        "endLoc": {
          "line": 109,
          "column": 2,
          "position": 998
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "({\n  words,\n  duration = 2500,\n  motionProps = {\n    initial: { opacity: 0, y: -50 },\n    animate: { opacity: 1, y: 0 },\n    exit: { opacity: 0, y: 50 },\n    transition: { duration: 0.25, ease: \"easeOut\" },\n  },\n  className,\n}: WordRotateWithFontsProps",
      "tokens": 0,
      "firstFile": {
        "name": "components/magicui/word-rotate-with-fonts.tsx",
        "start": 20,
        "end": 30,
        "startLoc": {
          "line": 20,
          "column": 20,
          "position": 138
        },
        "endLoc": {
          "line": 30,
          "column": 25,
          "position": 252
        }
      },
      "secondFile": {
        "name": "components/magicui/word-rotate.tsx",
        "start": 15,
        "end": 25,
        "startLoc": {
          "line": 15,
          "column": 11,
          "position": 101
        },
        "endLoc": {
          "line": 25,
          "column": 16,
          "position": 215
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ", opacity: 0 },\n      show: {\n        scale: 1,\n        opacity: 1,\n        transition: {\n          duration: 0.3,\n          scale: {\n            type: \"spring\",\n            damping: 15,\n            stiffness: 300,\n          },\n        },\n      },\n      exit: {\n        scale: 1.5",
      "tokens": 0,
      "firstFile": {
        "name": "components/magicui/text-animate.tsx",
        "start": 278,
        "end": 292,
        "startLoc": {
          "line": 278,
          "column": 4,
          "position": 1816
        },
        "endLoc": {
          "line": 292,
          "column": 4,
          "position": 1908
        }
      },
      "secondFile": {
        "name": "components/magicui/text-animate.tsx",
        "start": 255,
        "end": 269,
        "startLoc": {
          "line": 255,
          "column": 4,
          "position": 1659
        },
        "endLoc": {
          "line": 269,
          "column": 4,
          "position": 1751
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "const MotionComponent = motion.create(Component, {\n    forwardMotionProps: true,\n  });\n\n  const [displayedText, setDisplayedText] = useState<string>(\"\");\n  const [started, setStarted] = useState(false);\n  const elementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "components/magicui/terminal.tsx",
        "start": 50,
        "end": 59,
        "startLoc": {
          "line": 50,
          "column": 3,
          "position": 369
        },
        "endLoc": {
          "line": 59,
          "column": 6,
          "position": 468
        }
      },
      "secondFile": {
        "name": "components/magicui/typing-animation.tsx",
        "start": 25,
        "end": 34,
        "startLoc": {
          "line": 25,
          "column": 3,
          "position": 179
        },
        "endLoc": {
          "line": 34,
          "column": 3,
          "position": 278
        }
      }
    },
    {
      "format": "tsx",
      "lines": 30,
      "fragment": "]);\n\n  useEffect(() => {\n    if (!started) return;\n\n    let i = 0;\n    const typingEffect = setInterval(() => {\n      if (i < children.length) {\n        setDisplayedText(children.substring(0, i + 1));\n        i++;\n      } else {\n        clearInterval(typingEffect);\n      }\n    }, duration);\n\n    return () => {\n      clearInterval(typingEffect);\n    };\n  }, [children, duration, started]);\n\n  return (\n    <MotionComponent\n      ref={elementRef}\n      className={cn(\"text-sm font-mono tracking-tight\", className)}\n      {...props}\n    >\n      {displayedText}\n    </MotionComponent>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "components/magicui/terminal.tsx",
        "start": 63,
        "end": 92,
        "startLoc": {
          "line": 63,
          "column": 6,
          "position": 518
        },
        "endLoc": {
          "line": 92,
          "column": 2,
          "position": 721
        }
      },
      "secondFile": {
        "name": "components/magicui/typing-animation.tsx",
        "start": 58,
        "end": 90,
        "startLoc": {
          "line": 58,
          "column": 12,
          "position": 476
        },
        "endLoc": {
          "line": 90,
          "column": 2,
          "position": 682
        }
      }
    },
    {
      "format": "tsx",
      "lines": 51,
      "fragment": "const animate = () => {\n    clearContext();\n    circles.current.forEach((circle: Circle, i: number) => {\n      // Handle the alpha value\n      const edge = [\n        circle.x + circle.translateX - circle.size, // distance from left edge\n        canvasSize.current.w - circle.x - circle.translateX - circle.size, // distance from right edge\n        circle.y + circle.translateY - circle.size, // distance from top edge\n        canvasSize.current.h - circle.y - circle.translateY - circle.size, // distance from bottom edge\n      ];\n      const closestEdge = edge.reduce((a, b) => Math.min(a, b));\n      const remapClosestEdge = parseFloat(\n        remapValue(closestEdge, 0, 20, 0, 1).toFixed(2),\n      );\n      if (remapClosestEdge > 1) {\n        circle.alpha += 0.02;\n        if (circle.alpha > circle.targetAlpha) {\n          circle.alpha = circle.targetAlpha;\n        }\n      } else {\n        circle.alpha = circle.targetAlpha * remapClosestEdge;\n      }\n      circle.x += circle.dx + vx;\n      circle.y += circle.dy + vy;\n      circle.translateX +=\n        (mouse.current.x / (staticity / circle.magnetism) - circle.translateX) /\n        ease;\n      circle.translateY +=\n        (mouse.current.y / (staticity / circle.magnetism) - circle.translateY) /\n        ease;\n\n      drawCircle(circle, true);\n\n      // circle gets out of the canvas\n      if (\n        circle.x < -circle.size ||\n        circle.x > canvasSize.current.w + circle.size ||\n        circle.y < -circle.size ||\n        circle.y > canvasSize.current.h + circle.size\n      ) {\n        // remove the circle from the array\n        circles.current.splice(i, 1);\n        // create a new circle\n        const newCircle = circleParams();\n        drawCircle(newCircle);\n      }\n    });\n    rafID.current = window.requestAnimationFrame(animate);\n  };\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "components/magicui/particles.tsx",
        "start": 306,
        "end": 356,
        "startLoc": {
          "line": 306,
          "column": 3,
          "position": 3086
        },
        "endLoc": {
          "line": 356,
          "column": 7,
          "position": 3665
        }
      },
      "secondFile": {
        "name": "components/magicui/particles.tsx",
        "start": 103,
        "end": 153,
        "startLoc": {
          "line": 103,
          "column": 3,
          "position": 927
        },
        "endLoc": {
          "line": 153,
          "column": 10,
          "position": 1506
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "].items?.map((subItem) => (\n                          <Link\n                            key={subItem.title}\n                            href={subItem.href}\n                            onClick={() => setActiveDropdown(null)}\n                            className=\"block px-4 py-3 rounded-md text-sm hover:bg-secondary/30 transition-colors\"\n                          >\n                            <div className=\"font-medium\">{subItem.title}</div>\n                            {subItem.description && (\n                              <div className=\"text-muted-foreground text-xs mt-1\">{subItem.description}</div>\n                            )}\n                          </Link>\n                        ))}\n                      </div>\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </div>\n            </",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/navbar.tsx",
        "start": 260,
        "end": 278,
        "startLoc": {
          "line": 260,
          "column": 2,
          "position": 1955
        },
        "endLoc": {
          "line": 278,
          "column": 3,
          "position": 2099
        }
      },
      "secondFile": {
        "name": "components/landing/navbar.tsx",
        "start": 198,
        "end": 217,
        "startLoc": {
          "line": 198,
          "column": 2,
          "position": 1572
        },
        "endLoc": {
          "line": 217,
          "column": 2,
          "position": 1718
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ">\n              <div className=\"font-medium\">{subItem.title}</div>\n              {subItem.description && (\n                <div className=\"text-muted-foreground text-xs mt-1\">{subItem.description}</div>\n              )}\n            </Link>\n          ))}\n        </div>\n      )",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/navbar.tsx",
        "start": 428,
        "end": 436,
        "startLoc": {
          "line": 428,
          "column": 13,
          "position": 3061
        },
        "endLoc": {
          "line": 436,
          "column": 2,
          "position": 3131
        }
      },
      "secondFile": {
        "name": "components/landing/navbar.tsx",
        "start": 204,
        "end": 212,
        "startLoc": {
          "line": 204,
          "column": 27,
          "position": 1627
        },
        "endLoc": {
          "line": 212,
          "column": 3,
          "position": 1697
        }
      }
    },
    {
      "format": "tsx",
      "lines": 28,
      "fragment": ";\n\n  const { scrollYProgress: scrollYProgress1 } = useScroll({\n    target: feature1Ref,\n    offset: [\"start end\", \"end start\"],\n  });\n\n  const { scrollYProgress: scrollYProgress2 } = useScroll({\n    target: feature2Ref,\n    offset: [\"start end\", \"end start\"],\n  });\n\n  const { scrollYProgress: scrollYProgress3 } = useScroll({\n    target: feature3Ref,\n    offset: [\"start end\", \"end start\"],\n  });\n\n  const y1 = useTransform(scrollYProgress1, [0, 0.3], [150, 0], {\n    ease: easeOutCubic,\n  });\n  const y2 = useTransform(scrollYProgress2, [0.1, 0.4], [200, 0], {\n    ease: easeOutCubic,\n  });\n  const y3 = useTransform(scrollYProgress3, [0.2, 0.5], [250, 0], {\n    ease: easeOutCubic,\n  });\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/feature-scroll.tsx",
        "start": 10,
        "end": 37,
        "startLoc": {
          "line": 10,
          "column": 2,
          "position": 97
        },
        "endLoc": {
          "line": 37,
          "column": 7,
          "position": 357
        }
      },
      "secondFile": {
        "name": "components/marketing/feature-showcase.tsx",
        "start": 40,
        "end": 67,
        "startLoc": {
          "line": 40,
          "column": 2,
          "position": 328
        },
        "endLoc": {
          "line": 67,
          "column": 31,
          "position": 589
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ">\n\n        <motion.div\n          ref={feature2Ref}\n          className=\"bg-card border border-border rounded-lg p-6 shadow-sm flex flex-col items-center text-center\"\n          style={{ y: y2 }}\n        >\n          <div className=\"bg-primary/10 rounded-full p-4 mb-4\">\n            <svg className=\"w-8 h-8 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/feature-scroll.tsx",
        "start": 60,
        "end": 69,
        "startLoc": {
          "line": 60,
          "column": 11,
          "position": 639
        },
        "endLoc": {
          "line": 69,
          "column": 87,
          "position": 741
        }
      },
      "secondFile": {
        "name": "components/landing/feature-scroll.tsx",
        "start": 47,
        "end": 109,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 465
        },
        "endLoc": {
          "line": 109,
          "column": 15,
          "position": 793
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ".</p>\n        </motion.div>\n\n        <motion.div\n          ref={feature3Ref}\n          className=\"bg-card border border-border rounded-lg p-6 shadow-sm flex flex-col items-center text-center\"\n          style={{ y: y3 }}\n        >\n          <div className=\"bg-primary/10 rounded-full p-4 mb-4\">\n            <svg className=\"w-8 h-8 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n          </",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/feature-scroll.tsx",
        "start": 73,
        "end": 85,
        "startLoc": {
          "line": 73,
          "column": 6,
          "position": 806
        },
        "endLoc": {
          "line": 85,
          "column": 3,
          "position": 927
        }
      },
      "secondFile": {
        "name": "components/landing/feature-scroll.tsx",
        "start": 59,
        "end": 77,
        "startLoc": {
          "line": 59,
          "column": 8,
          "position": 631
        },
        "endLoc": {
          "line": 77,
          "column": 2,
          "position": 551
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": "}\n                      stroke=\"white\"\n                      strokeWidth=\"2\"\n                      strokeDasharray=\"20 20\"\n                    />\n                  ))}\n                </g>\n              </svg>\n            </div>\n\n            <div className=\"relative z-10 text-center max-w-3xl mx-auto\">\n              <motion.h2\n                className=\"text-3xl md:text-5xl font-bold tracking-tight text-white mb-6\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.5 }}\n              >\n                {headline}\n              </motion.h2>\n\n              <motion.p\n                className=\"text-lg md:text-xl text-white/80 mb-10\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.5, delay: 0.1 }}\n              >\n                {subheadline}\n              </motion.p>\n\n              <motion.div\n                className=\"flex flex-col sm:flex-row gap-4 justify-center\"\n                initial={{",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/cta-section.tsx",
        "start": 49,
        "end": 82,
        "startLoc": {
          "line": 49,
          "column": 3,
          "position": 336
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 570
        }
      },
      "secondFile": {
        "name": "components/landing/skills-tree-section.tsx",
        "start": 93,
        "end": 120,
        "startLoc": {
          "line": 93,
          "column": 2,
          "position": 615
        },
        "endLoc": {
          "line": 120,
          "column": 6,
          "position": 871
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": " }}\n              >\n                {subheadline}\n              </motion.p>\n\n              <motion.div\n                className=\"flex flex-col sm:flex-row gap-4 justify-center\"\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.5, delay: 0.2",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/cta-section.tsx",
        "start": 75,
        "end": 85,
        "startLoc": {
          "line": 75,
          "column": 4,
          "position": 540
        },
        "endLoc": {
          "line": 85,
          "column": 4,
          "position": 625
        }
      },
      "secondFile": {
        "name": "components/landing/skills-tree-section.tsx",
        "start": 102,
        "end": 111,
        "startLoc": {
          "line": 102,
          "column": 4,
          "position": 705
        },
        "endLoc": {
          "line": 111,
          "column": 4,
          "position": 791
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "({\n  words,\n  duration = 2500,\n  motionProps = {\n    initial: { opacity: 0, y: -50 },\n    animate: { opacity: 1, y: 0 },\n    exit: { opacity: 0, y: 50 },\n    transition: { duration: 0.25, ease: \"easeOut\" },\n  },\n  className,\n}: BrandWordRotateProps",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/brand-word-rotate.tsx",
        "start": 43,
        "end": 53,
        "startLoc": {
          "line": 43,
          "column": 16,
          "position": 279
        },
        "endLoc": {
          "line": 53,
          "column": 21,
          "position": 393
        }
      },
      "secondFile": {
        "name": "components/magicui/word-rotate.tsx",
        "start": 15,
        "end": 25,
        "startLoc": {
          "line": 15,
          "column": 11,
          "position": 101
        },
        "endLoc": {
          "line": 25,
          "column": 16,
          "position": 215
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ") {\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setIndex((prevIndex) => (prevIndex + 1) % words.length);\n    }, duration);\n\n    return",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/brand-word-rotate.tsx",
        "start": 53,
        "end": 61,
        "startLoc": {
          "line": 53,
          "column": 21,
          "position": 394
        },
        "endLoc": {
          "line": 61,
          "column": 7,
          "position": 478
        }
      },
      "secondFile": {
        "name": "components/magicui/word-rotate.tsx",
        "start": 25,
        "end": 33,
        "startLoc": {
          "line": 25,
          "column": 16,
          "position": 216
        },
        "endLoc": {
          "line": 33,
          "column": 32,
          "position": 300
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ">\n      <div className=\"border-x mx-5 md:mx-10 relative max-w-7xl w-full\">\n        <div className=\"absolute top-0 -left-4 md:-left-14 h-full w-4 md:w-14 text-primary/5 bg-[size:10px_10px] [background-image:repeating-linear-gradient(315deg,currentColor_0_1px,#0000_0_50%)]\"></div>\n        <div className=\"absolute top-0 -right-4 md:-right-14 h-full w-4 md:w-14 text-primary/5 bg-[size:10px_10px] [background-image:repeating-linear-gradient(315deg,currentColor_0_1px,#0000_0_50%)]\"></div>\n\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-medium tracking-tighter mb-4 text-balance\">\n            Key",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/bento-section.tsx",
        "start": 57,
        "end": 64,
        "startLoc": {
          "line": 57,
          "column": 5,
          "position": 541
        },
        "endLoc": {
          "line": 64,
          "column": 4,
          "position": 606
        }
      },
      "secondFile": {
        "name": "components/marketing/feature-showcase.tsx",
        "start": 94,
        "end": 101,
        "startLoc": {
          "line": 94,
          "column": 2,
          "position": 878
        },
        "endLoc": {
          "line": 101,
          "column": 2,
          "position": 943
        }
      }
    },
    {
      "format": "javascript",
      "lines": 38,
      "fragment": ")}>\n      <div className=\"container mx-auto px-4\">\n        <div className=\"text-center max-w-3xl mx-auto mb-12\">\n          <motion.h2 \n            className=\"text-3xl md:text-4xl font-bold mb-4\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.5 }}\n          >\n            AI can be a powerful companion\n          </motion.h2>\n          <motion.p \n            className=\"text-lg text-muted-foreground\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.5, delay: 0.1 }}\n          >\n            You just need to know what and how to ask\n          </motion.p>\n        </div>\n      </div>\n\n      <div className=\"relative\">\n        {/* \"What AI Can Do Today\" Marquee */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-center mb-4\">\n            <div className=\"bg-green-100 dark:bg-green-950 text-green-700 dark:text-green-400 px-4 py-1 rounded-full text-sm font-medium inline-flex items-center\">\n              <span className=\"size-2 bg-green-500 rounded-full mr-2\"></span>\n              What AI Can Do Today\n            </div>\n          </div>\n          \n          <Marquee \n            className=\"py-4\" \n            pauseOnHover \n            reverse={false",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/ai-capabilities-marquee.tsx",
        "start": 15,
        "end": 52,
        "startLoc": {
          "line": 15,
          "column": 11,
          "position": 125
        },
        "endLoc": {
          "line": 52,
          "column": 6,
          "position": 452
        }
      },
      "secondFile": {
        "name": "components/landing/skills-tree-section.tsx",
        "start": 93,
        "end": 120,
        "startLoc": {
          "line": 93,
          "column": 7,
          "position": 614
        },
        "endLoc": {
          "line": 120,
          "column": 6,
          "position": 871
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": "}\n                className=\"flex items-center bg-secondary/40 border border-primary/5 rounded-lg px-5 py-3 mx-3 min-w-52\"\n              >\n                {limitation.icon && (\n                  <div className=\"mr-3 text-primary\">\n                    {limitation.icon}\n                  </div>\n                )}\n                <span className=\"text-sm font-medium\">{limitation.title}</span>\n              </div>\n            ))}\n          </Marquee>\n        </div>\n\n        {/* Connecting message */}\n        <motion.div \n          className=\"max-w-2xl mx-auto text-center mt-12 px-4\"\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.5, delay: 0.3",
      "tokens": 0,
      "firstFile": {
        "name": "components/landing/ai-capabilities-marquee.tsx",
        "start": 86,
        "end": 106,
        "startLoc": {
          "line": 86,
          "column": 6,
          "position": 685
        },
        "endLoc": {
          "line": 106,
          "column": 4,
          "position": 845
        }
      },
      "secondFile": {
        "name": "components/landing/skills-tree-section.tsx",
        "start": 102,
        "end": 111,
        "startLoc": {
          "line": 102,
          "column": 2,
          "position": 707
        },
        "endLoc": {
          "line": 111,
          "column": 4,
          "position": 791
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "process.env.NODE_ENV !== 'production' && (\n            <div className=\"text-xs p-2 mt-2 bg-muted rounded overflow-auto max-h-[200px]\">\n              <p className=\"font-mono\">{error.toString()}</p>\n            </div>\n          )}\n          <div className=\"flex flex-col xs:flex-row gap-2 mt-4\">\n            <",
      "tokens": 0,
      "firstFile": {
        "name": "components/error-boundaries/api-error-boundary.tsx",
        "start": 108,
        "end": 114,
        "startLoc": {
          "line": 108,
          "column": 2,
          "position": 754
        },
        "endLoc": {
          "line": 114,
          "column": 2,
          "position": 821
        }
      },
      "secondFile": {
        "name": "components/error-boundaries/feature-error-boundary.tsx",
        "start": 124,
        "end": 130,
        "startLoc": {
          "line": 124,
          "column": 2,
          "position": 881
        },
        "endLoc": {
          "line": 130,
          "column": 2,
          "position": 948
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "= {\n    baseTheme: theme === \"dark\" ? dark : undefined,\n    elements: {\n      formButtonPrimary:\n        \"bg-primary hover:bg-primary/90 text-primary-foreground\",\n      card: \"bg-background border border-border shadow-sm\",\n      formButtonReset: \"text-muted-foreground hover:text-foreground\",\n      footerActionLink: \"text-primary hover:text-primary/90\",\n      headerTitle: \"text-foreground\",\n      headerSubtitle: \"text-muted-foreground\",\n      socialButtonsBlockButton:\n        \"border border-border hover:bg-muted text-foreground\",\n      formFieldLabel: \"text-foreground\",\n      formFieldInput:\n        \"bg-background border border-input text-foreground rounded-md\",\n      identityPreview: \"bg-muted-foreground/20\",\n      dividerLine: \"bg-border\",\n      dividerText: \"text-muted-foreground\",\n    },\n  };\n\n  // Default paths if not provided",
      "tokens": 0,
      "firstFile": {
        "name": "components/auth/clerk-auth-form.tsx",
        "start": 33,
        "end": 54,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 233
        },
        "endLoc": {
          "line": 54,
          "column": 33,
          "position": 359
        }
      },
      "secondFile": {
        "name": "app/(auth)/sign-up/[[...sign-up]]/page.tsx",
        "start": 31,
        "end": 52,
        "startLoc": {
          "line": 31,
          "column": 2,
          "position": 236
        },
        "endLoc": {
          "line": 52,
          "column": 68,
          "position": 362
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ">\n        <span className=\"text-sm font-medium\">\n          {user?.name || 'Authenticated User'}\n        </span>\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => signOut({ callbackUrl: '/' })}\n        >\n          Sign out\n        </Button>\n      </div>\n    );\n  },",
      "tokens": 0,
      "firstFile": {
        "name": "components/auth/auth-status.tsx",
        "start": 238,
        "end": 251,
        "startLoc": {
          "line": 238,
          "column": 2,
          "position": 1893
        },
        "endLoc": {
          "line": 251,
          "column": 2,
          "position": 1982
        }
      },
      "secondFile": {
        "name": "components/auth/auth-status.tsx",
        "start": 76,
        "end": 91,
        "startLoc": {
          "line": 76,
          "column": 2,
          "position": 545
        },
        "endLoc": {
          "line": 91,
          "column": 33,
          "position": 637
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "\">\n          <div className=\"bg-red-100 p-3 rounded-full\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-red-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n            </svg>\n          </div>\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "components/auth/auth-error-boundary.tsx",
        "start": 193,
        "end": 199,
        "startLoc": {
          "line": 193,
          "column": 33,
          "position": 1381
        },
        "endLoc": {
          "line": 199,
          "column": 3,
          "position": 1471
        }
      },
      "secondFile": {
        "name": "components/providers/enhanced-clerk-provider.tsx",
        "start": 81,
        "end": 87,
        "startLoc": {
          "line": 81,
          "column": 58,
          "position": 618
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 708
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "={form.handleSubmit(onSubmit)} className=\"space-y-8\">\n                <FormField\n                  control={form.control}\n                  name=\"name\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Name</FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"Your name\" {...field} />\n                      </FormControl>\n                      <FormDescription>\n                        This is how you&apos;ll appear on the platform.\n                      </FormDescription>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"role\"\n                  render={({ field }) => (\n                    <FormItem ",
      "tokens": 0,
      "firstFile": {
        "name": "app/onboarding/page.tsx",
        "start": 109,
        "end": 131,
        "startLoc": {
          "line": 109,
          "column": 9,
          "position": 775
        },
        "endLoc": {
          "line": 131,
          "column": 2,
          "position": 919
        }
      },
      "secondFile": {
        "name": "app/(platform)/profile/profile-settings/page.tsx",
        "start": 114,
        "end": 136,
        "startLoc": {
          "line": 114,
          "column": 9,
          "position": 858
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 1002
        }
      }
    },
    {
      "format": "tsx",
      "lines": 31,
      "fragment": "\"use client\";\n\n\n\n\n\nimport { PlatformHeader } from \"@/components/ui\";\nimport { useAuth } from \"@/lib/auth/hooks\";\nimport { UserRole } from \"@/lib/auth/types\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Loader2 } from \"lucide-react\";\nimport { redirect } from \"next/navigation\";\nimport { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"sonner\";\nimport * as z from \"zod\";\nimport {\n  Button,\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n  Input,\n  RadioGroup,\n  RadioGroupItem\n} from \"@/components/ui\";\n\nconst onboardingSchema",
      "tokens": 0,
      "firstFile": {
        "name": "app/onboarding/page.tsx",
        "start": 1,
        "end": 31,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 31,
          "column": 17,
          "position": 195
        }
      },
      "secondFile": {
        "name": "app/(platform)/profile/profile-settings/page.tsx",
        "start": 1,
        "end": 31,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 31,
          "column": 14,
          "position": 195
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "]);\n\n  // Redirect to login if not authenticated\n  if (!isLoading && !isAuthenticated) {\n    redirect(\"/login\");\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"flex h-screen w-screen items-center justify-center\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n      </div>\n    );\n  }\n\n  async function onSubmit(data: OnboardingData",
      "tokens": 0,
      "firstFile": {
        "name": "app/onboarding/page.tsx",
        "start": 58,
        "end": 73,
        "startLoc": {
          "line": 58,
          "column": 5,
          "position": 432
        },
        "endLoc": {
          "line": 73,
          "column": 15,
          "position": 526
        }
      },
      "secondFile": {
        "name": "app/(platform)/profile/profile-settings/page.tsx",
        "start": 66,
        "end": 81,
        "startLoc": {
          "line": 66,
          "column": 5,
          "position": 538
        },
        "endLoc": {
          "line": 81,
          "column": 12,
          "position": 632
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ");\n    } catch (error) {\n      toast.error(\"Something went wrong\", {\n        description: \"We couldn&apos;t update your profile. Please try again.\",\n      });\n    }\n  }\n\n  return (\n    <div className=\"flex min-h-screen flex-col\">\n      <PlatformHeader />\n      <main className=\"flex-1 pt-16\">\n        <div className=\"container py-12\">\n          <div className=\"mx-auto max-w-md\">\n            <div className=\"text-center mb-8\">\n              <h1 className=\"text-3xl font-bold\">Complete",
      "tokens": 0,
      "firstFile": {
        "name": "app/onboarding/page.tsx",
        "start": 87,
        "end": 102,
        "startLoc": {
          "line": 87,
          "column": 13,
          "position": 591
        },
        "endLoc": {
          "line": 102,
          "column": 9,
          "position": 710
        }
      },
      "secondFile": {
        "name": "app/(platform)/profile/profile-settings/page.tsx",
        "start": 92,
        "end": 107,
        "startLoc": {
          "line": 92,
          "column": 2,
          "position": 686
        },
        "endLoc": {
          "line": 107,
          "column": 8,
          "position": 805
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "</h1>\n      \n      <div className=\"mb-6\">\n        <p className=\"mb-2\">Select a test URL:</p>\n        <select \n          className=\"border p-2 rounded w-full max-w-md\"\n          value={selectedUrl}\n          onChange={(e) => setSelectedUrl(e.target.value)}\n        >\n          <option value=\"\">Select a session type</option>\n          {testUrls.map((url) => (\n            <option key={url} value={url}>\n              {url.split('/').pop()}\n            </option>\n          ))}\n        </select>\n      </div>\n      \n      <",
      "tokens": 0,
      "firstFile": {
        "name": "app/calendly-test/page.tsx",
        "start": 23,
        "end": 41,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 182
        },
        "endLoc": {
          "line": 41,
          "column": 2,
          "position": 346
        }
      },
      "secondFile": {
        "name": "app/test/calendly-debug/page.tsx",
        "start": 18,
        "end": 36,
        "startLoc": {
          "line": 18,
          "column": 6,
          "position": 119
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 283
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "</div>\n      )}\n      \n      <div className=\"mt-8 p-4 bg-gray-100 rounded\">\n        <h3 className=\"font-semibold mb-2\">Debug Information:</h3>\n        <p>Check the browser console for detailed logs.</p>\n        <p>Current URL: {selectedUrl || 'None selected'}</p>\n        <",
      "tokens": 0,
      "firstFile": {
        "name": "app/calendly-test/page.tsx",
        "start": 103,
        "end": 110,
        "startLoc": {
          "line": 103,
          "column": 9,
          "position": 842
        },
        "endLoc": {
          "line": 110,
          "column": 2,
          "position": 924
        }
      },
      "secondFile": {
        "name": "app/test/calendly-debug/page.tsx",
        "start": 53,
        "end": 60,
        "startLoc": {
          "line": 53,
          "column": 9,
          "position": 413
        },
        "endLoc": {
          "line": 60,
          "column": 3,
          "position": 495
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ");\n  \n  // Local state for API testing\n  const [apiResponse, setApiResponse] = useState<ApiResponse | null>(null);\n  const [loading, setLoading] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  /**\n   * Test a specific API endpoint\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth-test/client.tsx",
        "start": 52,
        "end": 61,
        "startLoc": {
          "line": 52,
          "column": 2,
          "position": 252
        },
        "endLoc": {
          "line": 61,
          "column": 6,
          "position": 337
        }
      },
      "secondFile": {
        "name": "app/role-test/client.tsx",
        "start": 60,
        "end": 67,
        "startLoc": {
          "line": 60,
          "column": 7,
          "position": 287
        },
        "endLoc": {
          "line": 67,
          "column": 40,
          "position": 372
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ", { \n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      const data = await res.json();\n      setApiResponse(data);\n    } catch (err) {\n      setError((err as Error).message);\n      setApiResponse(null);\n    } finally {\n      setLoading(null);\n    }\n  };\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth-test/client.tsx",
        "start": 67,
        "end": 84,
        "startLoc": {
          "line": 67,
          "column": 17,
          "position": 398
        },
        "endLoc": {
          "line": 84,
          "column": 7,
          "position": 508
        }
      },
      "secondFile": {
        "name": "app/role-test/client.tsx",
        "start": 109,
        "end": 126,
        "startLoc": {
          "line": 109,
          "column": 17,
          "position": 623
        },
        "endLoc": {
          "line": 126,
          "column": 45,
          "position": 733
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "</p>\n\n              <div className=\"mb-2\">\n                <span className=\"font-medium\">Roles:</span> \n                <div className=\"mt-1 flex flex-wrap gap-2\">\n                  {auth.roles.length > 0 ? (\n                    auth.roles.map(role => (\n                      <span \n                        key={role} \n                        className=\"bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs font-medium\"\n                      >\n                        {role}\n                      </span>\n                    ))\n                  ) : (\n                    <span className=\"text-gray-500 italic\">No roles assigned</span>\n                  )}\n                </div>\n              </div>\n\n              <",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth-test/client.tsx",
        "start": 114,
        "end": 134,
        "startLoc": {
          "line": 114,
          "column": 15,
          "position": 790
        },
        "endLoc": {
          "line": 134,
          "column": 2,
          "position": 937
        }
      },
      "secondFile": {
        "name": "app/auth-test/page.tsx",
        "start": 67,
        "end": 86,
        "startLoc": {
          "line": 67,
          "column": 15,
          "position": 494
        },
        "endLoc": {
          "line": 86,
          "column": 2,
          "position": 640
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "\">\n                    <p><span className=\"font-medium\">Error Type:</span> {apiResponse.error.type}</p>\n                    <p><span className=\"font-medium\">Detail:</span> {apiResponse.error.detail}</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          \n          {error && (\n            <div className=\"mt-4 p-4 bg-red-50 rounded",
      "tokens": 0,
      "firstFile": {
        "name": "app/auth-test/client.tsx",
        "start": 249,
        "end": 259,
        "startLoc": {
          "line": 249,
          "column": 26,
          "position": 2079
        },
        "endLoc": {
          "line": 259,
          "column": 27,
          "position": 2184
        }
      },
      "secondFile": {
        "name": "app/role-test/client.tsx",
        "start": 230,
        "end": 240,
        "startLoc": {
          "line": 230,
          "column": 48,
          "position": 1911
        },
        "endLoc": {
          "line": 240,
          "column": 49,
          "position": 2016
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "const rolePermissions: Record<string, string[]> = {\n        [UserRole.ADMIN]: ['*'], // Admin has all permissions\n        [UserRole.BUILDER]: ['profile:edit', 'builder:manage'],\n        [UserRole.CLIENT]: ['profile:view', 'booking:create'],\n      };\n      \n      // Check if any role has the permission",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/express-auth-test-utils.ts",
        "start": 137,
        "end": 143,
        "startLoc": {
          "line": 137,
          "column": 7,
          "position": 822
        },
        "endLoc": {
          "line": 143,
          "column": 40,
          "position": 895
        }
      },
      "secondFile": {
        "name": "lib/auth/express/server-auth.ts",
        "start": 180,
        "end": 186,
        "startLoc": {
          "line": 180,
          "column": 5,
          "position": 1244
        },
        "endLoc": {
          "line": 186,
          "column": 66,
          "position": 1317
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "{\n  const mockUser = mockUsers[userType];\n  \n  // Get user ID and create session ID\n  const userId = mockUser.id;\n  const sessionId = `sess_${userId.substring(5)}`;\n  \n  // Get roles from the mock user or custom roles\n  const roles = customRoles || (mockUser.publicMetadata?.roles as UserRole[] || []);\n  \n  // Return auth headers",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/express-auth-test-utils.ts",
        "start": 162,
        "end": 172,
        "startLoc": {
          "line": 162,
          "column": 2,
          "position": 1003
        },
        "endLoc": {
          "line": 172,
          "column": 23,
          "position": 1094
        }
      },
      "secondFile": {
        "name": "__tests__/utils/express-auth-test-utils.ts",
        "start": 104,
        "end": 114,
        "startLoc": {
          "line": 104,
          "column": 2,
          "position": 562
        },
        "endLoc": {
          "line": 114,
          "column": 25,
          "position": 653
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "[UserRole.BUILDER]: ['profile:edit', 'builder:manage'],\n        [UserRole.CLIENT]: ['profile:view', 'booking:create'],\n      };\n      \n      // Check if any role has the permission\n      return roles.some(role => {\n        const permissions = rolePermissions[role] || [];\n        return permissions.includes('*') || permissions.includes(permission);\n      });\n    }),\n  };\n})",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/express-auth-test-utils.ts",
        "start": 331,
        "end": 342,
        "startLoc": {
          "line": 331,
          "column": 9,
          "position": 2146
        },
        "endLoc": {
          "line": 342,
          "column": 2,
          "position": 2252
        }
      },
      "secondFile": {
        "name": "__tests__/utils/express-auth-test-utils.ts",
        "start": 139,
        "end": 158,
        "startLoc": {
          "line": 139,
          "column": 9,
          "position": 857
        },
        "endLoc": {
          "line": 158,
          "column": 4,
          "position": 965
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ": {\n      findUnique: vi.fn(),\n      findFirst: vi.fn(),\n      findMany: vi.fn(),\n      create: vi.fn(),\n      update: vi.fn(),\n      delete: vi.fn(),\n      count: vi.fn(),\n    },\n    booking",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/db-test-utils.ts",
        "start": 25,
        "end": 34,
        "startLoc": {
          "line": 25,
          "column": 15,
          "position": 135
        },
        "endLoc": {
          "line": 34,
          "column": 8,
          "position": 221
        }
      },
      "secondFile": {
        "name": "__tests__/utils/db-test-utils.ts",
        "start": 16,
        "end": 25,
        "startLoc": {
          "line": 16,
          "column": 5,
          "position": 48
        },
        "endLoc": {
          "line": 25,
          "column": 15,
          "position": 134
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ": {\n      findUnique: vi.fn(),\n      findFirst: vi.fn(),\n      findMany: vi.fn(),\n      create: vi.fn(),\n      update: vi.fn(),\n      delete: vi.fn(),\n      count: vi.fn(),\n    },\n    sessionType",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/db-test-utils.ts",
        "start": 34,
        "end": 43,
        "startLoc": {
          "line": 34,
          "column": 8,
          "position": 222
        },
        "endLoc": {
          "line": 43,
          "column": 12,
          "position": 308
        }
      },
      "secondFile": {
        "name": "__tests__/utils/db-test-utils.ts",
        "start": 16,
        "end": 25,
        "startLoc": {
          "line": 16,
          "column": 5,
          "position": 48
        },
        "endLoc": {
          "line": 25,
          "column": 15,
          "position": 134
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ": {\n      findUnique: vi.fn(),\n      findFirst: vi.fn(),\n      findMany: vi.fn(),\n      create: vi.fn(),\n      update: vi.fn(),\n      delete: vi.fn(),\n      count: vi.fn(),\n    },\n    $transaction",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/db-test-utils.ts",
        "start": 43,
        "end": 52,
        "startLoc": {
          "line": 43,
          "column": 12,
          "position": 309
        },
        "endLoc": {
          "line": 52,
          "column": 13,
          "position": 395
        }
      },
      "secondFile": {
        "name": "__tests__/utils/db-test-utils.ts",
        "start": 16,
        "end": 25,
        "startLoc": {
          "line": 16,
          "column": 5,
          "position": 48
        },
        "endLoc": {
          "line": 25,
          "column": 15,
          "position": 134
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n      imageUrl: mockUser.avatar || 'https://img.clerk.com/default-avatar.png',\n      publicMetadata: {\n        roles,\n        verified: mockUser.verified,\n        ...overrides.metadata,\n      },\n      createdAt: new Date(Date.now() - 1000 * 60 * 60 * 24 * 30).toISOString(),\n      updatedAt: new Date().toISOString(),\n      // Add full profile fields if needed",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/auth-test-utils.ts",
        "start": 170,
        "end": 179,
        "startLoc": {
          "line": 170,
          "column": 2,
          "position": 1521
        },
        "endLoc": {
          "line": 179,
          "column": 37,
          "position": 1622
        }
      },
      "secondFile": {
        "name": "__tests__/utils/auth-test-utils.ts",
        "start": 145,
        "end": 154,
        "startLoc": {
          "line": 145,
          "column": 2,
          "position": 1267
        },
        "endLoc": {
          "line": 154,
          "column": 2,
          "position": 1368
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ",\n    user: mockUser ? {\n      id: clerkId,\n      firstName: mockUser.name.split(' ')[0],\n      lastName: mockUser.name.split(' ')[1] || '',\n      fullName: mockUser.name,\n      primaryEmailAddress: {\n        emailAddress: mockUser.email,\n        id: `email_${clerkId?.substring(5, 15)}`,\n        verified",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/auth-test-utils.ts",
        "start": 234,
        "end": 243,
        "startLoc": {
          "line": 234,
          "column": 12,
          "position": 2082
        },
        "endLoc": {
          "line": 243,
          "column": 9,
          "position": 2184
        }
      },
      "secondFile": {
        "name": "__tests__/utils/auth-test-utils.ts",
        "start": 159,
        "end": 168,
        "startLoc": {
          "line": 159,
          "column": 18,
          "position": 1403
        },
        "endLoc": {
          "line": 168,
          "column": 8,
          "position": 1505
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "${path} → ${status}`);\n        return HttpResponse.json(responseData, {\n          status,\n          headers: options.headers || {},\n        });\n      });\n    }\n\n    mockServer.use(handler);\n\n    return {\n      path,\n      responseData,\n      status,\n      options,\n      cleanup: () => {\n        activeMocks.delete(mockId);\n        mockServer.resetHandlers();\n        mockServer.use(...handlers); // Restore default handlers\n      }\n    };\n  },\n\n  /**\n   * Mock a PUT request to a specific endpoint\n   *\n   * @param path The API path to mock\n   * @param responseData The data to return\n   * @param status HTTP status code (default: 200)\n   * @param options Additional options (delay, network error, etc.)\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/api-test-utils.ts",
        "start": 90,
        "end": 120,
        "startLoc": {
          "line": 90,
          "column": 20,
          "position": 716
        },
        "endLoc": {
          "line": 120,
          "column": 6,
          "position": 855
        }
      },
      "secondFile": {
        "name": "__tests__/utils/api-test-utils.ts",
        "start": 41,
        "end": 71,
        "startLoc": {
          "line": 41,
          "column": 19,
          "position": 358
        },
        "endLoc": {
          "line": 71,
          "column": 6,
          "position": 497
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": "${path} → ${status}`);\n        return HttpResponse.json(responseData, {\n          status,\n          headers: options.headers || {},\n        });\n      });\n    }\n\n    mockServer.use(handler);\n\n    return {\n      path,\n      responseData,\n      status,\n      options,\n      cleanup: () => {\n        activeMocks.delete(mockId);\n        mockServer.resetHandlers();\n        mockServer.use(...handlers); // Restore default handlers\n      }\n    };\n  },\n\n  /**\n   * Mock a DELETE request to a specific endpoint\n   *\n   * @param path The API path to mock\n   * @param responseData The data to return (default: { success: true })\n   * @param status HTTP status code (default: 200)\n   * @param options Additional options (delay, network error, etc.)\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/api-test-utils.ts",
        "start": 139,
        "end": 169,
        "startLoc": {
          "line": 139,
          "column": 19,
          "position": 1074
        },
        "endLoc": {
          "line": 169,
          "column": 6,
          "position": 1213
        }
      },
      "secondFile": {
        "name": "__tests__/utils/api-test-utils.ts",
        "start": 41,
        "end": 71,
        "startLoc": {
          "line": 41,
          "column": 19,
          "position": 358
        },
        "endLoc": {
          "line": 71,
          "column": 6,
          "position": 497
        }
      }
    },
    {
      "format": "typescript",
      "lines": 32,
      "fragment": "${path} → ${status}`);\n        return HttpResponse.json(responseData, {\n          status,\n          headers: options.headers || {},\n        });\n      });\n    }\n\n    mockServer.use(handler);\n\n    return {\n      path,\n      responseData,\n      status,\n      options,\n      cleanup: () => {\n        activeMocks.delete(mockId);\n        mockServer.resetHandlers();\n        mockServer.use(...handlers); // Restore default handlers\n      }\n    };\n  },\n\n  /**\n   * Mock an error response for any method\n   *\n   * @param path The API path to mock\n   * @param method The HTTP method to mock\n   * @param errorMessage Error message to return\n   * @param status HTTP status code (default: 400)\n   * @param options Additional options (delay, etc.)\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/api-test-utils.ts",
        "start": 188,
        "end": 219,
        "startLoc": {
          "line": 188,
          "column": 22,
          "position": 1440
        },
        "endLoc": {
          "line": 219,
          "column": 6,
          "position": 1579
        }
      },
      "secondFile": {
        "name": "__tests__/utils/api-test-utils.ts",
        "start": 41,
        "end": 71,
        "startLoc": {
          "line": 41,
          "column": 19,
          "position": 358
        },
        "endLoc": {
          "line": 71,
          "column": 6,
          "position": 497
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ": error.message\n      });\n\n      // Try to include response body in error message if possible\n      try {\n        const clonedResponse = response.clone();\n        const text = await clonedResponse.text();\n        console.error(`[API Expect] Response body:`, text);\n      } catch (e) {\n        console.error(`[API Expect] Could not read response body`);\n      }\n\n      throw error;\n    }\n  },\n\n  /**\n   * Test if a fetch response has validation errors\n   *\n   * @param response Fetch response object\n   * @param fieldNames Names of fields expected to have validation errors\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/api-test-utils.ts",
        "start": 519,
        "end": 540,
        "startLoc": {
          "line": 519,
          "column": 13,
          "position": 3844
        },
        "endLoc": {
          "line": 540,
          "column": 6,
          "position": 3945
        }
      },
      "secondFile": {
        "name": "__tests__/utils/api-test-utils.ts",
        "start": 470,
        "end": 492,
        "startLoc": {
          "line": 470,
          "column": 6,
          "position": 3518
        },
        "endLoc": {
          "line": 492,
          "column": 6,
          "position": 3619
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": ",\n        errorMessage: error.message\n      });\n\n      // Try to include response body in error message if possible\n      try {\n        const clonedResponse = response.clone();\n        const text = await clonedResponse.text();\n        console.error(`[API Expect] Response body:`, text);\n      } catch (e) {\n        console.error(`[API Expect] Could not read response body`);\n      }\n\n      throw error;\n    }\n  },\n\n  /**\n   * Test if a fetch response matches a custom condition\n   *\n   * @param response Fetch response object\n   * @param assertFn Function to perform custom assertions\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "__tests__/utils/api-test-utils.ts",
        "start": 559,
        "end": 581,
        "startLoc": {
          "line": 559,
          "column": 11,
          "position": 4126
        },
        "endLoc": {
          "line": 581,
          "column": 6,
          "position": 4231
        }
      },
      "secondFile": {
        "name": "__tests__/utils/api-test-utils.ts",
        "start": 518,
        "end": 492,
        "startLoc": {
          "line": 518,
          "column": 14,
          "position": 3840
        },
        "endLoc": {
          "line": 492,
          "column": 6,
          "position": 3619
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ", async ({ page }) => {\n    // create a new todo locator\n    const newTodo = page.getByPlaceholder('What needs to be done?');\n\n    // Create two items.\n    for (const item of TODO_ITEMS.slice(0, 2)) {\n      await newTodo.fill(item);\n      await newTodo.press('Enter');\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "tests-examples/demo-todo-app.spec.ts",
        "start": 149,
        "end": 159,
        "startLoc": {
          "line": 149,
          "column": 47,
          "position": 1262
        },
        "endLoc": {
          "line": 159,
          "column": 6,
          "position": 1350
        }
      },
      "secondFile": {
        "name": "tests-examples/demo-todo-app.spec.ts",
        "start": 124,
        "end": 134,
        "startLoc": {
          "line": 124,
          "column": 44,
          "position": 1026
        },
        "endLoc": {
          "line": 134,
          "column": 21,
          "position": 1114
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": ", async ({ page }) => {\n    const todoItem = page.getByTestId('todo-item'); \n    await page.getByTestId('todo-item').nth(1).getByRole('checkbox').check();\n\n    await checkNumberOfCompletedTodosInLocalStorage(page, 1);\n\n    await test",
      "tokens": 0,
      "firstFile": {
        "name": "tests-examples/demo-todo-app.spec.ts",
        "start": 352,
        "end": 358,
        "startLoc": {
          "line": 352,
          "column": 33,
          "position": 3577
        },
        "endLoc": {
          "line": 358,
          "column": 5,
          "position": 3651
        }
      },
      "secondFile": {
        "name": "tests-examples/demo-todo-app.spec.ts",
        "start": 342,
        "end": 347,
        "startLoc": {
          "line": 342,
          "column": 42,
          "position": 3434
        },
        "endLoc": {
          "line": 347,
          "column": 5,
          "position": 3506
        }
      }
    },
    {
      "format": "typescript",
      "lines": 33,
      "fragment": "/**\n * Convert SocialLinks to a Prisma-compatible JSON value\n */\nexport function socialLinksToJson(links?: SocialLinks): Prisma.InputJsonValue | undefined {\n  if (!links) return undefined;\n  return links as unknown as Prisma.InputJsonValue;\n}\n\n/**\n * Convert PortfolioItem[] to a Prisma-compatible JSON array\n */\nexport function portfolioItemsToJson(items?: PortfolioItem[]): Prisma.InputJsonValue[] | undefined {\n  if (!items) return undefined;\n  return items as unknown as Prisma.InputJsonValue[];\n}\n\n/**\n * Get SocialLinks from a BuilderProfile\n */\nexport function getSocialLinks(profile: { socialLinks?: Prisma.JsonValue | null }): SocialLinks | undefined {\n  if (!profile.socialLinks) return undefined;\n  return profile.socialLinks as unknown as SocialLinks;\n}\n\n/**\n * Get PortfolioItems from a BuilderProfile\n */\nexport function getPortfolioItems(profile: { portfolioItems?: Prisma.JsonValue[] }): PortfolioItem[] | undefined {\n  if (!profile.portfolioItems || !Array.isArray(profile.portfolioItems)) return undefined;\n  return profile.portfolioItems as unknown as PortfolioItem[];\n}\n\n// Re-export the types from prisma-types.ts",
      "tokens": 0,
      "firstFile": {
        "name": "lib/json-utilities.ts",
        "start": 17,
        "end": 49,
        "startLoc": {
          "line": 17,
          "column": 1,
          "position": 42
        },
        "endLoc": {
          "line": 49,
          "column": 44,
          "position": 320
        }
      },
      "secondFile": {
        "name": "lib/prisma-types.ts",
        "start": 63,
        "end": 95,
        "startLoc": {
          "line": 63,
          "column": 1,
          "position": 333
        },
        "endLoc": {
          "line": 95,
          "column": 32,
          "position": 611
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n\n// Define common types\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error';\n\nexport interface LogMetadata {\n  [key: string]: any;\n}\n\nexport interface LogFunction {\n  (message: string, metadata?: LogMetadata, error?: Error): void;\n}\n\n// Determine if we're in a browser environment",
      "tokens": 0,
      "firstFile": {
        "name": "lib/enhanced-logger.ts",
        "start": 10,
        "end": 23,
        "startLoc": {
          "line": 10,
          "column": 11,
          "position": 19
        },
        "endLoc": {
          "line": 23,
          "column": 47,
          "position": 108
        }
      },
      "secondFile": {
        "name": "lib/logger.ts",
        "start": 20,
        "end": 33,
        "startLoc": {
          "line": 20,
          "column": 2,
          "position": 100
        },
        "endLoc": {
          "line": 33,
          "column": 57,
          "position": 189
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "// Console logging based on level\n    switch (level) {\n      case 'debug':\n        console.debug(JSON.stringify(logObject));\n        break;\n      case 'info':\n        console.info(JSON.stringify(logObject));\n        break;\n      case 'warn':\n        console.warn(JSON.stringify(logObject));\n        break;\n      case 'error':\n        console.error(JSON.stringify(logObject));\n        break",
      "tokens": 0,
      "firstFile": {
        "name": "lib/enhanced-logger.server.ts",
        "start": 93,
        "end": 106,
        "startLoc": {
          "line": 93,
          "column": 5,
          "position": 495
        },
        "endLoc": {
          "line": 106,
          "column": 6,
          "position": 599
        }
      },
      "secondFile": {
        "name": "lib/logger.ts",
        "start": 198,
        "end": 211,
        "startLoc": {
          "line": 198,
          "column": 5,
          "position": 1468
        },
        "endLoc": {
          "line": 211,
          "column": 3,
          "position": 1572
        }
      }
    },
    {
      "format": "typescript",
      "lines": 37,
      "fragment": "export class EnhancedLogger {\n  /**\n   * Log a debug message\n   * @param message The message to log\n   * @param metadata Optional metadata to include\n   * @param error Optional error object\n   */\n  debug: LogFunction = (message, metadata = {}, error) => {\n    this.log('debug', message, metadata, error);\n  };\n\n  /**\n   * Log an informational message\n   * @param message The message to log\n   * @param metadata Optional metadata to include\n   * @param error Optional error object\n   */\n  info: LogFunction = (message, metadata = {}, error) => {\n    this.log('info', message, metadata, error);\n  };\n\n  /**\n   * Log a warning message\n   * @param message The message to log\n   * @param metadata Optional metadata to include\n   * @param error Optional error object\n   */\n  warn: LogFunction = (message, metadata = {}, error) => {\n    this.log('warn', message, metadata, error);\n  };\n\n  /**\n   * Log an error message with Sentry integration\n   * @param message The message to log\n   * @param metadata Optional metadata to include\n   * @param error Optional error object\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/enhanced-logger.client.ts",
        "start": 31,
        "end": 67,
        "startLoc": {
          "line": 31,
          "column": 1,
          "position": 144
        },
        "endLoc": {
          "line": 67,
          "column": 6,
          "position": 312
        }
      },
      "secondFile": {
        "name": "lib/enhanced-logger.server.ts",
        "start": 31,
        "end": 67,
        "startLoc": {
          "line": 31,
          "column": 1,
          "position": 144
        },
        "endLoc": {
          "line": 67,
          "column": 6,
          "position": 312
        }
      }
    },
    {
      "format": "typescript",
      "lines": 45,
      "fragment": "error: LogFunction = (message, metadata = {}, error) => {\n    this.log('error', message, metadata, error);\n  };\n\n  /**\n   * Internal logging implementation\n   * @param level The log level\n   * @param message The message to log\n   * @param metadata Optional metadata to include\n   * @param error Optional error object\n   */\n  private log(level: LogLevel, message: string, metadata: LogMetadata, error?: Error) {\n    const timestamp = new Date().toISOString();\n    const logObject = {\n      timestamp,\n      level,\n      message,\n      ...metadata,\n    };\n\n    // Send to Sentry for errors and warnings\n    if (level === 'error' || level === 'warn') {\n      this.sendToSentry(level, message, metadata, error);\n    }\n\n    // Console logging based on level\n    switch (level) {\n      case 'debug':\n        console.debug(JSON.stringify(logObject));\n        break;\n      case 'info':\n        console.info(JSON.stringify(logObject));\n        break;\n      case 'warn':\n        console.warn(JSON.stringify(logObject));\n        break;\n      case 'error':\n        console.error(JSON.stringify(logObject));\n        break;\n      default:\n        console.log(JSON.stringify(logObject));\n    }\n\n    // Datadog logging temporarily disabled\n    // this.sendToDatadog(level, message, metadata, error);",
      "tokens": 0,
      "firstFile": {
        "name": "lib/enhanced-logger.client.ts",
        "start": 68,
        "end": 112,
        "startLoc": {
          "line": 68,
          "column": 3,
          "position": 315
        },
        "endLoc": {
          "line": 112,
          "column": 56,
          "position": 628
        }
      },
      "secondFile": {
        "name": "lib/enhanced-logger.server.ts",
        "start": 68,
        "end": 112,
        "startLoc": {
          "line": 68,
          "column": 3,
          "position": 315
        },
        "endLoc": {
          "line": 112,
          "column": 19,
          "position": 628
        }
      }
    },
    {
      "format": "typescript",
      "lines": 23,
      "fragment": "}\n\n  /**\n   * Send log data to Sentry\n   */\n  private sendToSentry(level: LogLevel, message: string, metadata: LogMetadata, error?: Error) {\n    try {\n      if (error) {\n        // Map log level to error severity\n        const severity = level === 'error'\n          ? ErrorSeverity.HIGH\n          : ErrorSeverity.MEDIUM;\n\n        // Map log level to error category\n        const category = level === 'error'\n          ? ErrorCategory.SYSTEM\n          : ErrorCategory.SYSTEM;\n\n        // Create a partial error metadata object\n        const errorMetadata: Partial<ErrorMetadata> = {\n          severity,\n          category,\n          source: 'client'",
      "tokens": 0,
      "firstFile": {
        "name": "lib/enhanced-logger.client.ts",
        "start": 113,
        "end": 135,
        "startLoc": {
          "line": 113,
          "column": 3,
          "position": 631
        },
        "endLoc": {
          "line": 135,
          "column": 9,
          "position": 777
        }
      },
      "secondFile": {
        "name": "lib/enhanced-logger.server.ts",
        "start": 115,
        "end": 137,
        "startLoc": {
          "line": 115,
          "column": 3,
          "position": 637
        },
        "endLoc": {
          "line": 137,
          "column": 9,
          "position": 783
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ",\n          component: metadata.component || 'logger',\n          userImpact: metadata.userImpact || 'minimal',\n          affectedFeature: metadata.affectedFeature || 'unknown',\n          isRecoverable: metadata.isRecoverable !== undefined ? metadata.isRecoverable : true,\n          retryable: metadata.retryable !== undefined ? metadata.retryable : false,\n        };\n\n        // Use the error handling function from the classification system",
      "tokens": 0,
      "firstFile": {
        "name": "lib/enhanced-logger.client.ts",
        "start": 135,
        "end": 143,
        "startLoc": {
          "line": 135,
          "column": 9,
          "position": 778
        },
        "endLoc": {
          "line": 143,
          "column": 66,
          "position": 871
        }
      },
      "secondFile": {
        "name": "lib/enhanced-logger.server.ts",
        "start": 137,
        "end": 145,
        "startLoc": {
          "line": 137,
          "column": 9,
          "position": 784
        },
        "endLoc": {
          "line": 145,
          "column": 49,
          "position": 877
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "// Use the error handling function from the classification system\n        handleError(error, message, errorMetadata);\n      } else {\n        // Log message as event with metadata\n        Sentry.withScope((scope) => {\n          // Add metadata as extra context\n          Object.entries(metadata).forEach(([key, value]) => {\n            scope.setExtra(key, value);\n          });\n\n          // Add log level as tag\n          scope.setTag('log_level', level);\n\n          // Capture message with safe severity mapping",
      "tokens": 0,
      "firstFile": {
        "name": "lib/enhanced-logger.client.ts",
        "start": 143,
        "end": 156,
        "startLoc": {
          "line": 143,
          "column": 9,
          "position": 871
        },
        "endLoc": {
          "line": 156,
          "column": 46,
          "position": 970
        }
      },
      "secondFile": {
        "name": "lib/enhanced-logger.server.ts",
        "start": 161,
        "end": 174,
        "startLoc": {
          "line": 161,
          "column": 9,
          "position": 884
        },
        "endLoc": {
          "line": 174,
          "column": 49,
          "position": 983
        }
      }
    },
    {
      "format": "typescript",
      "lines": 27,
      "fragment": "// Capture message with safe severity mapping\n          const severityMap = {\n            'error': 'error',\n            'warn': 'warning',\n            'info': 'info',\n            'debug': 'debug'\n          };\n\n          // Use safer approach to set severity\n          Sentry.captureMessage(\n            message,\n            {\n              level: severityMap[level] || 'info'\n            }\n          );\n        });\n      }\n    } catch (sentryError) {\n      // Fallback if Sentry logging fails\n      console.error('Failed to send to Sentry:', sentryError);\n    }\n  }\n\n  /**\n   * Send log data to Datadog (client-side)\n   * NOTE: Temporarily disabled to resolve build issues\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "lib/enhanced-logger.client.ts",
        "start": 156,
        "end": 182,
        "startLoc": {
          "line": 156,
          "column": 11,
          "position": 970
        },
        "endLoc": {
          "line": 182,
          "column": 6,
          "position": 1091
        }
      },
      "secondFile": {
        "name": "lib/enhanced-logger.server.ts",
        "start": 190,
        "end": 216,
        "startLoc": {
          "line": 190,
          "column": 11,
          "position": 990
        },
        "endLoc": {
          "line": 216,
          "column": 6,
          "position": 1111
        }
      }
    },
    {
      "format": "typescript",
      "lines": 54,
      "fragment": "private sendToDatadog(level: LogLevel, message: string, metadata: LogMetadata, error?: Error) {\n    // Temporarily disabled\n    // Implementation will be restored once build issues are resolved\n  }\n\n  /**\n   * Log error with code-specific metadata\n   * Specialized method for handling coded errors\n   */\n  logError(code: string, message: string, metadata: LogMetadata = {}, error?: Error) {\n    this.error(message, {\n      ...metadata,\n      error_code: code,\n      // Include stack if available and we're not in production\n      stack: error?.stack && process.env.NODE_ENV !== 'production' ? error.stack : undefined,\n    }, error);\n  }\n\n  /**\n   * Log and track exceptions (convenience method)\n   */\n  exception(error: Error, message?: string, metadata: LogMetadata = {}) {\n    this.error(message || error.message, {\n      ...metadata,\n      name: error.name,\n    }, error);\n  }\n\n  /**\n   * Create a child logger with preset context\n   * @param context Context to be added to all log entries\n   */\n  child(context: LogMetadata) {\n    const childLogger = new EnhancedLogger();\n\n    // Override log methods to include context\n    childLogger.log = (level, message, metadata, error) => {\n      this.log(level, message, { ...context, ...metadata }, error);\n    };\n\n    return childLogger;\n  }\n}\n\n// Export singleton instance for app-wide usage\nexport const enhancedLogger = new EnhancedLogger();\n\n// Export utility for domain-specific loggers\nexport function createDomainLogger(domain: string, defaultMetadata: LogMetadata = {}) {\n  return enhancedLogger.child({\n    domain,\n    ...defaultMetadata,\n  });\n}",
      "tokens": 0,
      "firstFile": {
        "name": "lib/enhanced-logger.client.ts",
        "start": 183,
        "end": 236,
        "startLoc": {
          "line": 183,
          "column": 3,
          "position": 1094
        },
        "endLoc": {
          "line": 236,
          "column": 2,
          "position": 1484
        }
      },
      "secondFile": {
        "name": "lib/enhanced-logger.server.ts",
        "start": 217,
        "end": 270,
        "startLoc": {
          "line": 217,
          "column": 3,
          "position": 1114
        },
        "endLoc": {
          "line": 270,
          "column": 2,
          "position": 1504
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n  where: Record<string, any>\n): Promise<T> {\n  const modelAny = (db as any)[model];\n  \n  if (!modelAny) {\n    throw new Error(`Model '${model}' does not exist on the Prisma client`);\n  }\n\n  return withDatabaseOperation(\n    () => modelAny.delete",
      "tokens": 0,
      "firstFile": {
        "name": "lib/db-utils.ts",
        "start": 304,
        "end": 314,
        "startLoc": {
          "line": 304,
          "column": 7,
          "position": 1740
        },
        "endLoc": {
          "line": 314,
          "column": 7,
          "position": 1828
        }
      },
      "secondFile": {
        "name": "lib/db-utils.ts",
        "start": 223,
        "end": 233,
        "startLoc": {
          "line": 223,
          "column": 2,
          "position": 1263
        },
        "endLoc": {
          "line": 233,
          "column": 7,
          "position": 1351
        }
      }
    },
    {
      "format": "css",
      "lines": 26,
      "fragment": ";\n    }\n  }\n  @keyframes aurora {\n  0% {\n    background-position: 0% 50%;\n    transform: rotate(-5deg) scale(0.9);\n    }\n  25% {\n    background-position: 50% 100%;\n    transform: rotate(5deg) scale(1.1);\n    }\n  50% {\n    background-position: 100% 50%;\n    transform: rotate(-3deg) scale(0.95);\n    }\n  75% {\n    background-position: 50% 0%;\n    transform: rotate(3deg) scale(1.05);\n    }\n  100% {\n    background-position: 0% 50%;\n    transform: rotate(-5deg) scale(0.9);\n    }\n  }\n  @keyframes",
      "tokens": 0,
      "firstFile": {
        "name": "app/globals.css",
        "start": 338,
        "end": 363,
        "startLoc": {
          "line": 338,
          "column": 2,
          "position": 2331
        },
        "endLoc": {
          "line": 363,
          "column": 11,
          "position": 2509
        }
      },
      "secondFile": {
        "name": "app/globals.css",
        "start": 281,
        "end": 308,
        "startLoc": {
          "line": 281,
          "column": 31,
          "position": 1854
        },
        "endLoc": {
          "line": 308,
          "column": 7,
          "position": 2030
        }
      }
    },
    {
      "format": "css",
      "lines": 26,
      "fragment": ");\n    }\n  }\n  @keyframes aurora {\n  0% {\n    background-position: 0% 50%;\n    transform: rotate(-5deg) scale(0.9);\n    }\n  25% {\n    background-position: 50% 100%;\n    transform: rotate(5deg) scale(1.1);\n    }\n  50% {\n    background-position: 100% 50%;\n    transform: rotate(-3deg) scale(0.95);\n    }\n  75% {\n    background-position: 50% 0%;\n    transform: rotate(3deg) scale(1.05);\n    }\n  100% {\n    background-position: 0% 50%;\n    transform: rotate(-5deg) scale(0.9);\n    }\n  }\n  @keyframes shine",
      "tokens": 0,
      "firstFile": {
        "name": "app/globals.css",
        "start": 360,
        "end": 385,
        "startLoc": {
          "line": 360,
          "column": 4,
          "position": 2499
        },
        "endLoc": {
          "line": 385,
          "column": 7,
          "position": 2679
        }
      },
      "secondFile": {
        "name": "app/globals.css",
        "start": 338,
        "end": 363,
        "startLoc": {
          "line": 338,
          "column": 2,
          "position": 2330
        },
        "endLoc": {
          "line": 363,
          "column": 8,
          "position": 2510
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ",\n    media: query,\n    onchange: null,\n    addListener: vi.fn(),\n    removeListener: vi.fn(),\n    addEventListener: vi.fn(),\n    removeEventListener: vi.fn(),\n    dispatchEvent: vi.fn(),\n  })),\n});\n\n// Mock IntersectionObserver",
      "tokens": 0,
      "firstFile": {
        "name": "vitest.setup.ts",
        "start": 42,
        "end": 53,
        "startLoc": {
          "line": 42,
          "column": 6,
          "position": 283
        },
        "endLoc": {
          "line": 53,
          "column": 29,
          "position": 365
        }
      },
      "secondFile": {
        "name": "__tests__/utils/vitest-utils.ts",
        "start": 71,
        "end": 81,
        "startLoc": {
          "line": 71,
          "column": 8,
          "position": 424
        },
        "endLoc": {
          "line": 81,
          "column": 2,
          "position": 506
        }
      }
    },
    {
      "format": "javascript",
      "lines": 11,
      "fragment": ",\n    include: ['**/*.test.{ts,tsx}', '**/*.vitest.test.{ts,tsx}'],\n    exclude: ['**/node_modules/**', '**/.next/**', '**/dist/**'],\n  },\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './'),\n      'test-utils': path.resolve(__dirname, './__tests__/utils/vitest-utils'),\n    },\n  },\n})",
      "tokens": 0,
      "firstFile": {
        "name": "vitest.config.js",
        "start": 21,
        "end": 31,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 161
        },
        "endLoc": {
          "line": 31,
          "column": 2,
          "position": 245
        }
      },
      "secondFile": {
        "name": "vitest.config.mjs",
        "start": 21,
        "end": 31,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 159
        },
        "endLoc": {
          "line": 31,
          "column": 2,
          "position": 243
        }
      }
    },
    {
      "format": "javascript",
      "lines": 6,
      "fragment": ";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default",
      "tokens": 0,
      "firstFile": {
        "name": "test-page.js",
        "start": 2,
        "end": 7,
        "startLoc": {
          "line": 2,
          "column": 13,
          "position": 4
        },
        "endLoc": {
          "line": 7,
          "column": 8,
          "position": 87
        }
      },
      "secondFile": {
        "name": "components/marketplace/components/error-boundaries/simple-marketplace-error-boundary.js",
        "start": 35,
        "end": 40,
        "startLoc": {
          "line": 35,
          "column": 2,
          "position": 603
        },
        "endLoc": {
          "line": 40,
          "column": 31,
          "position": 686
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": ",\n  timeout: 30000,\n  forbidOnly: !!process.env.CI,\n  retries: process.env.CI ? 2 : 0,\n  workers: process.env.CI ? 1 : undefined,\n  reporter: [\n    ['html'],\n    ['json', { outputFile: 'test-results/e2e/playwright-results.json'",
      "tokens": 0,
      "firstFile": {
        "name": "playwright.simple.config.ts",
        "start": 7,
        "end": 14,
        "startLoc": {
          "line": 7,
          "column": 18,
          "position": 32
        },
        "endLoc": {
          "line": 14,
          "column": 43,
          "position": 114
        }
      },
      "secondFile": {
        "name": "playwright.visual.config.ts",
        "start": 5,
        "end": 12,
        "startLoc": {
          "line": 5,
          "column": 25,
          "position": 39
        },
        "endLoc": {
          "line": 12,
          "column": 46,
          "position": 121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ";\n\nexport default defineConfig({\n  testDir: './__tests__/e2e',\n  timeout: 30000,\n  forbidOnly: !!process.env.CI,\n  retries: process.env.CI ? 2 : 0,\n  workers: process.env.CI ? 1 : undefined,\n  reporter: [\n    ['html'],\n    ['json', { outputFile: 'test-results/e2e/playwright-results.json' }],\n  ],\n  globalSetup",
      "tokens": 0,
      "firstFile": {
        "name": "playwright.project.config.ts",
        "start": 8,
        "end": 20,
        "startLoc": {
          "line": 8,
          "column": 7,
          "position": 25
        },
        "endLoc": {
          "line": 20,
          "column": 12,
          "position": 134
        }
      },
      "secondFile": {
        "name": "playwright.simple.config.ts",
        "start": 4,
        "end": 16,
        "startLoc": {
          "line": 4,
          "column": 19,
          "position": 16
        },
        "endLoc": {
          "line": 16,
          "column": 48,
          "position": 125
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "{\n      name: 'chromium',\n      use: { ...devices['Desktop Chrome'] },\n    },\n    {\n      name: 'firefox',\n      use: { ...devices['Desktop Firefox'] },\n    },\n    {\n      name: 'webkit',\n      use: { ...devices['Desktop Safari'] },\n    },\n    {\n      name: 'mobile-chrome',\n      use: { ...devices['Pixel 5'] },\n    },\n    {\n      name: 'mobile-safari',\n      use: { ...devices['iPhone 12'] },\n    },\n    \n    // Role-specific authenticated test projects",
      "tokens": 0,
      "firstFile": {
        "name": "playwright.project.config.ts",
        "start": 28,
        "end": 49,
        "startLoc": {
          "line": 28,
          "column": 5,
          "position": 194
        },
        "endLoc": {
          "line": 49,
          "column": 45,
          "position": 341
        }
      },
      "secondFile": {
        "name": "playwright.visual.config.ts",
        "start": 30,
        "end": 50,
        "startLoc": {
          "line": 30,
          "column": 5,
          "position": 226
        },
        "endLoc": {
          "line": 50,
          "column": 2,
          "position": 371
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "import path from 'path';\n\nexport default defineConfig({\n  testDir: './__tests__/e2e',\n  timeout: 30000,\n  forbidOnly: !!process.env.CI,\n  retries: process.env.CI ? 2 : 0,\n  workers: process.env.CI ? 1 : undefined,\n  reporter: [\n    ['html'],\n    ['json', { outputFile: 'test-results/e2e/playwright-results.json' }],\n  ],\n  globalSetup: require.resolve('./__tests__/e2e/global-setup'),\n  use: {\n    baseURL: process.env.PLAYWRIGHT_TEST_BASE_URL || 'http://localhost:3000',\n    trace: 'on-first-retry',\n    screenshot: 'only-on-failure',\n  },\n  projects: [\n    // Setup project for authentication",
      "tokens": 0,
      "firstFile": {
        "name": "playwright.config.ts",
        "start": 2,
        "end": 21,
        "startLoc": {
          "line": 2,
          "column": 1,
          "position": 15
        },
        "endLoc": {
          "line": 21,
          "column": 36,
          "position": 188
        }
      },
      "secondFile": {
        "name": "playwright.project.config.ts",
        "start": 8,
        "end": 27,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 18
        },
        "endLoc": {
          "line": 27,
          "column": 48,
          "position": 191
        }
      }
    }
  ],
  "filename": "/Users/liamj/.npm/_npx/652ead47bf63fe99/node_modules/@jscpd/html-reporter/dist/templates/main.pug"
}