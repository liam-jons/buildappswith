{
  "configuration" : { },
  "description" : "Architecture documentation for the Buildappswith platform using the C4 model",
  "documentation" : {
    "decisions" : [ {
      "content" : "# 1. Use Structurizr for Architecture Documentation\n\nDate: 2025-04-26\n\n## Status\n\nAccepted\n\n## Context\n\nAs the Buildappswith platform grows in complexity, we need a systematic way to document and communicate its architecture. This is particularly important before implementing significant changes like the planned migration from NextAuth to Clerk.\n\nWe need an architecture documentation approach that:\n- Can be version-controlled alongside the codebase\n- Follows established best practices for architecture representation\n- Provides multiple views and levels of detail\n- Is maintainable over time by developers\n- Supports visualization and sharing of architecture information\n\n## Decision\n\nWe will use Structurizr with the C4 model for architecture documentation. Specifically:\n\n1. We will use Structurizr Lite as a local development tool for creating and viewing architecture diagrams.\n2. We will use the Structurizr DSL (Domain Specific Language) approach to define our architecture.\n3. We will follow the C4 model (Context, Containers, Components, Code) to organize our architectural views.\n4. We will store the DSL files in the project repository under docs/architecture/structurizr.\n\n## Consequences\n\n### Positive\n\n- Architecture documentation will be versioned alongside code changes.\n- The C4 model provides a standardized approach to architectural representation.\n- The DSL approach makes architecture documentation accessible to all developers.\n- We can generate multiple views of the architecture from a single model.\n- Structurizr Lite is free and open-source, requiring no additional licensing costs.\n\n### Negative\n\n- Team members will need to learn the Structurizr DSL syntax.\n- Running Structurizr Lite requires Docker, adding a development dependency.\n- Keeping the architecture documentation in sync with implementation will require discipline.\n\n### Neutral\n\n- We may consider adopting Structurizr Cloud or On-premises versions in the future if team needs evolve.\n- Integration with CI/CD for automated diagram generation will be considered as a future enhancement.\n",
      "date" : "2025-04-26T00:00:00Z",
      "format" : "Markdown",
      "id" : "1",
      "status" : "Accepted",
      "title" : "Use Structurizr for Architecture Documentation"
    }, {
      "content" : "# 2. Migrate from NextAuth to Clerk\n\nDate: 2025-04-26\n\n## Status\n\nProposed\n\n## Context\n\nThe current implementation uses NextAuth.js for authentication. While functional, we've identified several challenges:\n\n1. **Implementation Inconsistencies**: The codebase has inconsistent authentication implementation patterns.\n2. **User Management Limitations**: NextAuth lacks comprehensive user management features out of the box.\n3. **Role Management Complexity**: Current role-based access control is custom-built and maintenance-intensive.\n4. **Multi-tenancy Support**: As we plan for organizational accounts, we need better multi-tenancy support.\n5. **Authentication UX**: The current authentication flows could be improved for a better user experience.\n\nAfter reviewing several authentication providers, Clerk has emerged as a promising alternative that addresses these challenges.\n\n## Decision\n\nWe will migrate from NextAuth.js to Clerk as our authentication provider. This migration will be done in phases:\n\n1. **Architectural Documentation**: Create detailed documentation of current and future auth flows using Structurizr\n2. **Parallel Implementation**: Implement Clerk alongside NextAuth temporarily\n3. **Gradual Migration**: Move authentication flows one by one to Clerk\n4. **User Migration**: Migrate existing users to Clerk\n5. **NextAuth Removal**: Remove NextAuth once migration is complete\n\n## Consequences\n\n### Positive\n\n- Improved user management with built-in features\n- Streamlined role-based access control\n- Better multi-tenancy support for organizational accounts\n- Enhanced authentication UX with customizable flows\n- Reduced custom authentication code to maintain\n- Better security with specialized authentication provider\n\n### Negative\n\n- Migration effort required for existing users\n- Learning curve for the team to work with Clerk\n- Temporary complexity during the migration period\n- Potential for regression issues during the transition\n\n### Neutral\n\n- External dependency on Clerk as a service\n- Associated costs with Clerk subscription\n- Need to update documentation and training materials\n\n## Implementation Plan\n\nThe implementation will follow these steps:\n\n1. Document current authentication architecture using Structurizr\n2. Create a detailed migration plan with rollback strategies\n3. Set up Clerk in development environment\n4. Implement parallel authentication systems\n5. Gradually migrate features\n6. Test extensively in staging environment\n7. Execute user migration with careful monitoring\n8. Remove NextAuth components once migration is complete\n\n## References\n\n- [Clerk Documentation](https://clerk.dev/docs)\n- [NextAuth Migration Guide](https://clerk.dev/docs/migrations/nextauth)\n- [Authentication Flow Diagram](../workspace.dsl)\n",
      "date" : "2025-04-26T00:00:00Z",
      "format" : "Markdown",
      "id" : "2",
      "status" : "Proposed",
      "title" : "Migrate from NextAuth to Clerk"
    } ],
    "sections" : [ {
      "content" : "# The C4 Model for Software Architecture\n\nThis document provides an overview of the C4 model and how we use it to document the Buildappswith platform architecture.\n\n## What is the C4 Model?\n\nThe C4 model was created by Simon Brown as a way to create software architecture diagrams that are clear, consistent, and easy to communicate. C4 stands for Context, Containers, Components, and Code—the four levels of abstraction in the model.\n\n## The Four C's\n\n### Level 1: System Context Diagram\n\nThe System Context diagram shows the software system in question and how it relates to users (people) and other software systems. It's a good starting point for diagramming and documenting a software system, allowing you to step back and see the big picture.\n\n**Key elements:**\n- The software system in scope\n- Users of the system (people)\n- External systems the software system interacts with\n\n### Level 2: Container Diagram\n\nThe Container diagram zooms into the software system and shows the high-level technical building blocks (containers). A container represents an application or a data store—something that needs to be running for the overall system to work.\n\n**Key elements:**\n- Web applications\n- Mobile apps\n- Desktop applications\n- Microservices\n- Database management systems\n- File systems\n- Message buses\n\n### Level 3: Component Diagram\n\nThe Component diagram zooms into an individual container to show the components inside it. These components are grouped implementations of functionality, often aligned with architectural layers or domain concepts.\n\n**Key elements:**\n- Groups of related functionality\n- Domain-specific modules\n- Architectural layers\n- APIs\n\n### Level 4: Code Diagram\n\nThe Code diagram zooms into a component to show how it is implemented, using UML class diagrams, entity relationship diagrams, or similar. This level is optional and often only used for the most complex or critical parts of the system.\n\n## Why We Use the C4 Model\n\n1. **Standardized Approach**: Provides a common language for describing software architecture\n2. **Multiple Levels of Detail**: Supports different audiences and conversations\n3. **Simple Notation**: Focuses on the structure rather than complex notation\n4. **Flexible Implementation**: Can be implemented with various tools\n5. **Developer-Friendly**: Designed to be useful for software developers\n\n## How We Implement C4 with Structurizr\n\nWe use Structurizr DSL (Domain Specific Language) to define our C4 model. This approach:\n\n1. Allows version control of architecture alongside code\n2. Provides a textual representation that's easy to review\n3. Generates consistent diagrams from a single source of truth\n4. Supports automatic layout and styling\n\n## Buildappswith C4 Model Structure\n\nOur model is organized as follows:\n\n- **System Context**: Shows Buildappswith and its relationships with users and external systems\n- **Containers**: Depicts the key technical components of the platform (frontend, API, database, etc.)\n- **Components**: Details the internal structure of key containers (ongoing development)\n- **Code**: Links to source code where appropriate (used selectively)\n\n## Working with the C4 Model\n\nWhen developing new features or making architectural changes, consider:\n\n1. Does this change affect how users interact with the system? (Context level)\n2. Does this change introduce new containers or modify existing ones? (Container level)\n3. Does this change the internal component structure of a container? (Component level)\n4. Does this change require detailed code-level documentation? (Code level)\n\nUpdate the appropriate level(s) of the C4 model to reflect your changes.\n\n## Best Practices\n\n1. **Keep It Simple**: Focus on the essential structure rather than implementation details\n2. **Consistency**: Use consistent naming and relationships across diagrams\n3. **Meaningful Abstractions**: Ensure each element represents a meaningful concept\n4. **Appropriate Detail**: Include only the detail necessary for the audience\n5. **Regular Updates**: Keep diagrams in sync with implementation\n\n## References\n\n- [C4 Model Official Website](https://c4model.com/)\n- [Structurizr Documentation](https://docs.structurizr.com/)\n- [Simon Brown's Blog](https://simonbrown.je/)\n",
      "filename" : "C4_MODEL.md",
      "format" : "Markdown",
      "order" : 1,
      "title" : ""
    }, {
      "content" : "# Structurizr Guide for Buildappswith\n\nThis guide explains how to use Structurizr for working with the Buildappswith architecture documentation.\n\n## Setting Up Structurizr Lite\n\n### Prerequisites\n\n- Docker installed on your machine\n- Git repository cloned locally\n\n### Running Structurizr Lite\n\n1. Navigate to the architecture documentation directory:\n   ```bash\n   cd /Users/liamj/Documents/Development/buildappswith/docs/architecture/structurizr\n   ```\n\n2. Start the Structurizr Lite container:\n   ```bash\n   docker-compose up\n   ```\n\n3. Access Structurizr in your browser:\n   ```\n   http://localhost:8080\n   ```\n\n4. When finished, stop the container:\n   ```bash\n   docker-compose down\n   ```\n\n## Working with the DSL\n\nThe architecture is defined in the `workspace.dsl` file using the Structurizr Domain Specific Language.\n\n### Basic DSL Structure\n\n```\nworkspace \"Name\" \"Description\" {\n    model {\n        // People\n        user = person \"User\" \"Description\"\n        \n        // Systems\n        system = softwareSystem \"System\" \"Description\"\n        \n        // Relationships\n        user -> system \"Uses\"\n    }\n    \n    views {\n        // View definitions\n    }\n}\n```\n\n### Key Elements\n\n1. **People**: External users or roles\n   ```\n   client = person \"Client\" \"Description\"\n   ```\n\n2. **Software Systems**: High-level systems\n   ```\n   buildappswith = softwareSystem \"Buildappswith\" \"Description\"\n   ```\n\n3. **Containers**: Applications or data stores within a system\n   ```\n   webapp = container \"Web Application\" \"Description\" \"Technology\"\n   ```\n\n4. **Components**: Parts of a container\n   ```\n   controller = component \"Controller\" \"Description\" \"Technology\"\n   ```\n\n5. **Relationships**: Connections between elements\n   ```\n   client -> webapp \"Uses\"\n   ```\n\n### Common DSL Tasks\n\n#### Adding a New Person\n\n```\nnewRole = person \"Role Name\" \"Role Description\"\n```\n\n#### Adding a New System\n\n```\nnewSystem = softwareSystem \"System Name\" \"System Description\"\n```\n\n#### Adding a Container to a System\n\n```\nsystem {\n    newContainer = container \"Container Name\" \"Container Description\" \"Technology\"\n}\n```\n\n#### Creating Relationships\n\n```\nperson -> system \"Relationship Description\"\nsystem -> otherSystem \"Relationship Description\"\n```\n\n#### Creating Views\n\n```\nviews {\n    systemContext mySystem \"ContextName\" {\n        include *\n        autoLayout\n    }\n}\n```\n\n## Docker Directory Structure\n\nWhen running with Docker, files are mounted as follows:\n\n1. The `structurizr` directory is mounted to `/usr/local/structurizr` in the container\n2. The ADR files should be in `structurizr/decisions/`\n3. Documentation files should be in `structurizr/documentation/`\n\nThis structure ensures that paths in the workspace.dsl file work correctly:\n\n```\nworkspace \"Buildappswith Platform\" \"Description\" {\n    !adrs decisions\n    !docs documentation\n    \n    // rest of the model\n}\n```\n\n## Modifying the Architecture\n\nWhen making changes to the architecture:\n\n1. Update the relevant sections of the `workspace.dsl` file\n2. Save the file\n3. Refresh your browser to see the changes\n4. Commit the changes to version control\n\n## Best Practices\n\n1. **Incremental Updates**: Make small, focused changes\n2. **Clear Descriptions**: Provide meaningful descriptions for all elements\n3. **Consistent Naming**: Use consistent naming conventions\n4. **Technology Tags**: Include relevant technology information\n5. **Relationship Clarity**: Make relationship descriptions action-oriented\n\n## Common Issues\n\n### Missing Relationships\n\nIf elements aren't connected in diagrams, check that you've defined relationships between them.\n\n### Diagram Layout\n\nIf the automatic layout isn't optimal:\n- Try adjusting the element positions manually\n- Consider adding layout hints\n- Break complex diagrams into simpler views\n\n### Changes Not Appearing\n\nIf changes don't appear after saving:\n- Refresh the browser\n- Check for syntax errors in the DSL\n- Restart the Structurizr container if necessary\n\n## Reference\n\n- [Structurizr DSL Documentation](https://docs.structurizr.com/dsl)\n- [C4 Model](https://c4model.com/)\n",
      "filename" : "STRUCTURIZR_GUIDE.md",
      "format" : "Markdown",
      "order" : 2,
      "title" : ""
    } ]
  },
  "id" : 1,
  "lastModifiedDate" : "2025-04-26T10:00:40Z",
  "model" : {
    "people" : [ {
      "description" : "A small business owner or individual seeking to create an AI application",
      "id" : "1",
      "location" : "Unspecified",
      "name" : "Client",
      "properties" : {
        "structurizr.dsl.identifier" : "client"
      },
      "relationships" : [ {
        "description" : "Uses to commission AI applications",
        "destinationId" : "5",
        "id" : "20",
        "sourceId" : "1",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "An individual looking to develop AI literacy and application skills",
      "id" : "2",
      "location" : "Unspecified",
      "name" : "Learner",
      "properties" : {
        "structurizr.dsl.identifier" : "learner"
      },
      "relationships" : [ {
        "description" : "Uses to learn AI application development",
        "destinationId" : "5",
        "id" : "21",
        "sourceId" : "2",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "An experienced developer offering AI application development services",
      "id" : "3",
      "location" : "Unspecified",
      "name" : "Builder",
      "properties" : {
        "structurizr.dsl.identifier" : "builder"
      },
      "relationships" : [ {
        "description" : "Uses to offer services and showcase expertise",
        "destinationId" : "5",
        "id" : "22",
        "sourceId" : "3",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    }, {
      "description" : "Platform administrator managing the Buildappswith ecosystem",
      "id" : "4",
      "location" : "Unspecified",
      "name" : "Administrator",
      "properties" : {
        "structurizr.dsl.identifier" : "admin"
      },
      "relationships" : [ {
        "description" : "Manages and monitors",
        "destinationId" : "5",
        "id" : "23",
        "sourceId" : "4",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Person"
    } ],
    "softwareSystems" : [ {
      "containers" : [ {
        "description" : "Provides all platform functionality to users via their web browser",
        "documentation" : { },
        "id" : "6",
        "name" : "Single Page Application",
        "properties" : {
          "structurizr.dsl.identifier" : "singlepageapplication"
        },
        "relationships" : [ {
          "description" : "Makes API calls to",
          "destinationId" : "7",
          "id" : "12",
          "sourceId" : "6",
          "tags" : "Relationship",
          "technology" : "JSON/HTTP"
        }, {
          "description" : "Authenticates users via",
          "destinationId" : "9",
          "id" : "13",
          "sourceId" : "6",
          "tags" : "Relationship",
          "technology" : "JSON/HTTP"
        }, {
          "description" : "Loads assets from",
          "destinationId" : "11",
          "id" : "14",
          "sourceId" : "6",
          "tags" : "Relationship",
          "technology" : "HTTPS"
        } ],
        "tags" : "Element,Container,Web Browser",
        "technology" : "Next.js, React, TypeScript"
      }, {
        "description" : "Provides platform functionality via JSON/HTTP API",
        "documentation" : { },
        "id" : "7",
        "name" : "API Application",
        "properties" : {
          "structurizr.dsl.identifier" : "apiapplication"
        },
        "relationships" : [ {
          "description" : "Reads from and writes to",
          "destinationId" : "8",
          "id" : "15",
          "sourceId" : "7",
          "tags" : "Relationship",
          "technology" : "SQL/TCP"
        }, {
          "description" : "Verifies authentication via",
          "destinationId" : "9",
          "id" : "16",
          "sourceId" : "7",
          "tags" : "Relationship",
          "technology" : "JSON/HTTP"
        }, {
          "description" : "Processes payments via",
          "destinationId" : "10",
          "id" : "17",
          "sourceId" : "7",
          "tags" : "Relationship",
          "technology" : "JSON/HTTP"
        } ],
        "tags" : "Element,Container,API",
        "technology" : "Next.js API Routes"
      }, {
        "description" : "Stores user data, project information, learning resources, and platform content",
        "documentation" : { },
        "id" : "8",
        "name" : "Database",
        "properties" : {
          "structurizr.dsl.identifier" : "database"
        },
        "tags" : "Element,Container,Database",
        "technology" : "PostgreSQL"
      }, {
        "description" : "Handles user authentication and authorization",
        "documentation" : { },
        "id" : "9",
        "name" : "Authentication Provider",
        "properties" : {
          "structurizr.dsl.identifier" : "authprovider"
        },
        "tags" : "Element,Container,External Service",
        "technology" : "NextAuth.js (to be migrated to Clerk)"
      }, {
        "description" : "Processes payments for builder services",
        "documentation" : { },
        "id" : "10",
        "name" : "Payment Processor",
        "properties" : {
          "structurizr.dsl.identifier" : "paymentprocessor"
        },
        "tags" : "Element,Container,External Service",
        "technology" : "Stripe"
      }, {
        "description" : "Delivers static assets and optimizes content delivery",
        "documentation" : { },
        "id" : "11",
        "name" : "Content Delivery Network",
        "properties" : {
          "structurizr.dsl.identifier" : "contentdelivery"
        },
        "tags" : "Element,Container,External Service",
        "technology" : "Vercel Edge Network"
      } ],
      "description" : "A platform that democratizes AI application development through marketplace and educational resources",
      "documentation" : { },
      "id" : "5",
      "location" : "Unspecified",
      "name" : "Buildappswith Platform",
      "properties" : {
        "structurizr.dsl.identifier" : "buildappswith"
      },
      "relationships" : [ {
        "description" : "Recommends and integrates with",
        "destinationId" : "18",
        "id" : "24",
        "sourceId" : "5",
        "tags" : "Relationship"
      }, {
        "description" : "Sends emails via",
        "destinationId" : "19",
        "id" : "25",
        "sourceId" : "5",
        "tags" : "Relationship"
      } ],
      "tags" : "Element,Software System"
    }, {
      "description" : "Third-party AI tools and platforms recommended by Buildappswith",
      "documentation" : { },
      "id" : "18",
      "location" : "Unspecified",
      "name" : "External AI Tools",
      "properties" : {
        "structurizr.dsl.identifier" : "aitools"
      },
      "tags" : "Element,Software System,External System"
    }, {
      "description" : "System for sending emails to users",
      "documentation" : { },
      "id" : "19",
      "location" : "Unspecified",
      "name" : "Email System",
      "properties" : {
        "structurizr.dsl.identifier" : "email"
      },
      "tags" : "Element,Software System,External System"
    } ]
  },
  "name" : "Buildappswith Platform",
  "properties" : {
    "structurizr.dsl" : "d29ya3NwYWNlICJCdWlsZGFwcHN3aXRoIFBsYXRmb3JtIiAiQXJjaGl0ZWN0dXJlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBCdWlsZGFwcHN3aXRoIHBsYXRmb3JtIHVzaW5nIHRoZSBDNCBtb2RlbCIgewoKICAgICFhZHJzIGRlY2lzaW9ucwogICAgIWRvY3MgZG9jdW1lbnRhdGlvbgoKICAgIG1vZGVsIHsKICAgICAgICAvLyBQZW9wbGUvQWN0b3JzCiAgICAgICAgY2xpZW50ID0gcGVyc29uICJDbGllbnQiICJBIHNtYWxsIGJ1c2luZXNzIG93bmVyIG9yIGluZGl2aWR1YWwgc2Vla2luZyB0byBjcmVhdGUgYW4gQUkgYXBwbGljYXRpb24iCiAgICAgICAgbGVhcm5lciA9IHBlcnNvbiAiTGVhcm5lciIgIkFuIGluZGl2aWR1YWwgbG9va2luZyB0byBkZXZlbG9wIEFJIGxpdGVyYWN5IGFuZCBhcHBsaWNhdGlvbiBza2lsbHMiCiAgICAgICAgYnVpbGRlciA9IHBlcnNvbiAiQnVpbGRlciIgIkFuIGV4cGVyaWVuY2VkIGRldmVsb3BlciBvZmZlcmluZyBBSSBhcHBsaWNhdGlvbiBkZXZlbG9wbWVudCBzZXJ2aWNlcyIKICAgICAgICBhZG1pbiA9IHBlcnNvbiAiQWRtaW5pc3RyYXRvciIgIlBsYXRmb3JtIGFkbWluaXN0cmF0b3IgbWFuYWdpbmcgdGhlIEJ1aWxkYXBwc3dpdGggZWNvc3lzdGVtIgoKICAgICAgICAvLyBTb2Z0d2FyZSBTeXN0ZW1zCiAgICAgICAgYnVpbGRhcHBzd2l0aCA9IHNvZnR3YXJlU3lzdGVtICJCdWlsZGFwcHN3aXRoIFBsYXRmb3JtIiAiQSBwbGF0Zm9ybSB0aGF0IGRlbW9jcmF0aXplcyBBSSBhcHBsaWNhdGlvbiBkZXZlbG9wbWVudCB0aHJvdWdoIG1hcmtldHBsYWNlIGFuZCBlZHVjYXRpb25hbCByZXNvdXJjZXMiIHsKICAgICAgICAgICAgLy8gQ29udGFpbmVycwogICAgICAgICAgICBzaW5nbGVQYWdlQXBwbGljYXRpb24gPSBjb250YWluZXIgIlNpbmdsZSBQYWdlIEFwcGxpY2F0aW9uIiAiUHJvdmlkZXMgYWxsIHBsYXRmb3JtIGZ1bmN0aW9uYWxpdHkgdG8gdXNlcnMgdmlhIHRoZWlyIHdlYiBicm93c2VyIiAiTmV4dC5qcywgUmVhY3QsIFR5cGVTY3JpcHQiICJXZWIgQnJvd3NlciIKICAgICAgICAgICAgYXBpQXBwbGljYXRpb24gPSBjb250YWluZXIgIkFQSSBBcHBsaWNhdGlvbiIgIlByb3ZpZGVzIHBsYXRmb3JtIGZ1bmN0aW9uYWxpdHkgdmlhIEpTT04vSFRUUCBBUEkiICJOZXh0LmpzIEFQSSBSb3V0ZXMiICJBUEkiCiAgICAgICAgICAgIGRhdGFiYXNlID0gY29udGFpbmVyICJEYXRhYmFzZSIgIlN0b3JlcyB1c2VyIGRhdGEsIHByb2plY3QgaW5mb3JtYXRpb24sIGxlYXJuaW5nIHJlc291cmNlcywgYW5kIHBsYXRmb3JtIGNvbnRlbnQiICJQb3N0Z3JlU1FMIiAiRGF0YWJhc2UiCiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBFeHRlcm5hbCBpbnRlZ3JhdGlvbnMKICAgICAgICAgICAgYXV0aFByb3ZpZGVyID0gY29udGFpbmVyICJBdXRoZW50aWNhdGlvbiBQcm92aWRlciIgIkhhbmRsZXMgdXNlciBhdXRoZW50aWNhdGlvbiBhbmQgYXV0aG9yaXphdGlvbiIgIk5leHRBdXRoLmpzICh0byBiZSBtaWdyYXRlZCB0byBDbGVyaykiICJFeHRlcm5hbCBTZXJ2aWNlIgogICAgICAgICAgICBwYXltZW50UHJvY2Vzc29yID0gY29udGFpbmVyICJQYXltZW50IFByb2Nlc3NvciIgIlByb2Nlc3NlcyBwYXltZW50cyBmb3IgYnVpbGRlciBzZXJ2aWNlcyIgIlN0cmlwZSIgIkV4dGVybmFsIFNlcnZpY2UiCiAgICAgICAgICAgIGNvbnRlbnREZWxpdmVyeSA9IGNvbnRhaW5lciAiQ29udGVudCBEZWxpdmVyeSBOZXR3b3JrIiAiRGVsaXZlcnMgc3RhdGljIGFzc2V0cyBhbmQgb3B0aW1pemVzIGNvbnRlbnQgZGVsaXZlcnkiICJWZXJjZWwgRWRnZSBOZXR3b3JrIiAiRXh0ZXJuYWwgU2VydmljZSIKICAgICAgICAgICAgCiAgICAgICAgICAgIC8vIENvbXBvbmVudHMKICAgICAgICAgICAgLy8gRnJvbnRlbmQgQ29tcG9uZW50cwogICAgICAgICAgICBzaW5nbGVQYWdlQXBwbGljYXRpb24gLT4gYXBpQXBwbGljYXRpb24gIk1ha2VzIEFQSSBjYWxscyB0byIgIkpTT04vSFRUUCIKICAgICAgICAgICAgc2luZ2xlUGFnZUFwcGxpY2F0aW9uIC0+IGF1dGhQcm92aWRlciAiQXV0aGVudGljYXRlcyB1c2VycyB2aWEiICJKU09OL0hUVFAiCiAgICAgICAgICAgIHNpbmdsZVBhZ2VBcHBsaWNhdGlvbiAtPiBjb250ZW50RGVsaXZlcnkgIkxvYWRzIGFzc2V0cyBmcm9tIiAiSFRUUFMiCiAgICAgICAgICAgIAogICAgICAgICAgICAvLyBBUEkgQ29tcG9uZW50cwogICAgICAgICAgICBhcGlBcHBsaWNhdGlvbiAtPiBkYXRhYmFzZSAiUmVhZHMgZnJvbSBhbmQgd3JpdGVzIHRvIiAiU1FML1RDUCIKICAgICAgICAgICAgYXBpQXBwbGljYXRpb24gLT4gYXV0aFByb3ZpZGVyICJWZXJpZmllcyBhdXRoZW50aWNhdGlvbiB2aWEiICJKU09OL0hUVFAiCiAgICAgICAgICAgIGFwaUFwcGxpY2F0aW9uIC0+IHBheW1lbnRQcm9jZXNzb3IgIlByb2Nlc3NlcyBwYXltZW50cyB2aWEiICJKU09OL0hUVFAiCiAgICAgICAgfQoKICAgICAgICAvLyBFeHRlcm5hbCBTeXN0ZW1zCiAgICAgICAgYWlUb29scyA9IHNvZnR3YXJlU3lzdGVtICJFeHRlcm5hbCBBSSBUb29scyIgIlRoaXJkLXBhcnR5IEFJIHRvb2xzIGFuZCBwbGF0Zm9ybXMgcmVjb21tZW5kZWQgYnkgQnVpbGRhcHBzd2l0aCIgIkV4dGVybmFsIFN5c3RlbSIKICAgICAgICBlbWFpbCA9IHNvZnR3YXJlU3lzdGVtICJFbWFpbCBTeXN0ZW0iICJTeXN0ZW0gZm9yIHNlbmRpbmcgZW1haWxzIHRvIHVzZXJzIiAiRXh0ZXJuYWwgU3lzdGVtIgoKICAgICAgICAvLyBSZWxhdGlvbnNoaXBzIGJldHdlZW4gcGVvcGxlIGFuZCBzeXN0ZW1zCiAgICAgICAgY2xpZW50IC0+IGJ1aWxkYXBwc3dpdGggIlVzZXMgdG8gY29tbWlzc2lvbiBBSSBhcHBsaWNhdGlvbnMiCiAgICAgICAgbGVhcm5lciAtPiBidWlsZGFwcHN3aXRoICJVc2VzIHRvIGxlYXJuIEFJIGFwcGxpY2F0aW9uIGRldmVsb3BtZW50IgogICAgICAgIGJ1aWxkZXIgLT4gYnVpbGRhcHBzd2l0aCAiVXNlcyB0byBvZmZlciBzZXJ2aWNlcyBhbmQgc2hvd2Nhc2UgZXhwZXJ0aXNlIgogICAgICAgIGFkbWluIC0+IGJ1aWxkYXBwc3dpdGggIk1hbmFnZXMgYW5kIG1vbml0b3JzIgogICAgICAgIAogICAgICAgIGJ1aWxkYXBwc3dpdGggLT4gYWlUb29scyAiUmVjb21tZW5kcyBhbmQgaW50ZWdyYXRlcyB3aXRoIgogICAgICAgIGJ1aWxkYXBwc3dpdGggLT4gZW1haWwgIlNlbmRzIGVtYWlscyB2aWEiCiAgICB9CgogICAgdmlld3MgewogICAgICAgIHN5c3RlbUNvbnRleHQgYnVpbGRhcHBzd2l0aCAiU3lzdGVtQ29udGV4dCIgewogICAgICAgICAgICBpbmNsdWRlICoKICAgICAgICAgICAgYXV0b0xheW91dAogICAgICAgIH0KCiAgICAgICAgY29udGFpbmVyIGJ1aWxkYXBwc3dpdGggIkNvbnRhaW5lcnMiIHsKICAgICAgICAgICAgaW5jbHVkZSAqCiAgICAgICAgICAgIGF1dG9MYXlvdXQKICAgICAgICB9CgogICAgICAgIHRoZW1lIGRlZmF1bHQKICAgICAgICAKICAgICAgICBzdHlsZXMgewogICAgICAgICAgICBlbGVtZW50ICJQZXJzb24iIHsKICAgICAgICAgICAgICAgIHNoYXBlIFBlcnNvbgogICAgICAgICAgICAgICAgYmFja2dyb3VuZCAjMDg0MjdCCiAgICAgICAgICAgICAgICBjb2xvciAjZmZmZmZmCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxlbWVudCAiV2ViIEJyb3dzZXIiIHsKICAgICAgICAgICAgICAgIHNoYXBlIFdlYkJyb3dzZXIKICAgICAgICAgICAgfQogICAgICAgICAgICBlbGVtZW50ICJEYXRhYmFzZSIgewogICAgICAgICAgICAgICAgc2hhcGUgQ3lsaW5kZXIKICAgICAgICAgICAgfQogICAgICAgICAgICBlbGVtZW50ICJFeHRlcm5hbCBTZXJ2aWNlIiB7CiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kICM5OTk5OTkKICAgICAgICAgICAgfQogICAgICAgICAgICBlbGVtZW50ICJFeHRlcm5hbCBTeXN0ZW0iIHsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQgIzk5OTk5OQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQp9"
  },
  "views" : {
    "configuration" : {
      "branding" : { },
      "lastSavedView" : "SystemContext",
      "styles" : {
        "elements" : [ {
          "background" : "#08427b",
          "color" : "#ffffff",
          "shape" : "Person",
          "tag" : "Person"
        }, {
          "shape" : "WebBrowser",
          "tag" : "Web Browser"
        }, {
          "shape" : "Cylinder",
          "tag" : "Database"
        }, {
          "background" : "#999999",
          "tag" : "External Service"
        }, {
          "background" : "#999999",
          "tag" : "External System"
        } ]
      },
      "terminology" : { },
      "themes" : [ "https://static.structurizr.com/themes/default/theme.json" ]
    },
    "containerViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "6",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "7",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "8",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "9",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "10",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "11",
        "x" : 0,
        "y" : 0
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "Containers",
      "order" : 2,
      "relationships" : [ {
        "id" : "12"
      }, {
        "id" : "13"
      }, {
        "id" : "14"
      }, {
        "id" : "15"
      }, {
        "id" : "16"
      }, {
        "id" : "17"
      } ],
      "softwareSystemId" : "5"
    } ],
    "systemContextViews" : [ {
      "automaticLayout" : {
        "applied" : false,
        "edgeSeparation" : 0,
        "implementation" : "Graphviz",
        "nodeSeparation" : 300,
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "vertices" : false
      },
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "2",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "3",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "4",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "5",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "18",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "19",
        "x" : 0,
        "y" : 0
      } ],
      "enterpriseBoundaryVisible" : true,
      "key" : "SystemContext",
      "order" : 1,
      "relationships" : [ {
        "id" : "20"
      }, {
        "id" : "21"
      }, {
        "id" : "22"
      }, {
        "id" : "23"
      }, {
        "id" : "24"
      }, {
        "id" : "25"
      } ],
      "softwareSystemId" : "5"
    } ]
  }
}