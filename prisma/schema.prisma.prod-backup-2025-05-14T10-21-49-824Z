// This schema is derived from the backup data structure

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String           @id @default(cuid())
  name             String?
  email            String           @unique
  emailVerified    DateTime?
  image            String?
  stripeCustomerId String?
  verified         Boolean          @default(false)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
  roles            String[]         @default(["CLIENT"])
  isFounder        Boolean          @default(false)
  clerkId          String?          @unique
  isDemo           Boolean          @default(false)
  
  builderProfile   BuilderProfile?
  clientProfile    ClientProfile?
  sessionTypes     SessionType[]
  
  @@index([email])
}

model BuilderProfile {
  id                String           @id @default(cuid())
  userId            String           @unique
  bio               String?
  headline          String?
  hourlyRate        Float?
  featuredBuilder   Boolean          @default(false)
  domains           String[]
  badges            String[]
  rating            Float?
  portfolioItems    Json[]
  validationTier    Int              @default(3)
  availableForHire  Boolean          @default(true)
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  socialLinks       Json?
  adhd_focus        Boolean          @default(false)
  searchable        Boolean          @default(true)
  featured          Boolean          @default(false)
  displayName       String?
  tagline           String?
  topSkills         String[]
  expertiseAreas    Json?
  availability      String?
  completedProjects Int              @default(0)
  responseRate      Float?
  
  user              User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([searchable])
}

model ClientProfile {
  id              String           @id @default(cuid())
  userId          String           @unique
  bio             String?
  headline        String?
  preferences     Json?
  adhd_focus      Boolean          @default(false)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  
  user            User             @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SessionType {
  id              String           @id @default(cuid())
  userId          String
  title           String
  description     String?
  duration        Int
  price           Int
  active          Boolean          @default(true)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  
  user            User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId, active])
}